{"version":3,"file":"ngx-three.mjs","sources":["../../../projects/ngx-three/src/lib/util.ts","../../../projects/ngx-three/src/lib/loaders/LazyObject3dProxy.ts","../../../projects/ngx-three/src/lib/ThWrapperBase.ts","../../../projects/ngx-three/src/lib/ThObjectBase.ts","../../../projects/ngx-three/src/lib/generated/ThObject3D.ts","../../../projects/ngx-three/src/lib/events/raycaster.service.ts","../../../projects/ngx-three/src/lib/events/raycaster.events.directive.ts","../../../projects/ngx-three/src/lib/generated/ThEffectComposerGen.ts","../../../projects/ngx-three/src/lib/generated/ThCamera.ts","../../../projects/ngx-three/src/lib/generated/ThScene.ts","../../../projects/ngx-three/src/lib/ThEngine.service.ts","../../../projects/ngx-three/src/lib/ThView.ts","../../../projects/ngx-three/src/lib/generated/overrides/ThEffectComposer.ts","../../../projects/ngx-three/src/lib/ThPassBase.ts","../../../projects/ngx-three/src/lib/generated/ThPass.ts","../../../projects/ngx-three/src/lib/generated/ThRenderPassGen.ts","../../../projects/ngx-three/src/lib/generated/overrides/ThRenderPass.ts","../../../projects/ngx-three/src/lib/generated/ThAdaptiveToneMappingPass.ts","../../../projects/ngx-three/src/lib/generated/ThAfterimagePass.ts","../../../projects/ngx-three/src/lib/generated/ThLight.ts","../../../projects/ngx-three/src/lib/generated/ThAmbientLight.ts","../../../projects/ngx-three/src/lib/generated/ThLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThAmbientLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThPerspectiveCamera.ts","../../../projects/ngx-three/src/lib/generated/ThArrayCamera.ts","../../../projects/ngx-three/src/lib/generated/ThArrowHelper.ts","../../../projects/ngx-three/src/lib/generated/ThAudio.ts","../../../projects/ngx-three/src/lib/generated/ThAudioListener.ts","../../../projects/ngx-three/src/lib/generated/ThLine.ts","../../../projects/ngx-three/src/lib/generated/ThLineSegments.ts","../../../projects/ngx-three/src/lib/generated/ThAxesHelper.ts","../../../projects/ngx-three/src/lib/generated/ThBloomPass.ts","../../../projects/ngx-three/src/lib/generated/ThBokehPass.ts","../../../projects/ngx-three/src/lib/generated/ThBone.ts","../../../projects/ngx-three/src/lib/generated/ThBox3Helper.ts","../../../projects/ngx-three/src/lib/ThGeometryBase.ts","../../../projects/ngx-three/src/lib/generated/ThBufferGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThBoxGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThBoxHelper.ts","../../../projects/ngx-three/src/lib/generated/ThBoxLineGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThCameraHelper.ts","../../../projects/ngx-three/src/lib/generated/ThCircleGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThClearMaskPass.ts","../../../projects/ngx-three/src/lib/generated/ThClearPass.ts","../../../projects/ngx-three/src/lib/generated/ThCylinderGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThConeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThConvexGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThCubeCamera.ts","../../../projects/ngx-three/src/lib/generated/ThCubeTexturePass.ts","../../../projects/ngx-three/src/lib/generated/ThDecalGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDirectionalLight.ts","../../../projects/ngx-three/src/lib/generated/ThDirectionalLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPolyhedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDodecahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThDotScreenPass.ts","../../../projects/ngx-three/src/lib/ThCanvas.ts","../../../projects/ngx-three/src/lib/ThControlBase.ts","../../../projects/ngx-three/src/lib/generated/ThDragControls.ts","../../../projects/ngx-three/src/lib/generated/ThEdgesGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThExtrudeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThFilmPass.ts","../../../projects/ngx-three/src/lib/generated/ThFirstPersonControls.ts","../../../projects/ngx-three/src/lib/generated/ThFlyControls.ts","../../../projects/ngx-three/src/lib/generated/ThGlitchPass.ts","../../../projects/ngx-three/src/lib/generated/ThGridHelper.ts","../../../projects/ngx-three/src/lib/generated/ThGroup.ts","../../../projects/ngx-three/src/lib/generated/ThHalftonePass.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLight.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThHemisphereLightProbe.ts","../../../projects/ngx-three/src/lib/generated/ThIcosahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThInstancedBufferGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThMesh.ts","../../../projects/ngx-three/src/lib/generated/ThInstancedMesh.ts","../../../projects/ngx-three/src/lib/generated/ThLatheGeometry.ts","../../../projects/ngx-three/src/lib/ThMaterialBase.ts","../../../projects/ngx-three/src/lib/generated/ThMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineBasicMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineDashedMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThLineLoop.ts","../../../projects/ngx-three/src/lib/generated/ThLOD.ts","../../../projects/ngx-three/src/lib/generated/ThShaderPass.ts","../../../projects/ngx-three/src/lib/generated/ThLUTPass.ts","../../../projects/ngx-three/src/lib/generated/ThOrbitControls.ts","../../../projects/ngx-three/src/lib/generated/ThMapControls.ts","../../../projects/ngx-three/src/lib/generated/ThMaskPass.ts","../../../projects/ngx-three/src/lib/generated/ThMeshBasicMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshDepthMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshDistanceMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshLambertMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshMatcapMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshNormalMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshPhongMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshStandardMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshPhysicalMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThMeshToonMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThOctahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThOrthographicCamera.ts","../../../projects/ngx-three/src/lib/generated/ThOutlinePass.ts","../../../projects/ngx-three/src/lib/generated/ThParametricGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThPlaneGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThPlaneHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPointerLockControls.ts","../../../projects/ngx-three/src/lib/generated/ThPointLight.ts","../../../projects/ngx-three/src/lib/generated/ThPointLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPoints.ts","../../../projects/ngx-three/src/lib/generated/ThPointsMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThPolarGridHelper.ts","../../../projects/ngx-three/src/lib/generated/ThPositionalAudio.ts","../../../projects/ngx-three/src/lib/generated/ThShaderMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThRawShaderMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThRectAreaLight.ts","../../../projects/ngx-three/src/lib/generated/ThRingGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThRoundedBoxGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSAOPass.ts","../../../projects/ngx-three/src/lib/generated/ThSavePass.ts","../../../projects/ngx-three/src/lib/generated/ThShadowMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThShapeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSkeletonHelper.ts","../../../projects/ngx-three/src/lib/generated/ThSkinnedMesh.ts","../../../projects/ngx-three/src/lib/generated/ThSMAAPass.ts","../../../projects/ngx-three/src/lib/generated/ThSphereGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThSpotLight.ts","../../../projects/ngx-three/src/lib/generated/ThSpotLightHelper.ts","../../../projects/ngx-three/src/lib/generated/ThSprite.ts","../../../projects/ngx-three/src/lib/generated/ThSpriteMaterial.ts","../../../projects/ngx-three/src/lib/generated/ThSSAARenderPass.ts","../../../projects/ngx-three/src/lib/generated/ThSSAOPass.ts","../../../projects/ngx-three/src/lib/generated/ThSSRPass.ts","../../../projects/ngx-three/src/lib/generated/ThSSRrPass.ts","../../../projects/ngx-three/src/lib/generated/ThStereoCamera.ts","../../../projects/ngx-three/src/lib/generated/ThTAARenderPass.ts","../../../projects/ngx-three/src/lib/generated/ThTeapotGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTetrahedronGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTextGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTexturePass.ts","../../../projects/ngx-three/src/lib/generated/ThTorusGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTorusKnotGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThTrackballControls.ts","../../../projects/ngx-three/src/lib/generated/ThTransformControls.ts","../../../projects/ngx-three/src/lib/generated/ThTubeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ThUnrealBloomPass.ts","../../../projects/ngx-three/src/lib/generated/ThWireframeGeometry.ts","../../../projects/ngx-three/src/lib/generated/ngx-three-generated.module.ts","../../../projects/ngx-three/src/lib/loaders/ThLoader.ts","../../../projects/ngx-three/src/lib/loaders/ThGLTFLoader.ts","../../../projects/ngx-three/src/lib/pipes/color.pipe.ts","../../../projects/ngx-three/src/lib/pipes/vector.pipe.ts","../../../projects/ngx-three/src/lib/pipes/clone.pipe.ts","../../../projects/ngx-three/src/lib/stats/stats.directive.ts","../../../projects/ngx-three/src/lib/renderer/th-render.directive.ts","../../../projects/ngx-three/src/lib/ngx-three.module.ts","../../../projects/ngx-three/src/lib/generated/index.ts","../../../projects/ngx-three/src/lib/component.helpers.ts","../../../projects/ngx-three/src/public-api.ts","../../../projects/ngx-three/src/ngx-three.ts"],"sourcesContent":["export interface ThSettable {\n  set(...args: any): this;\n  copy?(value: any): this;\n}\n\nexport function isSettable(obj: any): obj is ThSettable {\n  return !!(obj && obj.set); // && obj.copy;\n}\n\n/**\n * tries to apply the new value to the target.\n * if the new value is 'setter arguments' then it uses set on the target.\n * else it tries to use the 'copy' method of the target if available\n * else it return the newValue as new target\n * if newValue is undefined the old target is returned\n *\n * @param target the target for the new value\n * @param newValue the value to be set\n * @returns the new target(value)\n */\nexport function applyValue<T>(target: T, newValue?: any[] | T): T {\n  if (isSettable(target)) {\n    if (newValue === undefined) {\n      return target as T;\n    }\n\n    if (Array.isArray(newValue)) {\n      target.set(...newValue);\n      return target as T;\n    }\n\n    if (target.copy && newValue) {\n      target.copy(newValue);\n      return target as T;\n    }\n\n    // just set the value\n    if (newValue !== undefined) {\n      target.set(newValue);\n      return target;\n    }\n  } else {\n    // apply the value\n    return newValue as T;\n  }\n\n  // nothing to do\n  return target;\n}\n\nexport function isDisposable(obj: any): obj is { dispose: () => void } {\n  if (obj && typeof obj.dispose === 'function') {\n    return true;\n  }\n  return false;\n}\n","import { Object3D, Event } from 'three';\nimport { applyValue, isSettable } from '../util';\n\nclass Object3DProxyHandler implements ProxyHandler<Object3D> {\n  protected objRef?: Object3D;\n  protected memberMap = new Map<keyof Object3D, any>();\n  protected children: Object3D[] = [];\n  protected eventListener: { [key: string]: ((event: Event) => void)[] } = {};\n\n  get(target: Object3D, p: keyof LazyObject3DProxy, receiver: any): any {\n    switch (p) {\n      case '__isProxy':\n        return true;\n      case 'applyToObject3D':\n        return this.applyToObject3D;\n      case 'objRef':\n        return this.objRef;\n      case 'add':\n        return this.add;\n      case 'remove':\n        return this.remove;\n      case 'children':\n        return this.objRef ? this.objRef.children : this.children;\n      default: {\n        const objKey = p as keyof Object3D;\n        let value = this.objRef ? this.objRef[objKey] : this.memberMap.get(objKey);\n        if (value === undefined) {\n          value = target[objKey];\n          if (value !== undefined) {\n            // this is necessary for complex members\n            // (returned by reference, they might be altered, we have to reapply them to the real object )\n            this.memberMap.set(objKey, value);\n          }\n        }\n        return value ?? target[objKey];\n      }\n    }\n  }\n\n  set(target: Object3D, p: keyof LazyObject3DProxy, value: any, receiver: any): boolean {\n    if (p === 'objRef') {\n      if (value) {\n        this.applyToObject3D(value);\n      }\n      this.objRef = value;\n    } else {\n      // store to the member map\n      this.memberMap.set(p as keyof Object3D, value);\n      if (this.objRef) {\n        // and apply to the real object if present\n        (this.objRef as any)[p] = value;\n      }\n    }\n    return true;\n  }\n\n  add = (...object: Object3D[]): this => {\n    if (this.objRef) {\n      this.objRef.add(...object);\n    }\n\n    this.children.push(...object);\n\n    return this;\n  };\n\n  remove = (...object: Object3D[]): this => {\n    if (this.objRef) {\n      this.objRef.remove(...object);\n    }\n\n    for (const obj of object) {\n      const index = this.children.indexOf(obj);\n      if (index >= 0) {\n        this.children = this.children.splice(index, 1);\n      }\n    }\n\n    return this;\n  };\n\n  applyToObject3D = (objRef: Object3D) => {\n    this.memberMap.forEach((value, key) => {\n      const member = (objRef as any)[key];\n      if (isSettable(member)) {\n        applyValue(member, value);\n      } else {\n        (objRef as any)[key] = value;\n      }\n    });\n\n    this.children.forEach((child) => objRef.add(child));\n\n    if (this.objRef?.parent) {\n      const parent = this.objRef?.parent;\n      parent.remove(this.objRef);\n      parent.add(objRef);\n    }\n  };\n\n  /**\n   * Adds a listener to an event type.\n   *\n   * @param type The type of event to listen to.\n   * @param listener The function that gets called when the event is fired.\n   */\n  addEventListener = (type: string, listener: (event: Event) => void): void => {\n    let arr = this.eventListener[type];\n    if (!arr) {\n      arr = [];\n      this.eventListener[type] = arr;\n    }\n\n    arr.push(listener);\n\n    if (this.objRef) {\n      this.objRef.addEventListener(type, listener);\n    }\n  };\n\n  /**\n   * Removes a listener from an event type.\n   *\n   * @param type The type of the listener that gets removed.\n   * @param listener The listener function that gets removed.\n   */\n  removeEventListener = (type: string, listener: (event: Event) => void): void => {\n    const arr = this.eventListener[type];\n    if (!arr) {\n      return;\n    }\n\n    const index = arr.indexOf(listener);\n    if (index >= 0) {\n      arr.splice(index, 1);\n    }\n  };\n}\n\nexport interface LazyObject3DProxy extends Object3D {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  readonly __isProxy?: boolean;\n  objRef?: Object3D;\n  applyToObject3D(real: Object3D): void;\n}\n\nexport function createLazyObject3DProxy(): LazyObject3DProxy {\n  return new Proxy<LazyObject3DProxy>(new Object3D() as LazyObject3DProxy, new Object3DProxyHandler());\n}\n\nexport function isLazyObject3dProxy(object: Object3D | LazyObject3DProxy): object is LazyObject3DProxy {\n  // eslint-disable-next-line no-underscore-dangle\n  return (object as LazyObject3DProxy).__isProxy === true && (object as LazyObject3DProxy).objRef === undefined;\n}\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, Type } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { EventDispatcher, Object3D } from 'three';\nimport { isLazyObject3dProxy } from './loaders/LazyObject3dProxy';\nimport { ThWrapperLifeCycle } from './ThWrapperLifeCycle';\nimport { isDisposable } from './util';\n\n@Component({\n  selector: 'th-abs-wrapper',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThWrapperBase<T, ARGS = unknown> implements ThWrapperLifeCycle, OnChanges, OnInit, OnDestroy {\n  protected _objRef?: T;\n  protected _objRef$?: ReplaySubject<T>;\n\n  @Input()\n  public autoAddToParent = true;\n\n  @Input()\n  public autoDispose = true;\n\n  @Input()\n  set objRef(ref: T | undefined) {\n    this.applyObjRef(ref);\n  }\n\n  get objRef() {\n    return this._objRef;\n  }\n\n  // emit the changes\n  protected updateEmitter?: EventEmitter<SimpleChanges>;\n\n  constructor() {\n    // nothing to do\n  }\n\n  addToParent(): void {\n    // nothing to do, implement it in a derived class\n  }\n  removeFromParent(): void {\n    // nothing to do, implement it in a derived class\n  }\n\n  @Input()\n  public args?: ARGS;\n\n  @Output()\n  public get onUpdate(): Observable<SimpleChanges> {\n    if (!this.updateEmitter) {\n      this.updateEmitter = new EventEmitter();\n    }\n    return this.updateEmitter;\n  }\n\n  /**\n   * emits the last assigned object ref\n   */\n  @Output()\n  public get objRef$(): Observable<T> {\n    if (!this._objRef$) {\n      this._objRef$ = new ReplaySubject(1);\n    }\n    return this._objRef$;\n  }\n\n  ngOnInit(): void {\n    if (!this.objRef) {\n      this.objRef = this.createThreeInstance(this.args);\n    }\n  }\n\n  // Override this\n  public getType(): Type<any> {\n    throw new Error('derive me');\n  }\n\n  public createThreeInstance(args?: unknown) {\n    if(Array.isArray(args)) {\n      return new (this.getType())( ...(args as any[]));\n    } else {\n      return new (this.getType())(args);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log('on changes');\n    if (this.objRef && !isLazyObject3dProxy(this.objRef as any)) {\n      // the object is already set and it is no proxy\n\n      // emit the changes\n      this.emitPropertyChanges(changes);\n\n      // TODO: request animation frame\n\n      return;\n    }\n\n    if (changes.objRef?.currentValue) {\n      this.objRef = changes.objRef?.currentValue;\n    } else if (!this.objRef) {\n      this.objRef = this.createThreeInstance(changes.args?.currentValue);\n    }\n\n    // eslint-disable-next-line guard-for-in\n    for (const key in changes) {\n      (this as any)[key] = changes[key].currentValue;\n    }\n    this.emitPropertyChanges(changes);\n  }\n\n  public disposeObjRef() {\n    if (isDisposable(this.objRef)) {\n      this.objRef.dispose();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeFromParent();\n\n    if (this.autoDispose) {\n      this.disposeObjRef();\n    }\n  }\n\n  protected applyObjRef(objRef: T | undefined) {\n    if (this._objRef === objRef) {\n      return;\n    }\n    this.removeFromParent();\n    this._objRef = objRef;\n    if (this.autoAddToParent) {\n      this.addToParent();\n    }\n    this.emitObjRefChange();\n  }\n\n  protected emitObjRefChange() {\n    // TODO only emit change if _objRef is no proxy,\n    // and/or trigger emit over objRef event emitter\n    if (this._objRef && !isLazyObject3dProxy(this._objRef as any)) {\n      ((this._objRef as unknown) as Object3D).dispatchEvent?.({ type: 'loaded', object: this._objRef });\n      if (this._objRef$) {\n        this._objRef$.next(this._objRef);\n      }\n    }\n  }\n\n  protected emitPropertyChanges(changes: SimpleChanges) {\n    ((this.objRef as unknown) as EventDispatcher).dispatchEvent?.({ type: 'changes', changes });\n    if (this.updateEmitter) {\n      this.updateEmitter.next(changes);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Object3D, Vector3 } from 'three';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-object',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThObjectBase<T extends Object3D, ARGS = unknown> extends ThWrapperBase<T, ARGS> implements OnInit {\n  constructor(public parent: ThObjectBase<any>) {\n    super();\n  }\n\n  public addToParent() {\n    if (this._objRef && this._objRef.parent && this._objRef.parent.uuid !== this.parent.objRef.uuid) {\n      this.parent.objRef.add(this._objRef);\n    }\n  }\n\n  public removeFromParent() {\n    this._objRef?.parent?.remove(this._objRef);\n  }\n\n  protected applyObjRef(objRef: T | undefined) {\n    this.attachToParent(objRef, this._objRef);\n    this._objRef = objRef;\n    this.emitObjRefChange();\n  }\n\n  protected attachToParent(newRef?: T, oldRef?: T) {\n    if (!this.parent.objRef || (newRef === oldRef && oldRef?.parent?.uuid === this.parent.objRef.uuid)) {\n      return;\n    }\n\n    // remove old obj from parent\n    if (oldRef && oldRef.parent) {\n      oldRef.parent.remove(oldRef);\n    }\n\n    // add new obj to parent\n    if (newRef && (!newRef.parent || (newRef.parent && newRef.parent.uuid !== this.parent.objRef.uuid))) {\n      this.parent.objRef.add(newRef);\n    }\n  }\n\n  // object 3d methods\n  @Input()\n  public set lookAt(vector: Vector3 | [x: number, y?: number, z?: number]) {\n    Promise.resolve().then(() => {\n      // execute next microtick, to assume all\n      // position changes already happend,\n      // because lookAt triggers a world matrix calculation\n      if (!this.objRef) {\n        return;\n      }\n      if (Array.isArray(vector)) {\n        this.objRef.lookAt(...vector);\n      } else {\n        this.objRef.lookAt(vector);\n      }\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport {\n  AnimationClip,\n  BaseEvent,\n  BufferGeometry,\n  Camera,\n  Euler,\n  Event,\n  Group,\n  Layers,\n  Material,\n  Matrix3,\n  Matrix4,\n  Object3D,\n  Quaternion,\n  Scene,\n  Vector3,\n  WebGLRenderer,\n} from 'three';\nimport { ThObjectBase } from '../ThObjectBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-object3D',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n})\nexport class ThObject3D<\n  E extends BaseEvent = Event,\n  T extends Object3D<E> = Object3D<E>,\n  TARGS = []\n> extends ThObjectBase<T, TARGS> {\n  public getType(): Type<Object3D<E>> {\n    return Object3D;\n  }\n\n  @Input()\n  public set id(value: number) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set children(value: Object3D[]) {\n    if (this._objRef) {\n      this._objRef.children = value;\n    }\n  }\n\n  @Input()\n  public set up(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.up = applyValue<Vector3>(this._objRef.up, value);\n    }\n  }\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  @Input()\n  public set rotation(\n    value: Euler | [x: number, y: number, z: number, order?: string]\n  ) {\n    if (this._objRef) {\n      applyValue<Euler>(this._objRef.rotation, value);\n    }\n  }\n  @Input()\n  public set quaternion(\n    value: Quaternion | [x: number, y: number, z: number, w: number]\n  ) {\n    if (this._objRef) {\n      applyValue<Quaternion>(this._objRef.quaternion, value);\n    }\n  }\n  @Input()\n  public set scale(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.scale, value);\n    }\n  }\n  @Input()\n  public set modelViewMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      applyValue<Matrix4>(this._objRef.modelViewMatrix, value);\n    }\n  }\n  @Input()\n  public set normalMatrix(\n    value:\n      | Matrix3\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n31: number,\n          n32: number,\n          n33: number\n        ]\n  ) {\n    if (this._objRef) {\n      applyValue<Matrix3>(this._objRef.normalMatrix, value);\n    }\n  }\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixWorld(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrixWorld = applyValue<Matrix4>(\n        this._objRef.matrixWorld,\n        value\n      );\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  @Input()\n  public set matrixWorldNeedsUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixWorldNeedsUpdate = value;\n    }\n  }\n\n  @Input()\n  public set layers(value: Layers | [channel: number]) {\n    if (this._objRef) {\n      this._objRef.layers = applyValue<Layers>(this._objRef.layers, value);\n    }\n  }\n  @Input()\n  public set visible(value: boolean) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n\n  @Input()\n  public set castShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.castShadow = value;\n    }\n  }\n\n  @Input()\n  public set receiveShadow(value: boolean) {\n    if (this._objRef) {\n      this._objRef.receiveShadow = value;\n    }\n  }\n\n  @Input()\n  public set frustumCulled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.frustumCulled = value;\n    }\n  }\n\n  @Input()\n  public set renderOrder(value: number) {\n    if (this._objRef) {\n      this._objRef.renderOrder = value;\n    }\n  }\n\n  @Input()\n  public set animations(value: AnimationClip[]) {\n    if (this._objRef) {\n      this._objRef.animations = value;\n    }\n  }\n\n  @Input()\n  public set userData(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  @Input()\n  public set customDepthMaterial(value: Material) {\n    if (this._objRef) {\n      this._objRef.customDepthMaterial = value;\n    }\n  }\n\n  @Input()\n  public set customDistanceMaterial(value: Material) {\n    if (this._objRef) {\n      this._objRef.customDistanceMaterial = value;\n    }\n  }\n\n  @Input()\n  public set onBeforeRender(\n    value: (\n      renderer: WebGLRenderer,\n      scene: Scene,\n      camera: Camera,\n      geometry: BufferGeometry,\n      material: Material,\n      group: Group\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onBeforeRender = value;\n    }\n  }\n\n  @Input()\n  public set onAfterRender(\n    value: (\n      renderer: WebGLRenderer,\n      scene: Scene,\n      camera: Camera,\n      geometry: BufferGeometry,\n      material: Material,\n      group: Group\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onAfterRender = value;\n    }\n  }\n\n  constructor(@SkipSelf() parent: ThObject3D) {\n    super(parent);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport * as THREE from 'three';\nimport { ThCamera } from '../generated/ThCamera';\nimport { RaycasterEventDirective } from './raycaster.events.directive';\n\n// eslint-disable-next-line no-shadow\nexport enum RaycasterEvent {\n  mouseEnter = 'mouseEnter',\n  mouseExit = 'mouseExit',\n  click = 'click'\n}\n\ninterface NearestIntersection {\n  target?: RaycasterEventDirective | null;\n  face?: THREE.Face | null;\n}\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n  private canvas?: HTMLCanvasElement;\n  private raycaster = new THREE.Raycaster();\n  private selected: RaycasterEventDirective | null = null;\n  private enabled = true;\n  private camera?: ThCamera;\n  private groups: Array<RaycasterEventDirective> = [];\n  private paused = false;\n\n  private maxClickDistance = 23;\n\n  private static instanceCnt = 0;\n\n  /**\n   * targets of the pointer down event\n   */\n  private pointerDownEvent?: PointerEvent;\n\n  public readonly nid = RaycasterService.instanceCnt++;\n\n  constructor() {\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n  }\n\n  public ngOnDestroy(): void {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.addEventListener('pointermove', this.onPointerMove);\n    this.canvas.addEventListener('pointerdown', this.onPointerDown);\n    this.canvas.addEventListener('pointerup', this.onPointerUp);\n  }\n\n  private unsubscribe() {\n    if (!this.canvas) {\n      throw new Error('missing canvas');\n    }\n    this.canvas.removeEventListener('pointermove', this.onPointerMove);\n    this.canvas.removeEventListener('pointerdown', this.onPointerDown);\n    this.canvas.removeEventListener('pointerup', this.onPointerUp);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public init(camera: ThCamera, canvas: HTMLCanvasElement) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n    this.canvas = canvas;\n    this.subscribe();\n  }\n\n  public addEventTarget(target: RaycasterEventDirective) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(target);\n  }\n\n  public removeEventTarget(target: RaycasterEventDirective) {\n    const index = this.groups.indexOf(target);\n    if (index >= 0) {\n      this.groups.splice(index, 1);\n    }\n  }\n\n  private onPointerMove(event: any /*MouseEvent  & { layerX: number, layerY: number}*/) {\n    if (!this.isReady()) {\n      return;\n    }\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i.target) {\n      if (this.selected) {\n        this.selected.host.objRef?.dispatchEvent({\n          type: RaycasterEvent.mouseExit\n        });\n        this.selected.onMouseExit();\n        this.selected = null;\n      }\n      if (i && i.target) {\n        this.selected = i.target;\n        const evt = {\n          type: RaycasterEvent.mouseEnter,\n          face: i.face\n        };\n        this.selected.host.objRef?.dispatchEvent(evt);\n        this.selected.onMouseEnter(evt);\n      }\n    }\n  }\n\n  private onPointerDown(event: PointerEvent) {\n    this.maxClickDistance = event.width;\n    this.pointerDownEvent = event;\n  }\n\n  private onPointerUp(event: PointerEvent) {\n    const downEvent = this.pointerDownEvent;\n    this.pointerDownEvent = undefined;\n\n    if (!this.isReady() || this.calcPointerDownUpDinstance(event, downEvent) > this.maxClickDistance) {\n      return;\n    }\n    const i = this.getFirstIntersectedGroup((event as any).layerX, (event as any).layerY);\n    if (i && i.target && i.target.host.objRef) {\n      const evt = { type: RaycasterEvent.click, face: i.face };\n      i.target.host.objRef.dispatchEvent(evt);\n      i.target.onClick(evt);\n    }\n  }\n\n  private isReady(ignorePaused?: boolean): boolean {\n    return !!(this.enabled && (ignorePaused || !this.paused) && this.camera && this.camera.objRef && this.groups && this.groups.length > 0);\n  }\n\n  private calcPointerDownUpDinstance(upEvent: PointerEvent, downEvent?: PointerEvent) {\n    if (!downEvent) {\n      return Number.MAX_VALUE;\n    }\n    const xDist = (upEvent as any).layerX - (downEvent as any).layerX;\n    const yDist = (upEvent as any).layerY - (downEvent as any).layerY;\n    return Math.sqrt(xDist * xDist + yDist * yDist);\n  }\n\n  private getFirstIntersectedGroup(x: number, y: number): NearestIntersection {\n    if (!this.camera || !this.canvas || !this.camera.objRef) {\n      return { face: null, target: null };\n    }\n    x = (x / this.canvas.clientWidth) * 2 - 1;\n    y = -(y / this.canvas.clientHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector2(x, y);\n    this.raycaster.setFromCamera(mouseVector, this.camera.objRef);\n    let face = null;\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection | undefined;\n    let nearestGroup: RaycasterEventDirective | undefined;\n    for (const group of this.groups) {\n      const i = group.host.objRef;\n      if (!i) {\n        continue;\n      }\n      const intersection = this.raycaster.intersectObject(i, true);\n      if (intersection.length > 0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        face = nearestIntersection.face;\n        nearestGroup = group;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return {\n        target: nearestGroup,\n        face\n      };\n    } else {\n      return {\n        target: null,\n        face: null\n      };\n    }\n  }\n}\n","import { AfterViewInit, Directive, EventEmitter, Host, OnDestroy, Output } from '@angular/core';\nimport { Event } from 'three';\nimport { ThObject3D } from '../generated/ThObject3D';\n\nimport { RaycasterService } from './raycaster.service';\n\nexport interface RaycasterEmitEvent {\n  component: ThObject3D;\n  face?: THREE.Face;\n}\n\n@Directive({ selector: '[onClick], [onMouseEnter], [onMouseExit]' })\nexport class RaycasterEventDirective implements AfterViewInit, OnDestroy {\n  @Output('onMouseEnter') mouseEnter = new EventEmitter<RaycasterEmitEvent>();\n  @Output('onMouseExit') mouseExit = new EventEmitter<RaycasterEmitEvent>();\n  /* eslint-disable @angular-eslint/no-output-native */\n  @Output('onClick') click = new EventEmitter<RaycasterEmitEvent>();\n\n  constructor(@Host() public readonly host: ThObject3D, private raycasterService: RaycasterService) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    this.raycasterService.addEventTarget(this);\n    /*\n    const obj = this.host.obj;\n    // TODO: addEventListener, removeEventListener for proxy\n    if (this.mouseEnter.observers.length > 0) {\n      obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    }\n    if (this.mouseExit.observers.length > 0) {\n      obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    }\n    if (this.click.observers.length > 0) {\n      obj.addEventListener(RaycasterEvent.click, this.onClick);\n    }\n    */\n  }\n\n  private unSubscribeEvents() {\n    /*\n    const obj = this.host.obj;\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.click, this.onClick);\n    }\n    */\n    this.raycasterService.removeEventTarget(this);\n  }\n\n  public onMouseExit() {\n    this.mouseExit.emit({\n      component: this.host\n    });\n  }\n\n  public onMouseEnter(event: Event) {\n    // console.log('RaycasterGroupDirective.onMouseEnter', event);\n    this.mouseEnter.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  public onClick(event: Event) {\n    // console.log('onClick', event);\n    this.click.emit({\n      component: this.host,\n      face: event.face\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component, Input, Type } from '@angular/core';\nimport { Clock, WebGLRenderer, WebGLRenderTarget } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { ThWrapperBase } from '../ThWrapperBase';\n\n@Component({\n  selector: 'th-effectComposerGen',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n})\nexport class ThEffectComposerGen<\n  T extends EffectComposer = EffectComposer,\n  TARGS = [renderer: WebGLRenderer, renderTarget?: WebGLRenderTarget]\n> extends ThWrapperBase<T, TARGS> {\n  public getType(): Type<EffectComposer> {\n    return EffectComposer;\n  }\n\n  @Input()\n  public set renderer(value: WebGLRenderer) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n\n  @Input()\n  public set renderTarget1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget1 = value;\n    }\n  }\n\n  @Input()\n  public set renderTarget2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget2 = value;\n    }\n  }\n\n  @Input()\n  public set writeBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.writeBuffer = value;\n    }\n  }\n\n  @Input()\n  public set readBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.readBuffer = value;\n    }\n  }\n\n  @Input()\n  public set passes(value: Pass[]) {\n    if (this._objRef) {\n      this._objRef.passes = value;\n    }\n  }\n\n  @Input()\n  public set copyPass(value: ShaderPass) {\n    if (this._objRef) {\n      this._objRef.copyPass = value;\n    }\n  }\n\n  @Input()\n  public set clock(value: Clock) {\n    if (this._objRef) {\n      this._objRef.clock = value;\n    }\n  }\n\n  @Input()\n  public set renderToScreen(value: boolean) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, Event, Matrix4 } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-camera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThCamera) }],\n})\nexport class ThCamera<T extends Camera = Camera, TARGS = []> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<Camera> {\n    return Camera;\n  }\n\n  @Input()\n  public set matrixWorldInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrixWorldInverse = applyValue<Matrix4>(\n        this._objRef.matrixWorldInverse,\n        value\n      );\n    }\n  }\n  @Input()\n  public set projectionMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.projectionMatrix = applyValue<Matrix4>(\n        this._objRef.projectionMatrix,\n        value\n      );\n    }\n  }\n  @Input()\n  public set projectionMatrixInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.projectionMatrixInverse = applyValue<Matrix4>(\n        this._objRef.projectionMatrixInverse,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Event,\n  FogBase,\n  Material,\n  Scene,\n  Texture,\n  WebGLRenderer,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-scene',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThScene) }],\n})\nexport class ThScene<T extends Scene = Scene, TARGS = []> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<Scene> {\n    return Scene;\n  }\n\n  @Input()\n  public set type(value: 'Scene') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set fog(value: FogBase | null) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  @Input()\n  public set overrideMaterial(value: Material | null) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n\n  @Input()\n  public set autoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoUpdate = value;\n    }\n  }\n\n  @Input()\n  public set background(\n    value: null | Color | Texture | [color: ColorRepresentation]\n  ) {\n    if (this._objRef) {\n      this._objRef.background = applyValue<null | Color | Texture>(\n        this._objRef.background,\n        value\n      );\n    }\n  }\n  @Input()\n  public set environment(value: null | Texture) {\n    if (this._objRef) {\n      this._objRef.environment = value;\n    }\n  }\n\n  @Input()\n  public set onBeforeRender(\n    value: (\n      renderer: WebGLRenderer,\n      scene: Scene,\n      camera: Camera,\n      renderTarget: any // any required for Object3D.onBeforeRender compatibility\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onBeforeRender = value;\n    }\n  }\n\n  @Input()\n  public set onAfterRender(\n    value: (renderer: WebGLRenderer, scene: Scene, camera: Camera) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.onAfterRender = value;\n    }\n  }\n}\n","import { EventEmitter, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport * as THREE from 'three';\nimport { Vector4 } from 'three';\nimport { ThView } from './ThView';\n\n@Injectable()\nexport class ThEngineService implements OnDestroy {\n  private _renderer?: THREE.WebGLRenderer;\n  private views: ThView[] = [];\n  private frameId?: number;\n\n  private readonly beforeRenderEmitter = new EventEmitter<{engine: ThEngineService}>();\n  public readonly beforeRender$ = this.beforeRenderEmitter.asObservable();\n  public canvas?: HTMLCanvasElement;\n\n  // @ts-ignore\n  private resizeObserver?: ResizeObserver;\n\n  public constructor(private ngZone: NgZone) {}\n\n  public get renderer() {\n    return this._renderer;\n  }\n\n  public ngOnDestroy(): void {\n    if (this.frameId !== undefined) {\n      cancelAnimationFrame(this.frameId);\n    }\n\n    if (this.resizeObserver && this.canvas) {\n      this.resizeObserver.unobserve(this.canvas);\n    }\n  }\n\n  private initResizeObserver() {\n    // We have to run this outside angular zones,\n    // because it could trigger heavy changeDetection cycles.\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.canvas) {\n        throw new Error('missing canvas element');\n      }\n\n      if (!this.resizeObserver) {\n        // @ts-ignore\n        this.resizeObserver = new ResizeObserver(() => {\n          this.resize();\n        });\n      }\n      this.resizeObserver.observe(this.canvas);\n    });\n  }\n\n  private initRenderer(): void {\n    if (this._renderer) {\n      return;\n    }\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      alpha: true, // transparent background\n      antialias: true, // smooth edges\n      preserveDrawingBuffer: true\n    });\n\n    this.resize();\n\n    // this.renderer.setSize(this.canvas?.width ?? 0, this.canvas?.width ?? 0);\n  }\n\n  public setCanvas(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.initRenderer();\n    this.initResizeObserver();\n  }\n\n  public addView(view: ThView) {\n    this.views.push(view);\n  }\n\n  public requestAnimationFrame() {\n    if (this.frameId === undefined) {\n      this.ngZone.runOutsideAngular(\n        () =>\n          (this.frameId = requestAnimationFrame(() => {\n            this.render();\n          }))\n      );\n    }\n  }\n\n  /*\n  public animate(): void {\n    // We have to run this outside angular zones,\n    // because it could trigger heavy changeDetection cycles.\n    this.ngZone.runOutsideAngular(() => {\n      if (document.readyState !== 'loading') {\n        this.render();\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.render();\n        });\n      }\n    });\n  }\n  */\n\n  protected render(): void {\n    this.frameId = undefined;\n\n    // TODO: conditional rendere loop\n    this.requestAnimationFrame();\n\n    // emit before render\n    this.beforeRenderEmitter.next({engine: this});\n\n    for (const view of this.views) {\n      this.renderView(view);\n    }\n  }\n\n  protected renderView(view: ThView) {\n    if (!this._renderer) {\n      return;\n    }\n\n    const camera = view.camera;\n    const scene = view.scene;\n\n    if (!camera || !scene || !camera.objRef || !scene.objRef) {\n      return;\n    }\n\n    const renderer = this._renderer;\n\n    if (view.onRender.observers.length) {\n      this.ngZone.run(() =>\n        view.onRender.emit({\n          renderer,\n          scene,\n          camera\n        })\n      );\n    }\n\n    this.applyRendererParametersFromView(view);\n    if (view.effectComposer) {\n      view.effectComposer.render();\n    } else {\n      this._renderer.render(scene.objRef, camera.objRef);\n    }\n  }\n\n  protected applyRendererParametersFromView(view: ThView) {\n    if (!this._renderer) {\n      return;\n    }\n    if (view.viewPort) {\n      if (view.viewPort instanceof Vector4) {\n        this._renderer.setViewport(view.viewPort);\n      } else {\n        this._renderer.setViewport(view.viewPort.x, view.viewPort.y, view.viewPort.width, view.viewPort.height);\n      }\n    }\n\n    if (view.scissor) {\n      if (view.scissor instanceof Vector4) {\n        this._renderer.setScissor(view.scissor);\n      } else {\n        this._renderer.setScissor(view.scissor.x, view.scissor.y, view.scissor.width, view.scissor.height);\n      }\n    }\n\n    if (view.scissorTest !== undefined) {\n      this._renderer.setScissorTest(view.scissorTest);\n    }\n\n    if (view.clearColor) {\n      this._renderer.setClearColor(view.clearColor);\n    }\n\n    if (view.clearAlpha !== undefined) {\n      this._renderer.setClearAlpha(view.clearAlpha);\n    }\n\n    if (view.shadow !== undefined) {\n      this._renderer.shadowMap.enabled = true;\n    }\n  }\n\n  public resize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    const width = this.canvas?.parentElement?.clientWidth ?? 0;\n    const height = this.canvas?.parentElement?.clientHeight ?? 0;\n\n    this._renderer.setSize(width, height, false);\n\n    for (const view of this.views) {\n      if (!view.viewPort) {\n        if (view.camera && (view.camera.objRef as any).aspect) {\n          (view.camera.objRef as any).aspect = width / height;\n          (view.camera.objRef as any).updateProjectionMatrix();\n        }\n\n        view.effectComposer?.setSize(width, height);\n      }\n    }\n  }\n}\n","import { Component, ContentChild, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { Color, Object3D, Vector4 } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RaycasterService } from './events/raycaster.service';\nimport { ThCamera } from './generated/ThCamera';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThScene } from './generated/ThScene';\nimport { ThEngineService } from './ThEngine.service';\n\n\n@Component({\n  selector: 'th-view',\n  template: '',\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThView) }, RaycasterService]\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThView implements OnInit {\n  // eslint-disable-next-line @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match\n  protected _camera?: ThCamera;\n  protected _viewPort?: Vector4 | { x: number; y: number; width: number; height: number };\n\n\n  protected _effectComposer?: EffectComposer;\n\n  constructor(protected engServ: ThEngineService, protected raycaster: RaycasterService) {}\n\n  @Input()\n  public scene?: ThScene;\n\n  @ContentChild(ThScene)\n  public set contentScene(scene: ThScene | undefined) {\n    if (scene) {\n      this.scene = scene;\n    }\n  }\n\n  @Input()\n  public set effectComposer(effectComposer: EffectComposer | undefined) {\n    this._effectComposer = effectComposer;\n    this.configureEffectComposerRenderTarget();\n  }\n\n  public get effectComposer() {\n    return this._effectComposer;\n  }\n\n  @Input()\n  public set camera(camera: ThCamera | undefined) {\n    this._camera = camera;\n    this.initRaycaster();\n  }\n\n  public get camera() {\n    return this._camera;\n  }\n\n  @ContentChild(ThCamera)\n  public set contentCamera(camera: ThCamera<any> | undefined) {\n    if (camera) {\n      this.camera = camera;\n    }\n  }\n\n  // renderer parameters\n  // -----------------------------------------------------------------------------------------------\n  /**\n   * enable / disable shadows\n   */\n  @Input()\n  public shadow?: boolean;\n\n  @Input()\n  public set viewPort(viewPort: Vector4 | { x: number; y: number; width: number; height: number } | undefined ) {\n    this._viewPort = viewPort;\n    this.configureEffectComposerRenderTarget();\n  }\n\n  public get viewPort() {\n    return this._viewPort;\n  }\n\n  @Input()\n  public scissor?: Vector4 | { x: number; y: number; width: number; height: number };\n\n  /**\n   * Enable the scissor test. When this is enabled,\n   * only the pixels within the defined scissor area will be affected by further renderer actions.\n   */\n  @Input()\n  public scissorTest?: boolean;\n\n  /**\n   * Sets the clear color\n   */\n  @Input()\n  clearColor?: Color | string | number;\n\n  /**\n   * a float with the current clear alpha. Ranges from 0 to 1.\n   */\n  @Input()\n  clearAlpha?: number;\n  // -----------------------------------------------------------------------------------------------\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output()\n  public readonly onRender = new EventEmitter<{\n    renderer: THREE.WebGLRenderer;\n    scene: ThScene;\n    camera: ThCamera;\n  }>();\n\n  ngOnInit(): void {\n    this.initRaycaster();\n  }\n\n  private initRaycaster() {\n    if (this.camera && this.engServ.canvas) {\n      this.raycaster.init(this.camera, this.engServ.canvas);\n    }\n  }\n\n  add(scene: Object3D) {\n    // nothing to do here\n  }\n\n  remove(scene: Object3D) {\n    // norhing to do\n  }\n\n  private configureEffectComposerRenderTarget() {\n    if (!this.viewPort || !this.effectComposer) {\n      return;\n    } else {\n      let width: number;\n      let height: number;\n      if (this.viewPort instanceof Vector4) {\n        width = this.viewPort.z;\n        height = this.viewPort?.width;\n      } else {\n        width = this.viewPort.width;\n        height = this.viewPort.height;\n      }\n      //TODO: check if pixel ration ha\n      this.effectComposer.setSize(width, height);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UniformsUtils, Vector4, WebGLRenderer, WebGLRenderTarget } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ThEngineService } from '../../ThEngine.service';\nimport { ThView } from '../../ThView';\nimport { ThEffectComposerGen } from '../ThEffectComposerGen';\n\n@Component({\n  selector: 'th-effectComposer',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: []\n})\nexport class ThEffectComposer<\n  T extends EffectComposer = EffectComposer,\n  TARGS extends any[] = [renderer: WebGLRenderer, renderTarget?: WebGLRenderTarget]\n> extends ThEffectComposerGen<T, TARGS> {\n  constructor(protected view: ThView, protected engineService: ThEngineService) {\n    super();\n  }\n\n  public createThreeInstance(args?: TARGS): EffectComposer {\n    if (!args) {\n      args = new Array(5) as TARGS;\n    }\n\n    args[0] = args[0] ?? this.engineService.renderer;\n    args[1] = args[1] ?? this.initRenderTarget();\n\n    return super.createThreeInstance(args);\n  }\n\n  private initRenderTarget() {\n    if (!this.view.viewPort) {\n      return;\n    } else {\n      let width: number;\n      let height: number;\n      if (this.view.viewPort instanceof Vector4) {\n        width = this.view.viewPort.z;\n        height = this.view.viewPort?.width;\n      } else {\n        width = this.view.viewPort.width;\n        height = this.view.viewPort.height;\n      }\n      return new WebGLRenderTarget(width, height);\n    }\n  }\n\n  public addToParent() {\n    if (this._objRef) {\n      this.view.effectComposer = this._objRef;\n    }\n  }\n\n  public removeFromParent() {\n    this.view.effectComposer = undefined;\n  }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { ThEffectComposer } from './generated/overrides/ThEffectComposer';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-control',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThPassBase<T extends Pass = Pass, ARGS = unknown> extends ThWrapperBase<T, ARGS> implements OnInit {\n  constructor(@Optional() protected effectComposer?: ThEffectComposer) {\n    super();\n  }\n\n  public addToParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.addPass(this._objRef);\n    }\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.effectComposer && this.effectComposer.objRef) {\n      this.effectComposer.objRef.removePass(this._objRef);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass';\nimport { ThPassBase } from '../ThPassBase';\n\n@Component({\n  selector: 'th-pass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThPass) }],\n})\nexport class ThPass<T extends Pass = Pass, TARGS = []> extends ThPassBase<\n  T,\n  TARGS\n> {\n  public getType(): Type<Pass> {\n    return Pass;\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set needsSwap(value: boolean) {\n    if (this._objRef) {\n      this._objRef.needsSwap = value;\n    }\n  }\n\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  @Input()\n  public set renderToScreen(value: boolean) {\n    if (this._objRef) {\n      this._objRef.renderToScreen = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, Color, ColorRepresentation, Material, Scene } from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-renderPassGen',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThRenderPassGen) },\n  ],\n})\nexport class ThRenderPassGen<\n  T extends RenderPass = RenderPass,\n  TARGS = [\n    scene: Scene,\n    camera: Camera,\n    overrideMaterial?: Material,\n    clearColor?: Color,\n    clearAlpha?: number\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<RenderPass> {\n    return RenderPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set overrideMaterial(value: Material) {\n    if (this._objRef) {\n      this._objRef.overrideMaterial = value;\n    }\n  }\n\n  @Input()\n  public set clearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue<Color>(\n        this._objRef.clearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n\n  @Input()\n  public set clearDepth(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clearDepth = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport { AfterContentChecked, AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, Component, forwardRef } from '@angular/core';\nimport { Camera, Color, Material, Scene } from 'three';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { EffectComposer } from '../../generator/pass_types';\nimport { ThPassBase } from '../../ThPassBase';\nimport { ThView } from '../../ThView';\nimport { ThObject3D } from '../ThObject3D';\nimport { ThRenderPassGen } from '../ThRenderPassGen';\nimport { ThEffectComposer } from './ThEffectComposer';\n\n@Component({\n  selector: 'th-renderPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThPassBase, useExisting: forwardRef(() => ThRenderPass) }]\n})\nexport class ThRenderPass<\n    T extends RenderPass = RenderPass,\n    TARGS extends any[] = [scene: Scene, camera: Camera, overrideMaterial?: Material, clearColor?: Color, clearAlpha?: number]\n  >\n  extends ThRenderPassGen<T, TARGS>\n  implements AfterContentChecked {\n  constructor(protected effectComposer: ThEffectComposer, private view: ThView) {\n    super(effectComposer);\n  }\n\n  public createThreeInstance(args?: TARGS): RenderPass {\n    if (!args) {\n      args = new Array(5) as TARGS;\n    }\n\n    args[0] = args[0] ?? this.view.scene;\n    args[1] = args[1] ?? this.view.camera;\n    args[2] = args[2] ?? this.overrideMaterial;\n    args[3] = args[3] ?? this.clearColor;\n    args[4] = args[4] ?? this.clearAlpha;\n\n    return super.createThreeInstance(args);\n  }\n\n  public ngAfterContentChecked() {\n    if (!this._objRef) {\n      return;\n    }\n\n    if (this.view.scene && this.view.scene.objRef) {\n      this._objRef.scene = this.view.scene.objRef;\n    }\n\n    if (this.view.camera && this.view.camera.objRef) {\n      this._objRef.camera = this.view.camera.objRef;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { AdaptiveToneMappingPass } from 'three/examples/jsm/postprocessing/AdaptiveToneMappingPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-adaptiveToneMappingPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThPassBase,\n      useExisting: forwardRef(() => ThAdaptiveToneMappingPass),\n    },\n  ],\n})\nexport class ThAdaptiveToneMappingPass<\n  T extends AdaptiveToneMappingPass = AdaptiveToneMappingPass,\n  TARGS = [adaptive?: boolean, resolution?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<AdaptiveToneMappingPass> {\n    return AdaptiveToneMappingPass;\n  }\n\n  @Input()\n  public set adaptive(value: boolean) {\n    if (this._objRef) {\n      this._objRef.adaptive = value;\n    }\n  }\n\n  @Input()\n  public set resolution(value: number) {\n    if (this._objRef) {\n      this._objRef.resolution = value;\n    }\n  }\n\n  @Input()\n  public set needsInit(value: number) {\n    if (this._objRef) {\n      this._objRef.needsInit = value;\n    }\n  }\n\n  @Input()\n  public set luminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.luminanceRT = value;\n    }\n  }\n\n  @Input()\n  public set previousLuminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.previousLuminanceRT = value;\n    }\n  }\n\n  @Input()\n  public set currentLuminanceRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.currentLuminanceRT = value;\n    }\n  }\n\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  @Input()\n  public set materialLuminance(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialLuminance = value;\n    }\n  }\n\n  @Input()\n  public set adaptLuminanceShader(value: object) {\n    if (this._objRef) {\n      this._objRef.adaptLuminanceShader = value;\n    }\n  }\n\n  @Input()\n  public set materialAdaptiveLum(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialAdaptiveLum = value;\n    }\n  }\n\n  @Input()\n  public set materialToneMap(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialToneMap = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { AfterimagePass } from 'three/examples/jsm/postprocessing/AfterimagePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-afterimagePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThAfterimagePass) },\n  ],\n})\nexport class ThAfterimagePass<\n  T extends AfterimagePass = AfterimagePass,\n  TARGS = /* damp? */ number\n> extends ThPass<T, TARGS> {\n  public getType(): Type<AfterimagePass> {\n    return AfterimagePass;\n  }\n\n  @Input()\n  public set shader(value: object) {\n    if (this._objRef) {\n      this._objRef.shader = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set textureComp(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.textureComp = value;\n    }\n  }\n\n  @Input()\n  public set textureOld(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.textureOld = value;\n    }\n  }\n\n  @Input()\n  public set shaderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.shaderMaterial = value;\n    }\n  }\n\n  @Input()\n  public set compFsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.compFsQuad = value;\n    }\n  }\n\n  @Input()\n  public set copyFsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.copyFsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Color, ColorRepresentation, Event, Light, LightShadow } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-light',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLight) }],\n})\nexport class ThLight<\n  T extends Light = Light,\n  TARGS = [hex?: number | string, intensity?: number]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Light> {\n    return Light;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  @Input()\n  public set shadow(value: LightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraFov(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraFov = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraLeft(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraLeft = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraRight(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraRight = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraTop(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraTop = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraBottom(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraBottom = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraNear(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraNear = value;\n    }\n  }\n\n  @Input()\n  public set shadowCameraFar(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowCameraFar = value;\n    }\n  }\n\n  @Input()\n  public set shadowBias(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowBias = value;\n    }\n  }\n\n  @Input()\n  public set shadowMapWidth(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowMapWidth = value;\n    }\n  }\n\n  @Input()\n  public set shadowMapHeight(value: any) {\n    if (this._objRef) {\n      this._objRef.shadowMapHeight = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { AmbientLight, ColorRepresentation } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-ambientLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLight) },\n  ],\n})\nexport class ThAmbientLight<\n  T extends AmbientLight = AmbientLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<AmbientLight> {\n    return AmbientLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { LightProbe, SphericalHarmonics3, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lightProbe',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThLightProbe) },\n  ],\n})\nexport class ThLightProbe<\n  T extends LightProbe = LightProbe,\n  TARGS = [sh?: SphericalHarmonics3, intensity?: number]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<LightProbe> {\n    return LightProbe;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set sh(value: SphericalHarmonics3 | [coefficients: Vector3[]]) {\n    if (this._objRef) {\n      this._objRef.sh = applyValue<SphericalHarmonics3>(this._objRef.sh, value);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { AmbientLightProbe, ColorRepresentation } from 'three';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-ambientLightProbe',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThAmbientLightProbe) },\n  ],\n})\nexport class ThAmbientLightProbe<\n  T extends AmbientLightProbe = AmbientLightProbe,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLightProbe<T, TARGS> {\n  public getType(): Type<AmbientLightProbe> {\n    return AmbientLightProbe;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { PerspectiveCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-perspectiveCamera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPerspectiveCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThPerspectiveCamera) },\n  ],\n})\nexport class ThPerspectiveCamera<\n  T extends PerspectiveCamera = PerspectiveCamera,\n  TARGS = [fov?: number, aspect?: number, near?: number, far?: number]\n> extends ThCamera<T, TARGS> {\n  public getType(): Type<PerspectiveCamera> {\n    return PerspectiveCamera;\n  }\n\n  @Input()\n  public set type(value: 'PerspectiveCamera') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set zoom(value: number) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n\n  @Input()\n  public set fov(value: number) {\n    if (this._objRef) {\n      this._objRef.fov = value;\n    }\n  }\n\n  @Input()\n  public set aspect(value: number) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n\n  @Input()\n  public set near(value: number) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n\n  @Input()\n  public set far(value: number) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n\n  @Input()\n  public set focus(value: number) {\n    if (this._objRef) {\n      this._objRef.focus = value;\n    }\n  }\n\n  @Input()\n  public set view(\n    value: null | {\n      enabled: boolean;\n      fullWidth: number;\n      fullHeight: number;\n      offsetX: number;\n      offsetY: number;\n      width: number;\n      height: number;\n    }\n  ) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n\n  @Input()\n  public set filmGauge(value: number) {\n    if (this._objRef) {\n      this._objRef.filmGauge = value;\n    }\n  }\n\n  @Input()\n  public set filmOffset(value: number) {\n    if (this._objRef) {\n      this._objRef.filmOffset = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ArrayCamera, PerspectiveCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\nimport { ThPerspectiveCamera } from './ThPerspectiveCamera';\n\n@Component({\n  selector: 'th-arrayCamera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThArrayCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThArrayCamera) },\n  ],\n})\nexport class ThArrayCamera<\n  T extends ArrayCamera = ArrayCamera,\n  TARGS = /* cameras? */ PerspectiveCamera[]\n> extends ThPerspectiveCamera<T, TARGS> {\n  public getType(): Type<ArrayCamera> {\n    return ArrayCamera;\n  }\n\n  @Input()\n  public set cameras(value: PerspectiveCamera[]) {\n    if (this._objRef) {\n      this._objRef.cameras = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ArrowHelper,\n  ColorRepresentation,\n  Event,\n  Line,\n  Mesh,\n  Vector3,\n} from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-arrowHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThArrowHelper) },\n  ],\n})\nexport class ThArrowHelper<\n  T extends ArrowHelper = ArrowHelper,\n  TARGS = [\n    dir?: Vector3,\n    origin?: Vector3,\n    length?: number,\n    color?: ColorRepresentation,\n    headLength?: number,\n    headWidth?: number\n  ]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<ArrowHelper> {\n    return ArrowHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set line(value: Line) {\n    if (this._objRef) {\n      this._objRef.line = value;\n    }\n  }\n\n  @Input()\n  public set cone(value: Mesh) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Audio, AudioContext, AudioListener, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-audio',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThAudio) }],\n})\nexport class ThAudio<\n  NodeType extends AudioNode = GainNode,\n  T extends Audio<NodeType> = Audio<NodeType>,\n  TARGS = /* listener */ AudioListener\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Audio<NodeType>> {\n    return Audio;\n  }\n\n  @Input()\n  public set type(value: 'Audio') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set listener(value: AudioListener) {\n    if (this._objRef) {\n      this._objRef.listener = value;\n    }\n  }\n\n  @Input()\n  public set context(value: AudioContext) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n\n  @Input()\n  public set gain(value: GainNode) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n\n  @Input()\n  public set autoplay(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoplay = value;\n    }\n  }\n\n  @Input()\n  public set buffer(value: null | AudioBuffer) {\n    if (this._objRef) {\n      this._objRef.buffer = value;\n    }\n  }\n\n  @Input()\n  public set detune(value: number) {\n    if (this._objRef) {\n      this._objRef.detune = value;\n    }\n  }\n\n  @Input()\n  public set loop(value: boolean) {\n    if (this._objRef) {\n      this._objRef.loop = value;\n    }\n  }\n\n  @Input()\n  public set loopStart(value: number) {\n    if (this._objRef) {\n      this._objRef.loopStart = value;\n    }\n  }\n\n  @Input()\n  public set loopEnd(value: number) {\n    if (this._objRef) {\n      this._objRef.loopEnd = value;\n    }\n  }\n\n  @Input()\n  public set offset(value: number) {\n    if (this._objRef) {\n      this._objRef.offset = value;\n    }\n  }\n\n  @Input()\n  public set duration(value: number | undefined) {\n    if (this._objRef) {\n      this._objRef.duration = value;\n    }\n  }\n\n  @Input()\n  public set playbackRate(value: number) {\n    if (this._objRef) {\n      this._objRef.playbackRate = value;\n    }\n  }\n\n  @Input()\n  public set isPlaying(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isPlaying = value;\n    }\n  }\n\n  @Input()\n  public set hasPlaybackControl(value: boolean) {\n    if (this._objRef) {\n      this._objRef.hasPlaybackControl = value;\n    }\n  }\n\n  @Input()\n  public set sourceType(value: string) {\n    if (this._objRef) {\n      this._objRef.sourceType = value;\n    }\n  }\n\n  @Input()\n  public set source(value: null | AudioBufferSourceNode) {\n    if (this._objRef) {\n      this._objRef.source = value;\n    }\n  }\n\n  @Input()\n  public set filters(value: AudioNode[]) {\n    if (this._objRef) {\n      this._objRef.filters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { AudioContext, AudioListener, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-audioListener',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThAudioListener) },\n  ],\n})\nexport class ThAudioListener<\n  T extends AudioListener = AudioListener,\n  TARGS = []\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<AudioListener> {\n    return AudioListener;\n  }\n\n  @Input()\n  public set type(value: 'AudioListener') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set context(value: AudioContext) {\n    if (this._objRef) {\n      this._objRef.context = value;\n    }\n  }\n\n  @Input()\n  public set gain(value: GainNode) {\n    if (this._objRef) {\n      this._objRef.gain = value;\n    }\n  }\n\n  @Input()\n  public set filter(value: any) {\n    if (this._objRef) {\n      this._objRef.filter = value;\n    }\n  }\n\n  @Input()\n  public set timeDelta(value: number) {\n    if (this._objRef) {\n      this._objRef.timeDelta = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Event, Line, Material } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-line',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLine) }],\n})\nexport class ThLine<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Line<TGeometry, TMaterial> = Line<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Line<TGeometry, TMaterial>> {\n    return Line;\n  }\n\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set type(value: 'Line' | 'LineLoop' | 'LineSegments' | string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetDictionary(\n    value: { [key: string]: number } | undefined\n  ) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, LineSegments, Material } from 'three';\nimport { ThLine } from './ThLine';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lineSegments',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThLineSegments) },\n  ],\n})\nexport class ThLineSegments<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends LineSegments<TGeometry, TMaterial> = LineSegments<\n    TGeometry,\n    TMaterial\n  >,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThLine<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<LineSegments<TGeometry, TMaterial>> {\n    return LineSegments;\n  }\n\n  @Input()\n  public set type(value: 'LineSegments' | string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { AxesHelper, BufferGeometry, Material } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-axesHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThAxesHelper) },\n  ],\n})\nexport class ThAxesHelper<\n  T extends AxesHelper = AxesHelper,\n  TARGS = /* size? */ number\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<AxesHelper> {\n    return AxesHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { BloomPass } from 'three/examples/jsm/postprocessing/BloomPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-bloomPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThBloomPass) },\n  ],\n})\nexport class ThBloomPass<\n  T extends BloomPass = BloomPass,\n  TARGS = [\n    strength?: number,\n    kernelSize?: number,\n    sigma?: number,\n    resolution?: number\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<BloomPass> {\n    return BloomPass;\n  }\n\n  @Input()\n  public set renderTargetX(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetX = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetY(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetY = value;\n    }\n  }\n\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  @Input()\n  public set convolutionUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.convolutionUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialConvolution(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialConvolution = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  MeshDepthMaterial,\n  Scene,\n  ShaderMaterial,\n  WebGLRenderTarget,\n} from 'three';\nimport {\n  BokehPass,\n  BokehPassParamters,\n} from 'three/examples/jsm/postprocessing/BokehPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-bokehPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThBokehPass) },\n  ],\n})\nexport class ThBokehPass<\n  T extends BokehPass = BokehPass,\n  TARGS = [scene: Scene, camera: Camera, params: BokehPassParamters]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<BokehPass> {\n    return BokehPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetColor(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetColor = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetDepth(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepth = value;\n    }\n  }\n\n  @Input()\n  public set materialDepth(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.materialDepth = value;\n    }\n  }\n\n  @Input()\n  public set materialBokeh(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialBokeh = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(\n        this._objRef.oldClearColor,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Bone, Event } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-bone',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThBone) }],\n})\nexport class ThBone<T extends Bone = Bone, TARGS = []> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<Bone> {\n    return Bone;\n  }\n\n  @Input()\n  public set type(value: 'Bone') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Box3,\n  Box3Helper,\n  BufferGeometry,\n  Color,\n  Material,\n  Vector3,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-box3Helper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThBox3Helper) },\n  ],\n})\nexport class ThBox3Helper<\n  T extends Box3Helper = Box3Helper,\n  TARGS = [box: Box3, color?: Color]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<Box3Helper> {\n    return Box3Helper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set box(value: Box3 | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.box = applyValue<Box3>(this._objRef.box, value);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { BufferGeometry } from 'three';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-geometry',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThGeometryBase<T extends BufferGeometry, ARGS> extends ThWrapperBase<T, ARGS> {\n  constructor(protected parent: ThObject3D) {\n    super();\n  }\n\n  public addToParent() {\n    if (!this.parent.objRef) {\n      throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n\n    (this.parent.objRef as any).geometry = this.objRef;\n    if ((this.parent.objRef as any).updateMorphTargets) {\n      (this.parent.objRef as any).updateMorphTargets();\n    }\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      (this.parent.objRef as any).geometry = undefined;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport {\n  Box3,\n  BufferAttribute,\n  BufferGeometry,\n  InterleavedBufferAttribute,\n  Sphere,\n  Vector3,\n} from 'three';\nimport { ThGeometryBase } from '../ThGeometryBase';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-bufferGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n})\nexport class ThBufferGeometry<\n  T extends BufferGeometry = BufferGeometry,\n  TARGS = []\n> extends ThGeometryBase<T, TARGS> {\n  public getType(): Type<BufferGeometry> {\n    return BufferGeometry;\n  }\n\n  @Input()\n  public set id(value: number) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set index(\n    value:\n      | BufferAttribute\n      | null\n      | [value: ArrayLike<number> | ArrayBufferView, offset?: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.index = applyValue<BufferAttribute | null>(\n        this._objRef.index,\n        value\n      );\n    }\n  }\n  @Input()\n  public set attributes(value: {\n    [name: string]: BufferAttribute | InterleavedBufferAttribute;\n  }) {\n    if (this._objRef) {\n      this._objRef.attributes = value;\n    }\n  }\n\n  @Input()\n  public set morphAttributes(value: {\n    [name: string]: Array<BufferAttribute | InterleavedBufferAttribute>;\n  }) {\n    if (this._objRef) {\n      this._objRef.morphAttributes = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetsRelative(value: boolean) {\n    if (this._objRef) {\n      this._objRef.morphTargetsRelative = value;\n    }\n  }\n\n  @Input()\n  public set groups(\n    value: Array<{\n      start: number;\n      count: number;\n      materialIndex?: number | undefined;\n    }>\n  ) {\n    if (this._objRef) {\n      this._objRef.groups = value;\n    }\n  }\n\n  @Input()\n  public set boundingBox(value: Box3 | null | [min: Vector3, max: Vector3]) {\n    if (this._objRef) {\n      this._objRef.boundingBox = applyValue<Box3 | null>(\n        this._objRef.boundingBox,\n        value\n      );\n    }\n  }\n  @Input()\n  public set boundingSphere(\n    value: Sphere | null | [center: Vector3, radius: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.boundingSphere = applyValue<Sphere | null>(\n        this._objRef.boundingSphere,\n        value\n      );\n    }\n  }\n  @Input()\n  public set drawRange(value: { start: number; count: number }) {\n    if (this._objRef) {\n      this._objRef.drawRange = value;\n    }\n  }\n\n  @Input()\n  public set userData(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  @Input()\n  public set drawcalls(value: any) {\n    if (this._objRef) {\n      this._objRef.drawcalls = value;\n    }\n  }\n\n  @Input()\n  public set offsets(value: any) {\n    if (this._objRef) {\n      this._objRef.offsets = value;\n    }\n  }\n\n  constructor(@SkipSelf() hostObject: ThObject3D) {\n    super(hostObject);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BoxGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-boxGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThBufferGeometry, useExisting: forwardRef(() => ThBoxGeometry) },\n  ],\n})\nexport class ThBoxGeometry<\n  T extends BoxGeometry = BoxGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    depth?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    depthSegments?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<BoxGeometry> {\n    return BoxGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    width: number;\n    height: number;\n    depth: number;\n    widthSegments: number;\n    heightSegments: number;\n    depthSegments: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  BoxHelper,\n  BufferGeometry,\n  ColorRepresentation,\n  Material,\n  Object3D,\n} from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-boxHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThBoxHelper) },\n  ],\n})\nexport class ThBoxHelper<\n  T extends BoxHelper = BoxHelper,\n  TARGS = [object: Object3D, color?: ColorRepresentation]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<BoxHelper> {\n    return BoxHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { BoxLineGeometry } from 'three/examples/jsm/geometries/BoxLineGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-boxLineGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThBoxLineGeometry),\n    },\n  ],\n})\nexport class ThBoxLineGeometry<\n  T extends BoxLineGeometry = BoxLineGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    depth?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    depthSegments?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<BoxLineGeometry> {\n    return BoxLineGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Camera, CameraHelper, Material } from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-cameraHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThCameraHelper) },\n  ],\n})\nexport class ThCameraHelper<\n  T extends CameraHelper = CameraHelper,\n  TARGS = /* camera */ Camera\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<CameraHelper> {\n    return CameraHelper;\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set pointMap(value: { [id: string]: number[] }) {\n    if (this._objRef) {\n      this._objRef.pointMap = value;\n    }\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { CircleGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-circleGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThCircleGeometry),\n    },\n  ],\n})\nexport class ThCircleGeometry<\n  T extends CircleGeometry = CircleGeometry,\n  TARGS = [\n    radius?: number,\n    segments?: number,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<CircleGeometry> {\n    return CircleGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    radius: number;\n    segments: number;\n    thetaStart: number;\n    thetaLength: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { ClearMaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-clearMaskPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThClearMaskPass) },\n  ],\n})\nexport class ThClearMaskPass<\n  T extends ClearMaskPass = ClearMaskPass,\n  TARGS = []\n> extends ThPass<T, TARGS> {\n  public getType(): Type<ClearMaskPass> {\n    return ClearMaskPass;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ColorRepresentation } from 'three';\nimport { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-clearPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThClearPass) },\n  ],\n})\nexport class ThClearPass<\n  T extends ClearPass = ClearPass,\n  TARGS = [clearColor?: ColorRepresentation, clearAlpha?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<ClearPass> {\n    return ClearPass;\n  }\n\n  @Input()\n  public set clearColor(value: ColorRepresentation) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { CylinderGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-cylinderGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThCylinderGeometry),\n    },\n  ],\n})\nexport class ThCylinderGeometry<\n  T extends CylinderGeometry = CylinderGeometry,\n  TARGS = [\n    radiusTop?: number,\n    radiusBottom?: number,\n    height?: number,\n    radialSegments?: number,\n    heightSegments?: number,\n    openEnded?: boolean,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<CylinderGeometry> {\n    return CylinderGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    radiusTop: number;\n    radiusBottom: number;\n    height: number;\n    radialSegments: number;\n    heightSegments: number;\n    openEnded: boolean;\n    thetaStart: number;\n    thetaLength: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ConeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThCylinderGeometry } from './ThCylinderGeometry';\n\n@Component({\n  selector: 'th-coneGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThConeGeometry),\n    },\n  ],\n})\nexport class ThConeGeometry<\n  T extends ConeGeometry = ConeGeometry,\n  TARGS = [\n    radius?: number,\n    height?: number,\n    radialSegments?: number,\n    heightSegments?: number,\n    openEnded?: boolean,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThCylinderGeometry<T, TARGS> {\n  public getType(): Type<ConeGeometry> {\n    return ConeGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { Vector3 } from 'three';\nimport { ConvexGeometry } from 'three/examples/jsm/geometries/ConvexGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-convexGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThConvexGeometry),\n    },\n  ],\n})\nexport class ThConvexGeometry<\n  T extends ConvexGeometry = ConvexGeometry,\n  TARGS = /* points */ Vector3[]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ConvexGeometry> {\n    return ConvexGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { CubeCamera, Event, WebGLCubeRenderTarget } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-cubeCamera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThCubeCamera) },\n  ],\n})\nexport class ThCubeCamera<\n  T extends CubeCamera = CubeCamera,\n  TARGS = [near: number, far: number, renderTarget: WebGLCubeRenderTarget]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<CubeCamera> {\n    return CubeCamera;\n  }\n\n  @Input()\n  public set type(value: 'CubeCamera') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set renderTarget(value: WebGLCubeRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { CubeTexture, Mesh, PerspectiveCamera, Scene } from 'three';\nimport { CubeTexturePass } from 'three/examples/jsm/postprocessing/CubeTexturePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-cubeTexturePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThCubeTexturePass) },\n  ],\n})\nexport class ThCubeTexturePass<\n  T extends CubeTexturePass = CubeTexturePass,\n  TARGS = [camera: PerspectiveCamera, envMap?: CubeTexture, opacity?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<CubeTexturePass> {\n    return CubeTexturePass;\n  }\n\n  @Input()\n  public set camera(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set cubeShader(value: object) {\n    if (this._objRef) {\n      this._objRef.cubeShader = value;\n    }\n  }\n\n  @Input()\n  public set cubeMesh(value: Mesh) {\n    if (this._objRef) {\n      this._objRef.cubeMesh = value;\n    }\n  }\n\n  @Input()\n  public set envMap(value: CubeTexture) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  @Input()\n  public set cubeScene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.cubeScene = value;\n    }\n  }\n\n  @Input()\n  public set cubeCamera(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cubeCamera = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { Euler, Mesh, Vector3 } from 'three';\nimport { DecalGeometry } from 'three/examples/jsm/geometries/DecalGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-decalGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThDecalGeometry),\n    },\n  ],\n})\nexport class ThDecalGeometry<\n  T extends DecalGeometry = DecalGeometry,\n  TARGS = [mesh: Mesh, position: Vector3, orientation: Euler, size: Vector3]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<DecalGeometry> {\n    return DecalGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  DirectionalLight,\n  DirectionalLightShadow,\n  Object3D,\n  Vector3,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-directionalLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThDirectionalLight) },\n  ],\n})\nexport class ThDirectionalLight<\n  T extends DirectionalLight = DirectionalLight,\n  TARGS = [color?: ColorRepresentation, intensity?: number]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<DirectionalLight> {\n    return DirectionalLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  @Input()\n  public set target(value: Object3D) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  @Input()\n  public set shadow(value: DirectionalLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  DirectionalLight,\n  DirectionalLightHelper,\n  Event,\n  Line,\n  Matrix4,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-directionalLightHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThDirectionalLightHelper),\n    },\n  ],\n})\nexport class ThDirectionalLightHelper<\n  T extends DirectionalLightHelper = DirectionalLightHelper,\n  TARGS = [light: DirectionalLight, size?: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<DirectionalLightHelper> {\n    return DirectionalLightHelper;\n  }\n\n  @Input()\n  public set light(value: DirectionalLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  @Input()\n  public set lightPlane(value: Line) {\n    if (this._objRef) {\n      this._objRef.lightPlane = value;\n    }\n  }\n\n  @Input()\n  public set targetLine(value: Line) {\n    if (this._objRef) {\n      this._objRef.targetLine = value;\n    }\n  }\n\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { PolyhedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-polyhedronGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThPolyhedronGeometry),\n    },\n  ],\n})\nexport class ThPolyhedronGeometry<\n  T extends PolyhedronGeometry = PolyhedronGeometry,\n  TARGS = [\n    vertices?: number[],\n    indices?: number[],\n    radius?: number,\n    detail?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<PolyhedronGeometry> {\n    return PolyhedronGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    vertices: number[];\n    indices: number[];\n    radius: number;\n    detail: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { DodecahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-dodecahedronGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThDodecahedronGeometry),\n    },\n  ],\n})\nexport class ThDodecahedronGeometry<\n  T extends DodecahedronGeometry = DodecahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<DodecahedronGeometry> {\n    return DodecahedronGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, Vector2 } from 'three';\nimport { DotScreenPass } from 'three/examples/jsm/postprocessing/DotScreenPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-dotScreenPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThDotScreenPass) },\n  ],\n})\nexport class ThDotScreenPass<\n  T extends DotScreenPass = DotScreenPass,\n  TARGS = [center?: Vector2, angle?: number, scale?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<DotScreenPass> {\n    return DotScreenPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { RaycasterService } from './events/raycaster.service';\n\nimport { ThObject3D } from './generated/ThObject3D';\n\nimport { ThEngineService } from './ThEngine.service';\nimport { ThView } from './ThView';\n\n@Component({\n  selector: 'th-canvas',\n  styleUrls: ['./ThCanvas.scss'],\n  template: '<canvas #rendererCanvas id=\"rendererCanvas\" style=\"width: 100%; height: 100%\"></canvas>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThCanvas) },\n    ThEngineService,\n    forwardRef(() => RaycasterService),\n    { provide: ThView, useExisting: forwardRef(() => ThCanvas) }\n  ]\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThCanvas extends ThView implements OnInit, AfterViewInit {\n  private static instanceCnt = 0;\n  public readonly nid = ThCanvas.instanceCnt++;\n\n  /**\n   * if true does not use the ThCanvas as view\n   * this is esepcially usefull if you have multiple views\n   * and want to iterate over all of them with *ngFor\n   * use statically (before ngOnInit is triggered)\n   */\n  @Input()\n  public disableDefaultView = false;\n\n  public get obj() {\n    return this;\n  }\n\n  @ContentChildren(ThView)\n  public set views(viewList: QueryList<ThView>) {\n    viewList.forEach((v) => this.engServ.addView(v));\n  }\n\n  protected _rendererCanvas?: ElementRef<HTMLCanvasElement>;\n  @ViewChild('rendererCanvas', { static: true })\n  public set rendererCanvas(canvas: ElementRef<HTMLCanvasElement> | undefined) {\n    if (!canvas) {\n      return;\n    }\n    this._rendererCanvas = canvas;\n    canvas.nativeElement.id += this.nid;\n    this.engServ.setCanvas(canvas.nativeElement);\n  }\n\n  public get rendererCanvas() {\n    return this._rendererCanvas;\n  }\n\n  constructor(\n    protected engServ: ThEngineService,\n    @Inject(forwardRef(() => RaycasterService))\n    protected raycaster: RaycasterService\n  ) {\n    super(engServ, raycaster);\n    console.log('canvas ' + this.nid);\n  }\n\n  ngAfterViewInit(): void {\n    this.engServ.requestAnimationFrame();\n  }\n\n  public ngOnInit(): void {\n    if (!this.rendererCanvas) {\n      throw new Error('Missing Canvas');\n    }\n    this.engServ.setCanvas(this.rendererCanvas.nativeElement);\n\n    super.ngOnInit();\n    if (!this.disableDefaultView) {\n      this.engServ.addView(this);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThCanvas } from './ThCanvas';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-control',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThControlBase<T, ARGS> extends ThWrapperBase<T, ARGS> {\n  constructor(protected camera: ThObject3D<any>, protected canvas?: ThCanvas) {\n    super();\n  }\n\n  public createThreeInstance(args?: Iterable<any>) {\n    if (!args) {\n      args = [this.camera.objRef, this.canvas?.rendererCanvas?.nativeElement];\n    }\n    return super.createThreeInstance(args);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, Object3D } from 'three';\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-dragControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThControlBase, useExisting: forwardRef(() => ThDragControls) },\n  ],\n})\nexport class ThDragControls<\n  T extends DragControls = DragControls,\n  TARGS = [objects: Object3D[], camera: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<DragControls> {\n    return DragControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set transformGroup(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transformGroup = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, EdgesGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-edgesGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThEdgesGeometry),\n    },\n  ],\n})\nexport class ThEdgesGeometry<\n  TBufferGeometry extends BufferGeometry = BufferGeometry,\n  T extends EdgesGeometry<TBufferGeometry> = EdgesGeometry<TBufferGeometry>,\n  TARGS = [geometry?: TBufferGeometry, thresholdAngle?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<EdgesGeometry<TBufferGeometry>> {\n    return EdgesGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    geometry: TBufferGeometry;\n    thresholdAngle: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ExtrudeGeometry, ExtrudeGeometryOptions, Shape } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-extrudeGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThExtrudeGeometry),\n    },\n  ],\n})\nexport class ThExtrudeGeometry<\n  T extends ExtrudeGeometry = ExtrudeGeometry,\n  TARGS = [shapes?: Shape | Shape[], options?: ExtrudeGeometryOptions]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ExtrudeGeometry> {\n    return ExtrudeGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-filmPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThFilmPass) },\n  ],\n})\nexport class ThFilmPass<\n  T extends FilmPass = FilmPass,\n  TARGS = [\n    noiseIntensity?: number,\n    scanlinesIntensity?: number,\n    scanlinesCount?: number,\n    grayscale?: number\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<FilmPass> {\n    return FilmPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera } from 'three';\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-firstPersonControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThFirstPersonControls),\n    },\n  ],\n})\nexport class ThFirstPersonControls<\n  T extends FirstPersonControls = FirstPersonControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<FirstPersonControls> {\n    return FirstPersonControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement | HTMLDocument) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set movementSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n\n  @Input()\n  public set lookSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.lookSpeed = value;\n    }\n  }\n\n  @Input()\n  public set lookVertical(value: boolean) {\n    if (this._objRef) {\n      this._objRef.lookVertical = value;\n    }\n  }\n\n  @Input()\n  public set autoForward(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n\n  @Input()\n  public set activeLook(value: boolean) {\n    if (this._objRef) {\n      this._objRef.activeLook = value;\n    }\n  }\n\n  @Input()\n  public set heightSpeed(value: boolean) {\n    if (this._objRef) {\n      this._objRef.heightSpeed = value;\n    }\n  }\n\n  @Input()\n  public set heightCoef(value: number) {\n    if (this._objRef) {\n      this._objRef.heightCoef = value;\n    }\n  }\n\n  @Input()\n  public set heightMin(value: number) {\n    if (this._objRef) {\n      this._objRef.heightMin = value;\n    }\n  }\n\n  @Input()\n  public set heightMax(value: number) {\n    if (this._objRef) {\n      this._objRef.heightMax = value;\n    }\n  }\n\n  @Input()\n  public set constrainVertical(value: boolean) {\n    if (this._objRef) {\n      this._objRef.constrainVertical = value;\n    }\n  }\n\n  @Input()\n  public set verticalMin(value: number) {\n    if (this._objRef) {\n      this._objRef.verticalMin = value;\n    }\n  }\n\n  @Input()\n  public set verticalMax(value: number) {\n    if (this._objRef) {\n      this._objRef.verticalMax = value;\n    }\n  }\n\n  @Input()\n  public set mouseDragOn(value: boolean) {\n    if (this._objRef) {\n      this._objRef.mouseDragOn = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera } from 'three';\nimport { FlyControls } from 'three/examples/jsm/controls/FlyControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-flyControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThControlBase, useExisting: forwardRef(() => ThFlyControls) },\n  ],\n})\nexport class ThFlyControls<\n  T extends FlyControls = FlyControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<FlyControls> {\n    return FlyControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement | HTMLDocument) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set movementSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.movementSpeed = value;\n    }\n  }\n\n  @Input()\n  public set rollSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rollSpeed = value;\n    }\n  }\n\n  @Input()\n  public set dragToLook(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dragToLook = value;\n    }\n  }\n\n  @Input()\n  public set autoForward(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoForward = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { GlitchPass } from 'three/examples/jsm/postprocessing/GlitchPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-glitchPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThGlitchPass) },\n  ],\n})\nexport class ThGlitchPass<\n  T extends GlitchPass = GlitchPass,\n  TARGS = /* dt_size? */ number\n> extends ThPass<T, TARGS> {\n  public getType(): Type<GlitchPass> {\n    return GlitchPass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set goWild(value: boolean) {\n    if (this._objRef) {\n      this._objRef.goWild = value;\n    }\n  }\n\n  @Input()\n  public set curF(value: number) {\n    if (this._objRef) {\n      this._objRef.curF = value;\n    }\n  }\n\n  @Input()\n  public set randX(value: number) {\n    if (this._objRef) {\n      this._objRef.randX = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  BufferGeometry,\n  ColorRepresentation,\n  GridHelper,\n  Material,\n} from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-gridHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThGridHelper) },\n  ],\n})\nexport class ThGridHelper<\n  T extends GridHelper = GridHelper,\n  TARGS = [\n    size?: number,\n    divisions?: number,\n    color1?: ColorRepresentation,\n    color2?: ColorRepresentation\n  ]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<GridHelper> {\n    return GridHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Event, Group } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-group',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThGroup) }],\n})\nexport class ThGroup<T extends Group = Group, TARGS = []> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<Group> {\n    return Group;\n  }\n\n  @Input()\n  public set type(value: 'Group') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport {\n  HalftonePass,\n  HalftonePassParameters,\n} from 'three/examples/jsm/postprocessing/HalftonePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-halftonePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThHalftonePass) },\n  ],\n})\nexport class ThHalftonePass<\n  T extends HalftonePass = HalftonePass,\n  TARGS = [width: number, height: number, params: HalftonePassParameters]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<HalftonePass> {\n    return HalftonePass;\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Color, ColorRepresentation, HemisphereLight, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThHemisphereLight) },\n  ],\n})\nexport class ThHemisphereLight<\n  T extends HemisphereLight = HemisphereLight,\n  TARGS = [\n    skyColor?: ColorRepresentation,\n    groundColor?: ColorRepresentation,\n    intensity?: number\n  ]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<HemisphereLight> {\n    return HemisphereLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position = applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  @Input()\n  public set groundColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.groundColor = applyValue<Color>(\n        this._objRef.groundColor,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  Event,\n  HemisphereLight,\n  HemisphereLightHelper,\n  Matrix4,\n  MeshBasicMaterial,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLightHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThHemisphereLightHelper),\n    },\n  ],\n})\nexport class ThHemisphereLightHelper<\n  T extends HemisphereLightHelper = HemisphereLightHelper,\n  TARGS = [light: HemisphereLight, size: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<HemisphereLightHelper> {\n    return HemisphereLightHelper;\n  }\n\n  @Input()\n  public set light(value: HemisphereLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  @Input()\n  public set material(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { ColorRepresentation, HemisphereLightProbe } from 'three';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-hemisphereLightProbe',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThHemisphereLightProbe),\n    },\n  ],\n})\nexport class ThHemisphereLightProbe<\n  T extends HemisphereLightProbe = HemisphereLightProbe,\n  TARGS = [\n    skyColor?: ColorRepresentation,\n    groundColor?: ColorRepresentation,\n    intensity?: number\n  ]\n> extends ThLightProbe<T, TARGS> {\n  public getType(): Type<HemisphereLightProbe> {\n    return HemisphereLightProbe;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { IcosahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-icosahedronGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThIcosahedronGeometry),\n    },\n  ],\n})\nexport class ThIcosahedronGeometry<\n  T extends IcosahedronGeometry = IcosahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<IcosahedronGeometry> {\n    return IcosahedronGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { InstancedBufferGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-instancedBufferGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThInstancedBufferGeometry),\n    },\n  ],\n})\nexport class ThInstancedBufferGeometry<\n  T extends InstancedBufferGeometry = InstancedBufferGeometry,\n  TARGS = []\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<InstancedBufferGeometry> {\n    return InstancedBufferGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set isInstancedBufferGeometry(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isInstancedBufferGeometry = value;\n    }\n  }\n\n  @Input()\n  public set groups(\n    value: Array<{ start: number; count: number; instances: number }>\n  ) {\n    if (this._objRef) {\n      this._objRef.groups = value;\n    }\n  }\n\n  @Input()\n  public set instanceCount(value: number) {\n    if (this._objRef) {\n      this._objRef.instanceCount = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Event, Material, Mesh } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-mesh',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThMesh) }],\n})\nexport class ThMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Mesh<TGeometry, TMaterial> = Mesh<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Mesh<TGeometry, TMaterial>> {\n    return Mesh;\n  }\n\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetDictionary(\n    value: { [key: string]: number } | undefined\n  ) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  BufferGeometry,\n  InstancedBufferAttribute,\n  InstancedMesh,\n  Material,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMesh } from './ThMesh';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-instancedMesh',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThInstancedMesh) },\n  ],\n})\nexport class ThInstancedMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends InstancedMesh<TGeometry, TMaterial> = InstancedMesh<\n    TGeometry,\n    TMaterial\n  >,\n  TARGS = [\n    geometry: TGeometry | undefined,\n    material: TMaterial | undefined,\n    count: number\n  ]\n> extends ThMesh<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<InstancedMesh<TGeometry, TMaterial>> {\n    return InstancedMesh;\n  }\n\n  @Input()\n  public set count(value: number) {\n    if (this._objRef) {\n      this._objRef.count = value;\n    }\n  }\n\n  @Input()\n  public set instanceColor(\n    value:\n      | null\n      | InstancedBufferAttribute\n      | [value: ArrayLike<number> | ArrayBufferView, offset?: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.instanceColor = applyValue<null | InstancedBufferAttribute>(\n        this._objRef.instanceColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set instanceMatrix(\n    value:\n      | InstancedBufferAttribute\n      | [value: ArrayLike<number> | ArrayBufferView, offset?: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.instanceMatrix = applyValue<InstancedBufferAttribute>(\n        this._objRef.instanceMatrix,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { LatheGeometry, Vector2 } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-latheGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThLatheGeometry),\n    },\n  ],\n})\nexport class ThLatheGeometry<\n  T extends LatheGeometry = LatheGeometry,\n  TARGS = [\n    points?: Vector2[],\n    segments?: number,\n    phiStart?: number,\n    phiLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<LatheGeometry> {\n    return LatheGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    points: Vector2[];\n    segments: number;\n    phiStart: number;\n    phiLength: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { Material, Mesh } from 'three';\nimport { ThObject3D } from './generated/ThObject3D';\nimport { ThWrapperBase } from './ThWrapperBase';\n@Component({\n  selector: 'th-abs-material',\n  template: ''\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class ThMaterialBase<T extends Material, ARGS> extends ThWrapperBase<T, ARGS> {\n  constructor(protected parent: ThObject3D<any>) {\n    super();\n  }\n\n  public addToParent() {\n    if (!this.parent.objRef) {\n      throw new Error(\"parent object doesn't hold a three js object instance\");\n    }\n\n    (this.parent.objRef as Mesh).material = this.objRef as Material;\n  }\n\n  public removeFromParent() {\n    if (this._objRef && this.parent && this.parent.objRef) {\n      (this.parent.objRef as any).material = undefined;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport {\n  Blending,\n  BlendingDstFactor,\n  BlendingEquation,\n  BlendingSrcFactor,\n  DepthModes,\n  Material,\n  PixelFormat,\n  Side,\n  StencilFunc,\n  StencilOp,\n} from 'three';\nimport { ThMaterialBase } from '../ThMaterialBase';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-material',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [],\n})\nexport class ThMaterial<\n  T extends Material = Material,\n  TARGS = []\n> extends ThMaterialBase<T, TARGS> {\n  public getType(): Type<Material> {\n    return Material;\n  }\n\n  @Input()\n  public set alphaTest(value: number) {\n    if (this._objRef) {\n      this._objRef.alphaTest = value;\n    }\n  }\n\n  @Input()\n  public set alphaToCoverage(value: boolean) {\n    if (this._objRef) {\n      this._objRef.alphaToCoverage = value;\n    }\n  }\n\n  @Input()\n  public set blendDst(value: BlendingDstFactor) {\n    if (this._objRef) {\n      this._objRef.blendDst = value;\n    }\n  }\n\n  @Input()\n  public set blendDstAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendDstAlpha = value;\n    }\n  }\n\n  @Input()\n  public set blendEquation(value: BlendingEquation) {\n    if (this._objRef) {\n      this._objRef.blendEquation = value;\n    }\n  }\n\n  @Input()\n  public set blendEquationAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendEquationAlpha = value;\n    }\n  }\n\n  @Input()\n  public set blending(value: Blending) {\n    if (this._objRef) {\n      this._objRef.blending = value;\n    }\n  }\n\n  @Input()\n  public set blendSrc(value: BlendingSrcFactor | BlendingDstFactor) {\n    if (this._objRef) {\n      this._objRef.blendSrc = value;\n    }\n  }\n\n  @Input()\n  public set blendSrcAlpha(value: number | null) {\n    if (this._objRef) {\n      this._objRef.blendSrcAlpha = value;\n    }\n  }\n\n  @Input()\n  public set clipIntersection(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipIntersection = value;\n    }\n  }\n\n  @Input()\n  public set clippingPlanes(value: any) {\n    if (this._objRef) {\n      this._objRef.clippingPlanes = value;\n    }\n  }\n\n  @Input()\n  public set clipShadows(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipShadows = value;\n    }\n  }\n\n  @Input()\n  public set colorWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.colorWrite = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: undefined | { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set depthFunc(value: DepthModes) {\n    if (this._objRef) {\n      this._objRef.depthFunc = value;\n    }\n  }\n\n  @Input()\n  public set depthTest(value: boolean) {\n    if (this._objRef) {\n      this._objRef.depthTest = value;\n    }\n  }\n\n  @Input()\n  public set depthWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.depthWrite = value;\n    }\n  }\n\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  @Input()\n  public set format(value: PixelFormat) {\n    if (this._objRef) {\n      this._objRef.format = value;\n    }\n  }\n\n  @Input()\n  public set id(value: number) {\n    if (this._objRef) {\n      this._objRef.id = value;\n    }\n  }\n\n  @Input()\n  public set stencilWrite(value: boolean) {\n    if (this._objRef) {\n      this._objRef.stencilWrite = value;\n    }\n  }\n\n  @Input()\n  public set stencilFunc(value: StencilFunc) {\n    if (this._objRef) {\n      this._objRef.stencilFunc = value;\n    }\n  }\n\n  @Input()\n  public set stencilRef(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilRef = value;\n    }\n  }\n\n  @Input()\n  public set stencilWriteMask(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilWriteMask = value;\n    }\n  }\n\n  @Input()\n  public set stencilFuncMask(value: number) {\n    if (this._objRef) {\n      this._objRef.stencilFuncMask = value;\n    }\n  }\n\n  @Input()\n  public set stencilFail(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilFail = value;\n    }\n  }\n\n  @Input()\n  public set stencilZFail(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilZFail = value;\n    }\n  }\n\n  @Input()\n  public set stencilZPass(value: StencilOp) {\n    if (this._objRef) {\n      this._objRef.stencilZPass = value;\n    }\n  }\n\n  @Input()\n  public set name(value: string) {\n    if (this._objRef) {\n      this._objRef.name = value;\n    }\n  }\n\n  @Input()\n  public set needsUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.needsUpdate = value;\n    }\n  }\n\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  @Input()\n  public set polygonOffset(value: boolean) {\n    if (this._objRef) {\n      this._objRef.polygonOffset = value;\n    }\n  }\n\n  @Input()\n  public set polygonOffsetFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetFactor = value;\n    }\n  }\n\n  @Input()\n  public set polygonOffsetUnits(value: number) {\n    if (this._objRef) {\n      this._objRef.polygonOffsetUnits = value;\n    }\n  }\n\n  @Input()\n  public set precision(value: 'highp' | 'mediump' | 'lowp' | null) {\n    if (this._objRef) {\n      this._objRef.precision = value;\n    }\n  }\n\n  @Input()\n  public set premultipliedAlpha(value: boolean) {\n    if (this._objRef) {\n      this._objRef.premultipliedAlpha = value;\n    }\n  }\n\n  @Input()\n  public set dithering(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dithering = value;\n    }\n  }\n\n  @Input()\n  public set side(value: Side) {\n    if (this._objRef) {\n      this._objRef.side = value;\n    }\n  }\n\n  @Input()\n  public set shadowSide(value: Side | null) {\n    if (this._objRef) {\n      this._objRef.shadowSide = value;\n    }\n  }\n\n  @Input()\n  public set toneMapped(value: boolean) {\n    if (this._objRef) {\n      this._objRef.toneMapped = value;\n    }\n  }\n\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set uuid(value: string) {\n    if (this._objRef) {\n      this._objRef.uuid = value;\n    }\n  }\n\n  @Input()\n  public set vertexColors(value: boolean) {\n    if (this._objRef) {\n      this._objRef.vertexColors = value;\n    }\n  }\n\n  @Input()\n  public set visible(value: boolean) {\n    if (this._objRef) {\n      this._objRef.visible = value;\n    }\n  }\n\n  @Input()\n  public set userData(value: any) {\n    if (this._objRef) {\n      this._objRef.userData = value;\n    }\n  }\n\n  @Input()\n  public set version(value: number) {\n    if (this._objRef) {\n      this._objRef.version = value;\n    }\n  }\n\n  constructor(@SkipSelf() hostObject: ThObject3D) {\n    super(hostObject);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  LineBasicMaterial,\n  LineBasicMaterialParameters,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-lineBasicMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThLineBasicMaterial) },\n  ],\n})\nexport class ThLineBasicMaterial<\n  T extends LineBasicMaterial = LineBasicMaterial,\n  TARGS = /* parameters? */ LineBasicMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<LineBasicMaterial> {\n    return LineBasicMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set linewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n\n  @Input()\n  public set linecap(value: string) {\n    if (this._objRef) {\n      this._objRef.linecap = value;\n    }\n  }\n\n  @Input()\n  public set linejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.linejoin = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { LineDashedMaterial, LineDashedMaterialParameters } from 'three';\nimport { ThLineBasicMaterial } from './ThLineBasicMaterial';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-lineDashedMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThLineDashedMaterial),\n    },\n  ],\n})\nexport class ThLineDashedMaterial<\n  T extends LineDashedMaterial = LineDashedMaterial,\n  TARGS = /* parameters? */ LineDashedMaterialParameters\n> extends ThLineBasicMaterial<T, TARGS> {\n  public getType(): Type<LineDashedMaterial> {\n    return LineDashedMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set scale(value: number) {\n    if (this._objRef) {\n      this._objRef.scale = value;\n    }\n  }\n\n  @Input()\n  public set dashSize(value: number) {\n    if (this._objRef) {\n      this._objRef.dashSize = value;\n    }\n  }\n\n  @Input()\n  public set gapSize(value: number) {\n    if (this._objRef) {\n      this._objRef.gapSize = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, LineLoop, Material } from 'three';\nimport { ThLine } from './ThLine';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lineLoop',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThLineLoop) },\n  ],\n})\nexport class ThLineLoop<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends LineLoop<TGeometry, TMaterial> = LineLoop<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThLine<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<LineLoop<TGeometry, TMaterial>> {\n    return LineLoop;\n  }\n\n  @Input()\n  public set type(value: 'LineLoop') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Event, LOD, Object3D } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-lOD',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThLOD) }],\n})\nexport class ThLOD<T extends LOD = LOD, TARGS = []> extends ThObject3D<\n  Event,\n  T,\n  TARGS\n> {\n  public getType(): Type<LOD> {\n    return LOD;\n  }\n\n  @Input()\n  public set type(value: 'LOD') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set levels(value: Array<{ distance: number; object: Object3D }>) {\n    if (this._objRef) {\n      this._objRef.levels = value;\n    }\n  }\n\n  @Input()\n  public set autoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoUpdate = value;\n    }\n  }\n\n  @Input()\n  public set objects(value: any[]) {\n    if (this._objRef) {\n      this._objRef.objects = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial } from 'three';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-shaderPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThShaderPass) },\n  ],\n})\nexport class ThShaderPass<\n  T extends ShaderPass = ShaderPass,\n  TARGS = [shader: object, textureID?: string]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<ShaderPass> {\n    return ShaderPass;\n  }\n\n  @Input()\n  public set textureID(value: string) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { DataTexture, DataTexture3D } from 'three';\nimport {\n  LUTPass,\n  LUTPassParameters,\n} from 'three/examples/jsm/postprocessing/LUTPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThShaderPass } from './ThShaderPass';\n\n@Component({\n  selector: 'th-lUTPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThLUTPass) },\n  ],\n})\nexport class ThLUTPass<\n  T extends LUTPass = LUTPass,\n  TARGS = /* params */ LUTPassParameters\n> extends ThShaderPass<T, TARGS> {\n  public getType(): Type<LUTPass> {\n    return LUTPass;\n  }\n\n  @Input()\n  public set lut(value: DataTexture | DataTexture3D) {\n    if (this._objRef) {\n      this._objRef.lut = value;\n    }\n  }\n\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, MOUSE, TOUCH, Vector3 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-orbitControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThControlBase, useExisting: forwardRef(() => ThOrbitControls) },\n  ],\n})\nexport class ThOrbitControls<\n  T extends OrbitControls = OrbitControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<OrbitControls> {\n    return OrbitControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement | HTMLDocument) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set target(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target = applyValue<Vector3>(this._objRef.target, value);\n    }\n  }\n  @Input()\n  public set center(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.center = applyValue<Vector3>(this._objRef.center, value);\n    }\n  }\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  @Input()\n  public set minZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.minZoom = value;\n    }\n  }\n\n  @Input()\n  public set maxZoom(value: number) {\n    if (this._objRef) {\n      this._objRef.maxZoom = value;\n    }\n  }\n\n  @Input()\n  public set minPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n\n  @Input()\n  public set maxPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n\n  @Input()\n  public set minAzimuthAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minAzimuthAngle = value;\n    }\n  }\n\n  @Input()\n  public set maxAzimuthAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxAzimuthAngle = value;\n    }\n  }\n\n  @Input()\n  public set enableDamping(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableDamping = value;\n    }\n  }\n\n  @Input()\n  public set dampingFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.dampingFactor = value;\n    }\n  }\n\n  @Input()\n  public set enableZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableZoom = value;\n    }\n  }\n\n  @Input()\n  public set zoomSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n\n  @Input()\n  public set enableRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableRotate = value;\n    }\n  }\n\n  @Input()\n  public set rotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n\n  @Input()\n  public set enablePan(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enablePan = value;\n    }\n  }\n\n  @Input()\n  public set panSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n\n  @Input()\n  public set screenSpacePanning(value: boolean) {\n    if (this._objRef) {\n      this._objRef.screenSpacePanning = value;\n    }\n  }\n\n  @Input()\n  public set keyPanSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.keyPanSpeed = value;\n    }\n  }\n\n  @Input()\n  public set autoRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.autoRotate = value;\n    }\n  }\n\n  @Input()\n  public set autoRotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.autoRotateSpeed = value;\n    }\n  }\n\n  @Input()\n  public set enableKeys(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enableKeys = value;\n    }\n  }\n\n  @Input()\n  public set keys(value: {\n    LEFT: string;\n    UP: string;\n    RIGHT: string;\n    BOTTOM: string;\n  }) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n\n  @Input()\n  public set mouseButtons(value: { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n\n  @Input()\n  public set touches(value: { ONE: TOUCH; TWO: TOUCH }) {\n    if (this._objRef) {\n      this._objRef.touches = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { Camera } from 'three';\nimport { MapControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { ThOrbitControls } from './ThOrbitControls';\n\n@Component({\n  selector: 'th-mapControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThControlBase, useExisting: forwardRef(() => ThMapControls) },\n  ],\n})\nexport class ThMapControls<\n  T extends MapControls = MapControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThOrbitControls<T, TARGS> {\n  public getType(): Type<MapControls> {\n    return MapControls;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, Scene } from 'three';\nimport { MaskPass } from 'three/examples/jsm/postprocessing/MaskPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-maskPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThMaskPass) },\n  ],\n})\nexport class ThMaskPass<\n  T extends MaskPass = MaskPass,\n  TARGS = [scene: Scene, camera: Camera]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<MaskPass> {\n    return MaskPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set inverse(value: boolean) {\n    if (this._objRef) {\n      this._objRef.inverse = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  Combine,\n  MeshBasicMaterial,\n  MeshBasicMaterialParameters,\n  Texture,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshBasicMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThMeshBasicMaterial) },\n  ],\n})\nexport class ThMeshBasicMaterial<\n  T extends MeshBasicMaterial = MeshBasicMaterial,\n  TARGS = /* parameters? */ MeshBasicMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshBasicMaterial> {\n    return MeshBasicMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  DepthPackingStrategies,\n  MeshDepthMaterial,\n  MeshDepthMaterialParameters,\n  Texture,\n} from 'three';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshDepthMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThMeshDepthMaterial) },\n  ],\n})\nexport class ThMeshDepthMaterial<\n  T extends MeshDepthMaterial = MeshDepthMaterial,\n  TARGS = /* parameters? */ MeshDepthMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshDepthMaterial> {\n    return MeshDepthMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set depthPacking(value: DepthPackingStrategies) {\n    if (this._objRef) {\n      this._objRef.depthPacking = value;\n    }\n  }\n\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  MeshDistanceMaterial,\n  MeshDistanceMaterialParameters,\n  Texture,\n  Vector3,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshDistanceMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshDistanceMaterial),\n    },\n  ],\n})\nexport class ThMeshDistanceMaterial<\n  T extends MeshDistanceMaterial = MeshDistanceMaterial,\n  TARGS = /* parameters? */ MeshDistanceMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshDistanceMaterial> {\n    return MeshDistanceMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set farDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.farDistance = value;\n    }\n  }\n\n  @Input()\n  public set nearDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.nearDistance = value;\n    }\n  }\n\n  @Input()\n  public set referencePosition(\n    value: Vector3 | [x: number, y: number, z: number]\n  ) {\n    if (this._objRef) {\n      this._objRef.referencePosition = applyValue<Vector3>(\n        this._objRef.referencePosition,\n        value\n      );\n    }\n  }\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  Combine,\n  MeshLambertMaterial,\n  MeshLambertMaterialParameters,\n  Texture,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshLambertMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshLambertMaterial),\n    },\n  ],\n})\nexport class ThMeshLambertMaterial<\n  T extends MeshLambertMaterial = MeshLambertMaterial,\n  TARGS = /* parameters? */ MeshLambertMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshLambertMaterial> {\n    return MeshLambertMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshMatcapMaterial,\n  MeshMatcapMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshMatcapMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshMatcapMaterial),\n    },\n  ],\n})\nexport class ThMeshMatcapMaterial<\n  T extends MeshMatcapMaterial = MeshMatcapMaterial,\n  TARGS = /* parameters? */ MeshMatcapMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshMatcapMaterial> {\n    return MeshMatcapMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set matcap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.matcap = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(\n        this._objRef.normalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  MeshNormalMaterial,\n  MeshNormalMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshNormalMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshNormalMaterial),\n    },\n  ],\n})\nexport class ThMeshNormalMaterial<\n  T extends MeshNormalMaterial = MeshNormalMaterial,\n  TARGS = /* parameters? */ MeshNormalMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshNormalMaterial> {\n    return MeshNormalMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(\n        this._objRef.normalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  Combine,\n  MeshPhongMaterial,\n  MeshPhongMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshPhongMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThMeshPhongMaterial) },\n  ],\n})\nexport class ThMeshPhongMaterial<\n  T extends MeshPhongMaterial = MeshPhongMaterial,\n  TARGS = /* parameters? */ MeshPhongMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshPhongMaterial> {\n    return MeshPhongMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set specular(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.specular = applyValue<Color>(this._objRef.specular, value);\n    }\n  }\n  @Input()\n  public set shininess(value: number) {\n    if (this._objRef) {\n      this._objRef.shininess = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(\n        this._objRef.normalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set specularMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularMap = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  @Input()\n  public set combine(value: Combine) {\n    if (this._objRef) {\n      this._objRef.combine = value;\n    }\n  }\n\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  @Input()\n  public set metal(value: boolean) {\n    if (this._objRef) {\n      this._objRef.metal = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshStandardMaterial,\n  MeshStandardMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshStandardMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshStandardMaterial),\n    },\n  ],\n})\nexport class ThMeshStandardMaterial<\n  T extends MeshStandardMaterial = MeshStandardMaterial,\n  TARGS = /* parameters? */ MeshStandardMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshStandardMaterial> {\n    return MeshStandardMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set roughness(value: number) {\n    if (this._objRef) {\n      this._objRef.roughness = value;\n    }\n  }\n\n  @Input()\n  public set metalness(value: number) {\n    if (this._objRef) {\n      this._objRef.metalness = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(\n        this._objRef.normalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set roughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.roughnessMap = value;\n    }\n  }\n\n  @Input()\n  public set metalnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.metalnessMap = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set envMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.envMap = value;\n    }\n  }\n\n  @Input()\n  public set envMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.envMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set refractionRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.refractionRatio = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n\n  @Input()\n  public set flatShading(value: boolean) {\n    if (this._objRef) {\n      this._objRef.flatShading = value;\n    }\n  }\n\n  @Input()\n  public set isMeshStandardMaterial(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isMeshStandardMaterial = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshPhysicalMaterial,\n  MeshPhysicalMaterialParameters,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\nimport { ThMeshStandardMaterial } from './ThMeshStandardMaterial';\n\n@Component({\n  selector: 'th-meshPhysicalMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThMaterial,\n      useExisting: forwardRef(() => ThMeshPhysicalMaterial),\n    },\n  ],\n})\nexport class ThMeshPhysicalMaterial<\n  T extends MeshPhysicalMaterial = MeshPhysicalMaterial,\n  TARGS = /* parameters? */ MeshPhysicalMaterialParameters\n> extends ThMeshStandardMaterial<T, TARGS> {\n  public getType(): Type<MeshPhysicalMaterial> {\n    return MeshPhysicalMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set clearcoat(value: number) {\n    if (this._objRef) {\n      this._objRef.clearcoat = value;\n    }\n  }\n\n  @Input()\n  public set clearcoatMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatMap = value;\n    }\n  }\n\n  @Input()\n  public set clearcoatRoughness(value: number) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughness = value;\n    }\n  }\n\n  @Input()\n  public set clearcoatRoughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatRoughnessMap = value;\n    }\n  }\n\n  @Input()\n  public set clearcoatNormalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalScale = applyValue<Vector2>(\n        this._objRef.clearcoatNormalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set clearcoatNormalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.clearcoatNormalMap = value;\n    }\n  }\n\n  @Input()\n  public set reflectivity(value: number) {\n    if (this._objRef) {\n      this._objRef.reflectivity = value;\n    }\n  }\n\n  @Input()\n  public set ior(value: number) {\n    if (this._objRef) {\n      this._objRef.ior = value;\n    }\n  }\n\n  @Input()\n  public set sheen(value: number) {\n    if (this._objRef) {\n      this._objRef.sheen = value;\n    }\n  }\n\n  @Input()\n  public set sheenColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.sheenColor = applyValue<Color>(\n        this._objRef.sheenColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set sheenColorMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.sheenColorMap = value;\n    }\n  }\n\n  @Input()\n  public set sheenRoughness(value: number) {\n    if (this._objRef) {\n      this._objRef.sheenRoughness = value;\n    }\n  }\n\n  @Input()\n  public set sheenRoughnessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.sheenRoughnessMap = value;\n    }\n  }\n\n  @Input()\n  public set transmission(value: number) {\n    if (this._objRef) {\n      this._objRef.transmission = value;\n    }\n  }\n\n  @Input()\n  public set transmissionMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.transmissionMap = value;\n    }\n  }\n\n  @Input()\n  public set thickness(value: number) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n\n  @Input()\n  public set thicknessMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.thicknessMap = value;\n    }\n  }\n\n  @Input()\n  public set attenuationDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.attenuationDistance = value;\n    }\n  }\n\n  @Input()\n  public set attenuationColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.attenuationColor = applyValue<Color>(\n        this._objRef.attenuationColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set specularIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.specularIntensity = value;\n    }\n  }\n\n  @Input()\n  public set specularColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.specularColor = applyValue<Color>(\n        this._objRef.specularColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set specularIntensityMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularIntensityMap = value;\n    }\n  }\n\n  @Input()\n  public set specularColorMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.specularColorMap = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshToonMaterial,\n  MeshToonMaterialParameters,\n  NormalMapTypes,\n  Texture,\n  Vector2,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-meshToonMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThMeshToonMaterial) },\n  ],\n})\nexport class ThMeshToonMaterial<\n  T extends MeshToonMaterial = MeshToonMaterial,\n  TARGS = /* parameters? */ MeshToonMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<MeshToonMaterial> {\n    return MeshToonMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set gradientMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.gradientMap = value;\n    }\n  }\n\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set lightMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.lightMap = value;\n    }\n  }\n\n  @Input()\n  public set lightMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.lightMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set aoMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.aoMap = value;\n    }\n  }\n\n  @Input()\n  public set aoMapIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.aoMapIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissive(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.emissive = applyValue<Color>(this._objRef.emissive, value);\n    }\n  }\n  @Input()\n  public set emissiveIntensity(value: number) {\n    if (this._objRef) {\n      this._objRef.emissiveIntensity = value;\n    }\n  }\n\n  @Input()\n  public set emissiveMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.emissiveMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.bumpMap = value;\n    }\n  }\n\n  @Input()\n  public set bumpScale(value: number) {\n    if (this._objRef) {\n      this._objRef.bumpScale = value;\n    }\n  }\n\n  @Input()\n  public set normalMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.normalMap = value;\n    }\n  }\n\n  @Input()\n  public set normalMapType(value: NormalMapTypes) {\n    if (this._objRef) {\n      this._objRef.normalMapType = value;\n    }\n  }\n\n  @Input()\n  public set normalScale(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.normalScale = applyValue<Vector2>(\n        this._objRef.normalScale,\n        value\n      );\n    }\n  }\n  @Input()\n  public set displacementMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.displacementMap = value;\n    }\n  }\n\n  @Input()\n  public set displacementScale(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementScale = value;\n    }\n  }\n\n  @Input()\n  public set displacementBias(value: number) {\n    if (this._objRef) {\n      this._objRef.displacementBias = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinecap(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinecap = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinejoin(value: string) {\n    if (this._objRef) {\n      this._objRef.wireframeLinejoin = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { OctahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-octahedronGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThOctahedronGeometry),\n    },\n  ],\n})\nexport class ThOctahedronGeometry<\n  T extends OctahedronGeometry = OctahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<OctahedronGeometry> {\n    return OctahedronGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { OrthographicCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-orthographicCamera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThObject3D,\n      useExisting: forwardRef(() => ThOrthographicCamera),\n    },\n    { provide: ThCamera, useExisting: forwardRef(() => ThOrthographicCamera) },\n  ],\n})\nexport class ThOrthographicCamera<\n  T extends OrthographicCamera = OrthographicCamera,\n  TARGS = [\n    left: number,\n    right: number,\n    top: number,\n    bottom: number,\n    near?: number,\n    far?: number\n  ]\n> extends ThCamera<T, TARGS> {\n  public getType(): Type<OrthographicCamera> {\n    return OrthographicCamera;\n  }\n\n  @Input()\n  public set type(value: 'OrthographicCamera') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set zoom(value: number) {\n    if (this._objRef) {\n      this._objRef.zoom = value;\n    }\n  }\n\n  @Input()\n  public set view(\n    value: null | {\n      enabled: boolean;\n      fullWidth: number;\n      fullHeight: number;\n      offsetX: number;\n      offsetY: number;\n      width: number;\n      height: number;\n    }\n  ) {\n    if (this._objRef) {\n      this._objRef.view = value;\n    }\n  }\n\n  @Input()\n  public set left(value: number) {\n    if (this._objRef) {\n      this._objRef.left = value;\n    }\n  }\n\n  @Input()\n  public set right(value: number) {\n    if (this._objRef) {\n      this._objRef.right = value;\n    }\n  }\n\n  @Input()\n  public set top(value: number) {\n    if (this._objRef) {\n      this._objRef.top = value;\n    }\n  }\n\n  @Input()\n  public set bottom(value: number) {\n    if (this._objRef) {\n      this._objRef.bottom = value;\n    }\n  }\n\n  @Input()\n  public set near(value: number) {\n    if (this._objRef) {\n      this._objRef.near = value;\n    }\n  }\n\n  @Input()\n  public set far(value: number) {\n    if (this._objRef) {\n      this._objRef.far = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Matrix4,\n  MeshBasicMaterial,\n  MeshDepthMaterial,\n  Object3D,\n  Scene,\n  ShaderMaterial,\n  Texture,\n  Vector2,\n  WebGLRenderTarget,\n} from 'three';\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-outlinePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThOutlinePass) },\n  ],\n})\nexport class ThOutlinePass<\n  T extends OutlinePass = OutlinePass,\n  TARGS = [\n    resolution: Vector2,\n    scene: Scene,\n    camera: Camera,\n    selectedObjects?: Object3D[]\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<OutlinePass> {\n    return OutlinePass;\n  }\n\n  @Input()\n  public set renderScene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.renderScene = value;\n    }\n  }\n\n  @Input()\n  public set renderCamera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.renderCamera = value;\n    }\n  }\n\n  @Input()\n  public set selectedObjects(value: Object3D[]) {\n    if (this._objRef) {\n      this._objRef.selectedObjects = value;\n    }\n  }\n\n  @Input()\n  public set visibleEdgeColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.visibleEdgeColor = applyValue<Color>(\n        this._objRef.visibleEdgeColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set hiddenEdgeColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.hiddenEdgeColor = applyValue<Color>(\n        this._objRef.hiddenEdgeColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set edgeGlow(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeGlow = value;\n    }\n  }\n\n  @Input()\n  public set usePatternTexture(value: boolean) {\n    if (this._objRef) {\n      this._objRef.usePatternTexture = value;\n    }\n  }\n\n  @Input()\n  public set edgeThickness(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeThickness = value;\n    }\n  }\n\n  @Input()\n  public set edgeStrength(value: number) {\n    if (this._objRef) {\n      this._objRef.edgeStrength = value;\n    }\n  }\n\n  @Input()\n  public set downSampleRatio(value: number) {\n    if (this._objRef) {\n      this._objRef.downSampleRatio = value;\n    }\n  }\n\n  @Input()\n  public set pulsePeriod(value: number) {\n    if (this._objRef) {\n      this._objRef.pulsePeriod = value;\n    }\n  }\n\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(\n        this._objRef.resolution,\n        value\n      );\n    }\n  }\n  @Input()\n  public set patternTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.patternTexture = value;\n    }\n  }\n\n  @Input()\n  public set maskBufferMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.maskBufferMaterial = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetMaskBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskBuffer = value;\n    }\n  }\n\n  @Input()\n  public set depthMaterial(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n\n  @Input()\n  public set prepareMaskMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.prepareMaskMaterial = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetDepthBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetDepthBuffer = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetMaskDownSampleBuffer(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetMaskDownSampleBuffer = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetBlurBuffer1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer1 = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetBlurBuffer2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBlurBuffer2 = value;\n    }\n  }\n\n  @Input()\n  public set edgeDetectionMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.edgeDetectionMaterial = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetEdgeBuffer1(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer1 = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetEdgeBuffer2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetEdgeBuffer2 = value;\n    }\n  }\n\n  @Input()\n  public set separableBlurMaterial1(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial1 = value;\n    }\n  }\n\n  @Input()\n  public set separableBlurMaterial2(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterial2 = value;\n    }\n  }\n\n  @Input()\n  public set overlayMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.overlayMaterial = value;\n    }\n  }\n\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(\n        this._objRef.oldClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set tempPulseColor1(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor1 = applyValue<Color>(\n        this._objRef.tempPulseColor1,\n        value\n      );\n    }\n  }\n  @Input()\n  public set tempPulseColor2(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempPulseColor2 = applyValue<Color>(\n        this._objRef.tempPulseColor2,\n        value\n      );\n    }\n  }\n  @Input()\n  public set textureMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.textureMatrix = applyValue<Matrix4>(\n        this._objRef.textureMatrix,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Vector3 } from 'three';\nimport { ParametricGeometry } from 'three/examples/jsm/geometries/ParametricGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-parametricGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThParametricGeometry),\n    },\n  ],\n})\nexport class ThParametricGeometry<\n  T extends ParametricGeometry = ParametricGeometry,\n  TARGS = [\n    func?: (u: number, v: number, target: Vector3) => void,\n    slices?: number,\n    stacks?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ParametricGeometry> {\n    return ParametricGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    func: (u: number, v: number, dest: Vector3) => void;\n    slices: number;\n    stacks: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { PlaneGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-planeGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThPlaneGeometry),\n    },\n  ],\n})\nexport class ThPlaneGeometry<\n  T extends PlaneGeometry = PlaneGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    widthSegments?: number,\n    heightSegments?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<PlaneGeometry> {\n    return PlaneGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    width: number;\n    height: number;\n    widthSegments: number;\n    heightSegments: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Material, Plane, PlaneHelper, Vector3 } from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-planeHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPlaneHelper) },\n  ],\n})\nexport class ThPlaneHelper<\n  T extends PlaneHelper = PlaneHelper,\n  TARGS = [plane: Plane, size?: number, hex?: number]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<PlaneHelper> {\n    return PlaneHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set plane(value: Plane | [normal: Vector3, constant: number]) {\n    if (this._objRef) {\n      this._objRef.plane = applyValue<Plane>(this._objRef.plane, value);\n    }\n  }\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera } from 'three';\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\nimport { ThControlBase } from '../ThControlBase';\n\n@Component({\n  selector: 'th-pointerLockControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThPointerLockControls),\n    },\n  ],\n})\nexport class ThPointerLockControls<\n  T extends PointerLockControls = PointerLockControls,\n  TARGS = [camera: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<PointerLockControls> {\n    return PointerLockControls;\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set isLocked(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isLocked = value;\n    }\n  }\n\n  @Input()\n  public set minPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.minPolarAngle = value;\n    }\n  }\n\n  @Input()\n  public set maxPolarAngle(value: number) {\n    if (this._objRef) {\n      this._objRef.maxPolarAngle = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ColorRepresentation, PointLight, PointLightShadow } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-pointLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPointLight) },\n  ],\n})\nexport class ThPointLight<\n  T extends PointLight = PointLight,\n  TARGS = [\n    color?: ColorRepresentation,\n    intensity?: number,\n    distance?: number,\n    decay?: number\n  ]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<PointLight> {\n    return PointLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  @Input()\n  public set distance(value: number) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n\n  @Input()\n  public set decay(value: number) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n\n  @Input()\n  public set shadow(value: PointLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  Event,\n  Matrix4,\n  PointLight,\n  PointLightHelper,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-pointLightHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPointLightHelper) },\n  ],\n})\nexport class ThPointLightHelper<\n  T extends PointLightHelper = PointLightHelper,\n  TARGS = [light: PointLight, sphereSize?: number, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<PointLightHelper> {\n    return PointLightHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set light(value: PointLight) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Event, Material, Points } from 'three';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-points',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThPoints) }],\n})\nexport class ThPoints<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends Points<TGeometry, TMaterial> = Points<TGeometry, TMaterial>,\n  TARGS = [geometry?: TGeometry, material?: TMaterial]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Points<TGeometry, TMaterial>> {\n    return Points;\n  }\n\n  @Input()\n  public set type(value: 'Points') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetInfluences(value: number[] | undefined) {\n    if (this._objRef) {\n      this._objRef.morphTargetInfluences = value;\n    }\n  }\n\n  @Input()\n  public set morphTargetDictionary(\n    value: { [key: string]: number } | undefined\n  ) {\n    if (this._objRef) {\n      this._objRef.morphTargetDictionary = value;\n    }\n  }\n\n  @Input()\n  public set geometry(value: TGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  @Input()\n  public set material(value: TMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  PointsMaterial,\n  PointsMaterialParameters,\n  Texture,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-pointsMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThPointsMaterial) },\n  ],\n})\nexport class ThPointsMaterial<\n  T extends PointsMaterial = PointsMaterial,\n  TARGS = /* parameters? */ PointsMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<PointsMaterial> {\n    return PointsMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n\n  @Input()\n  public set sizeAttenuation(value: boolean) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  BufferGeometry,\n  ColorRepresentation,\n  Material,\n  PolarGridHelper,\n} from 'three';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-polarGridHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPolarGridHelper) },\n  ],\n})\nexport class ThPolarGridHelper<\n  T extends PolarGridHelper = PolarGridHelper,\n  TARGS = [\n    radius?: number,\n    radials?: number,\n    circles?: number,\n    divisions?: number,\n    color1?: ColorRepresentation,\n    color2?: ColorRepresentation\n  ]\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<PolarGridHelper> {\n    return PolarGridHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { AudioListener, PositionalAudio } from 'three';\nimport { ThAudio } from './ThAudio';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-positionalAudio',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThPositionalAudio) },\n  ],\n})\nexport class ThPositionalAudio<\n  T extends PositionalAudio = PositionalAudio,\n  TARGS = /* listener */ AudioListener\n> extends ThAudio<PannerNode, T, TARGS> {\n  public getType(): Type<PositionalAudio> {\n    return PositionalAudio;\n  }\n\n  @Input()\n  public set panner(value: PannerNode) {\n    if (this._objRef) {\n      this._objRef.panner = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  GLSLVersion,\n  IUniform,\n  ShaderMaterial,\n  ShaderMaterialParameters,\n} from 'three';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-shaderMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThShaderMaterial) },\n  ],\n})\nexport class ThShaderMaterial<\n  T extends ShaderMaterial = ShaderMaterial,\n  TARGS = /* parameters? */ ShaderMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<ShaderMaterial> {\n    return ShaderMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set defines(value: { [key: string]: any }) {\n    if (this._objRef) {\n      this._objRef.defines = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(value: { [uniform: string]: IUniform }) {\n    if (this._objRef) {\n      this._objRef.uniforms = value;\n    }\n  }\n\n  @Input()\n  public set vertexShader(value: string) {\n    if (this._objRef) {\n      this._objRef.vertexShader = value;\n    }\n  }\n\n  @Input()\n  public set fragmentShader(value: string) {\n    if (this._objRef) {\n      this._objRef.fragmentShader = value;\n    }\n  }\n\n  @Input()\n  public set linewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.linewidth = value;\n    }\n  }\n\n  @Input()\n  public set wireframe(value: boolean) {\n    if (this._objRef) {\n      this._objRef.wireframe = value;\n    }\n  }\n\n  @Input()\n  public set wireframeLinewidth(value: number) {\n    if (this._objRef) {\n      this._objRef.wireframeLinewidth = value;\n    }\n  }\n\n  @Input()\n  public set fog(value: boolean) {\n    if (this._objRef) {\n      this._objRef.fog = value;\n    }\n  }\n\n  @Input()\n  public set lights(value: boolean) {\n    if (this._objRef) {\n      this._objRef.lights = value;\n    }\n  }\n\n  @Input()\n  public set clipping(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clipping = value;\n    }\n  }\n\n  @Input()\n  public set derivatives(value: any) {\n    if (this._objRef) {\n      this._objRef.derivatives = value;\n    }\n  }\n\n  @Input()\n  public set extensions(value: {\n    derivatives: boolean;\n    fragDepth: boolean;\n    drawBuffers: boolean;\n    shaderTextureLOD: boolean;\n  }) {\n    if (this._objRef) {\n      this._objRef.extensions = value;\n    }\n  }\n\n  @Input()\n  public set defaultAttributeValues(value: any) {\n    if (this._objRef) {\n      this._objRef.defaultAttributeValues = value;\n    }\n  }\n\n  @Input()\n  public set index0AttributeName(value: string | undefined) {\n    if (this._objRef) {\n      this._objRef.index0AttributeName = value;\n    }\n  }\n\n  @Input()\n  public set uniformsNeedUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.uniformsNeedUpdate = value;\n    }\n  }\n\n  @Input()\n  public set glslVersion(value: GLSLVersion | null) {\n    if (this._objRef) {\n      this._objRef.glslVersion = value;\n    }\n  }\n\n  @Input()\n  public set isShaderMaterial(value: boolean) {\n    if (this._objRef) {\n      this._objRef.isShaderMaterial = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { RawShaderMaterial, ShaderMaterialParameters } from 'three';\nimport { ThMaterial } from './ThMaterial';\nimport { ThShaderMaterial } from './ThShaderMaterial';\n\n@Component({\n  selector: 'th-rawShaderMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThRawShaderMaterial) },\n  ],\n})\nexport class ThRawShaderMaterial<\n  T extends RawShaderMaterial = RawShaderMaterial,\n  TARGS = /* parameters? */ ShaderMaterialParameters\n> extends ThShaderMaterial<T, TARGS> {\n  public getType(): Type<RawShaderMaterial> {\n    return RawShaderMaterial;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ColorRepresentation, RectAreaLight } from 'three';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-rectAreaLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThRectAreaLight) },\n  ],\n})\nexport class ThRectAreaLight<\n  T extends RectAreaLight = RectAreaLight,\n  TARGS = [\n    color?: ColorRepresentation,\n    intensity?: number,\n    width?: number,\n    height?: number\n  ]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<RectAreaLight> {\n    return RectAreaLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  @Input()\n  public set height(value: number) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { RingGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-ringGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThRingGeometry),\n    },\n  ],\n})\nexport class ThRingGeometry<\n  T extends RingGeometry = RingGeometry,\n  TARGS = [\n    innerRadius?: number,\n    outerRadius?: number,\n    thetaSegments?: number,\n    phiSegments?: number,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<RingGeometry> {\n    return RingGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    innerRadius: number;\n    outerRadius: number;\n    thetaSegments: number;\n    phiSegments: number;\n    thetaStart: number;\n    thetaLength: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { RoundedBoxGeometry } from 'three/examples/jsm/geometries/RoundedBoxGeometry';\nimport { ThBoxGeometry } from './ThBoxGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-roundedBoxGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThRoundedBoxGeometry),\n    },\n  ],\n})\nexport class ThRoundedBoxGeometry<\n  T extends RoundedBoxGeometry = RoundedBoxGeometry,\n  TARGS = [\n    width?: number,\n    height?: number,\n    depth?: number,\n    segments?: number,\n    radius?: number\n  ]\n> extends ThBoxGeometry<T, TARGS> {\n  public getType(): Type<RoundedBoxGeometry> {\n    return RoundedBoxGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  MeshDepthMaterial,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  Vector2,\n  WebGLRenderTarget,\n} from 'three';\nimport {\n  SAOPass,\n  SAOPassParams,\n} from 'three/examples/jsm/postprocessing/SAOPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sAOPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSAOPass) },\n  ],\n})\nexport class ThSAOPass<\n  T extends SAOPass = SAOPass,\n  TARGS = [\n    scene: Scene,\n    camera: Camera,\n    depthTexture?: boolean,\n    useNormals?: boolean,\n    resolution?: Vector2\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SAOPass> {\n    return SAOPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set supportsDepthTextureExtension(value: boolean) {\n    if (this._objRef) {\n      this._objRef.supportsDepthTextureExtension = value;\n    }\n  }\n\n  @Input()\n  public set supportsNormalTexture(value: boolean) {\n    if (this._objRef) {\n      this._objRef.supportsNormalTexture = value;\n    }\n  }\n\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(\n        this._objRef.originalClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(\n        this._objRef.oldClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(\n        this._objRef.resolution,\n        value\n      );\n    }\n  }\n  @Input()\n  public set saoRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.saoRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set blurIntermediateRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurIntermediateRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set depthRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.depthRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set depthMaterial(value: MeshDepthMaterial) {\n    if (this._objRef) {\n      this._objRef.depthMaterial = value;\n    }\n  }\n\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  @Input()\n  public set saoMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.saoMaterial = value;\n    }\n  }\n\n  @Input()\n  public set vBlurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.vBlurMaterial = value;\n    }\n  }\n\n  @Input()\n  public set hBlurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.hBlurMaterial = value;\n    }\n  }\n\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  @Input()\n  public set depthCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthCopy = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set params(value: SAOPassParams) {\n    if (this._objRef) {\n      this._objRef.params = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, WebGLRenderTarget } from 'three';\nimport { SavePass } from 'three/examples/jsm/postprocessing/SavePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-savePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSavePass) },\n  ],\n})\nexport class ThSavePass<\n  T extends SavePass = SavePass,\n  TARGS = /* renderTarget */ WebGLRenderTarget\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SavePass> {\n    return SavePass;\n  }\n\n  @Input()\n  public set textureID(value: string) {\n    if (this._objRef) {\n      this._objRef.textureID = value;\n    }\n  }\n\n  @Input()\n  public set renderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTarget = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  ShadowMaterial,\n  ShadowMaterialParameters,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-shadowMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThShadowMaterial) },\n  ],\n})\nexport class ThShadowMaterial<\n  T extends ShadowMaterial = ShadowMaterial,\n  TARGS = /* parameters? */ ShadowMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<ShadowMaterial> {\n    return ShadowMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Shape, ShapeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-shapeGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThShapeGeometry),\n    },\n  ],\n})\nexport class ThShapeGeometry<\n  T extends ShapeGeometry = ShapeGeometry,\n  TARGS = [shapes?: Shape | Shape[], curveSegments?: number]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<ShapeGeometry> {\n    return ShapeGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Bone,\n  BufferGeometry,\n  Material,\n  Matrix4,\n  Object3D,\n  SkeletonHelper,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-skeletonHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThSkeletonHelper) },\n  ],\n})\nexport class ThSkeletonHelper<\n  T extends SkeletonHelper = SkeletonHelper,\n  TARGS = /* object */ Object3D\n> extends ThLineSegments<BufferGeometry, Material | Material[], T, TARGS> {\n  public getType(): Type<SkeletonHelper> {\n    return SkeletonHelper;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set bones(value: Bone[]) {\n    if (this._objRef) {\n      this._objRef.bones = value;\n    }\n  }\n\n  @Input()\n  public set root(value: Object3D) {\n    if (this._objRef) {\n      this._objRef.root = value;\n    }\n  }\n\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  BufferGeometry,\n  Material,\n  Matrix4,\n  Skeleton,\n  SkinnedMesh,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMesh } from './ThMesh';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-skinnedMesh',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThSkinnedMesh) },\n  ],\n})\nexport class ThSkinnedMesh<\n  TGeometry extends BufferGeometry = BufferGeometry,\n  TMaterial extends Material | Material[] = Material | Material[],\n  T extends SkinnedMesh<TGeometry, TMaterial> = SkinnedMesh<\n    TGeometry,\n    TMaterial\n  >,\n  TARGS = [\n    geometry?: TGeometry,\n    material?: TMaterial,\n    useVertexTexture?: boolean\n  ]\n> extends ThMesh<TGeometry, TMaterial, T, TARGS> {\n  public getType(): Type<SkinnedMesh<TGeometry, TMaterial>> {\n    return SkinnedMesh;\n  }\n\n  @Input()\n  public set bindMode(value: string) {\n    if (this._objRef) {\n      this._objRef.bindMode = value;\n    }\n  }\n\n  @Input()\n  public set bindMatrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.bindMatrix = applyValue<Matrix4>(\n        this._objRef.bindMatrix,\n        value\n      );\n    }\n  }\n  @Input()\n  public set bindMatrixInverse(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.bindMatrixInverse = applyValue<Matrix4>(\n        this._objRef.bindMatrixInverse,\n        value\n      );\n    }\n  }\n  @Input()\n  public set skeleton(value: Skeleton) {\n    if (this._objRef) {\n      this._objRef.skeleton = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, Texture, WebGLRenderTarget } from 'three';\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sMAAPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSMAAPass) },\n  ],\n})\nexport class ThSMAAPass<\n  T extends SMAAPass = SMAAPass,\n  TARGS = [width: number, height: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SMAAPass> {\n    return SMAAPass;\n  }\n\n  @Input()\n  public set edgesRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.edgesRT = value;\n    }\n  }\n\n  @Input()\n  public set weightsRT(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.weightsRT = value;\n    }\n  }\n\n  @Input()\n  public set areaTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.areaTexture = value;\n    }\n  }\n\n  @Input()\n  public set searchTexture(value: Texture) {\n    if (this._objRef) {\n      this._objRef.searchTexture = value;\n    }\n  }\n\n  @Input()\n  public set uniformsEdges(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsEdges = value;\n    }\n  }\n\n  @Input()\n  public set materialEdges(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialEdges = value;\n    }\n  }\n\n  @Input()\n  public set uniformsWeights(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsWeights = value;\n    }\n  }\n\n  @Input()\n  public set materialWeights(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialWeights = value;\n    }\n  }\n\n  @Input()\n  public set uniformsBlend(value: object) {\n    if (this._objRef) {\n      this._objRef.uniformsBlend = value;\n    }\n  }\n\n  @Input()\n  public set materialBlend(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialBlend = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { SphereGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-sphereGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThSphereGeometry),\n    },\n  ],\n})\nexport class ThSphereGeometry<\n  T extends SphereGeometry = SphereGeometry,\n  TARGS = [\n    radius?: number,\n    widthSegments?: number,\n    heightSegments?: number,\n    phiStart?: number,\n    phiLength?: number,\n    thetaStart?: number,\n    thetaLength?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<SphereGeometry> {\n    return SphereGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    radius: number;\n    widthSegments: number;\n    heightSegments: number;\n    phiStart: number;\n    phiLength: number;\n    thetaStart: number;\n    thetaLength: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  Object3D,\n  SpotLight,\n  SpotLightShadow,\n  Vector3,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThLight } from './ThLight';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-spotLight',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThSpotLight) },\n  ],\n})\nexport class ThSpotLight<\n  T extends SpotLight = SpotLight,\n  TARGS = [\n    color?: ColorRepresentation,\n    intensity?: number,\n    distance?: number,\n    angle?: number,\n    penumbra?: number,\n    decay?: number\n  ]\n> extends ThLight<T, TARGS> {\n  public getType(): Type<SpotLight> {\n    return SpotLight;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set position(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position = applyValue<Vector3>(this._objRef.position, value);\n    }\n  }\n  @Input()\n  public set target(value: Object3D) {\n    if (this._objRef) {\n      this._objRef.target = value;\n    }\n  }\n\n  @Input()\n  public set intensity(value: number) {\n    if (this._objRef) {\n      this._objRef.intensity = value;\n    }\n  }\n\n  @Input()\n  public set distance(value: number) {\n    if (this._objRef) {\n      this._objRef.distance = value;\n    }\n  }\n\n  @Input()\n  public set angle(value: number) {\n    if (this._objRef) {\n      this._objRef.angle = value;\n    }\n  }\n\n  @Input()\n  public set decay(value: number) {\n    if (this._objRef) {\n      this._objRef.decay = value;\n    }\n  }\n\n  @Input()\n  public set shadow(value: SpotLightShadow) {\n    if (this._objRef) {\n      this._objRef.shadow = value;\n    }\n  }\n\n  @Input()\n  public set power(value: number) {\n    if (this._objRef) {\n      this._objRef.power = value;\n    }\n  }\n\n  @Input()\n  public set penumbra(value: number) {\n    if (this._objRef) {\n      this._objRef.penumbra = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  ColorRepresentation,\n  Event,\n  Light,\n  LineSegments,\n  Matrix4,\n  SpotLightHelper,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-spotLightHelper',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThSpotLightHelper) },\n  ],\n})\nexport class ThSpotLightHelper<\n  T extends SpotLightHelper = SpotLightHelper,\n  TARGS = [light: Light, color?: ColorRepresentation]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<SpotLightHelper> {\n    return SpotLightHelper;\n  }\n\n  @Input()\n  public set light(value: Light) {\n    if (this._objRef) {\n      this._objRef.light = value;\n    }\n  }\n\n  @Input()\n  public set matrix(\n    value:\n      | Matrix4\n      | [\n          n11: number,\n          n12: number,\n          n13: number,\n          n14: number,\n          n21: number,\n          n22: number,\n          n23: number,\n          n24: number,\n          n31: number,\n          n32: number,\n          n33: number,\n          n34: number,\n          n41: number,\n          n42: number,\n          n43: number,\n          n44: number\n        ]\n  ) {\n    if (this._objRef) {\n      this._objRef.matrix = applyValue<Matrix4>(this._objRef.matrix, value);\n    }\n  }\n  @Input()\n  public set matrixAutoUpdate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.matrixAutoUpdate = value;\n    }\n  }\n\n  @Input()\n  public set color(value: ColorRepresentation | undefined) {\n    if (this._objRef) {\n      this._objRef.color = value;\n    }\n  }\n\n  @Input()\n  public set cone(value: LineSegments) {\n    if (this._objRef) {\n      this._objRef.cone = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, Event, Sprite, SpriteMaterial, Vector2 } from 'three';\nimport { applyValue } from '../util';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-sprite',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: ThObject3D, useExisting: forwardRef(() => ThSprite) }],\n})\nexport class ThSprite<\n  T extends Sprite = Sprite,\n  TARGS = /* material? */ SpriteMaterial\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<Sprite> {\n    return Sprite;\n  }\n\n  @Input()\n  public set type(value: 'Sprite') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set geometry(value: BufferGeometry) {\n    if (this._objRef) {\n      this._objRef.geometry = value;\n    }\n  }\n\n  @Input()\n  public set material(value: SpriteMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set center(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.center = applyValue<Vector2>(this._objRef.center, value);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  SpriteMaterial,\n  SpriteMaterialParameters,\n  Texture,\n} from 'three';\nimport { applyValue } from '../util';\nimport { ThMaterial } from './ThMaterial';\n\n@Component({\n  selector: 'th-spriteMaterial',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThMaterial, useExisting: forwardRef(() => ThSpriteMaterial) },\n  ],\n})\nexport class ThSpriteMaterial<\n  T extends SpriteMaterial = SpriteMaterial,\n  TARGS = /* parameters? */ SpriteMaterialParameters\n> extends ThMaterial<T, TARGS> {\n  public getType(): Type<SpriteMaterial> {\n    return SpriteMaterial;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set map(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set alphaMap(value: Texture | null) {\n    if (this._objRef) {\n      this._objRef.alphaMap = value;\n    }\n  }\n\n  @Input()\n  public set rotation(value: number) {\n    if (this._objRef) {\n      this._objRef.rotation = value;\n    }\n  }\n\n  @Input()\n  public set sizeAttenuation(value: boolean) {\n    if (this._objRef) {\n      this._objRef.sizeAttenuation = value;\n    }\n  }\n\n  @Input()\n  public set transparent(value: boolean) {\n    if (this._objRef) {\n      this._objRef.transparent = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  ColorRepresentation,\n  Scene,\n  ShaderMaterial,\n  WebGLRenderTarget,\n} from 'three';\nimport { SSAARenderPass } from 'three/examples/jsm/postprocessing/SSAARenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSAARenderPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSSAARenderPass) },\n  ],\n})\nexport class ThSSAARenderPass<\n  T extends SSAARenderPass = SSAARenderPass,\n  TARGS = [\n    scene: Scene,\n    camera: Camera,\n    clearColor: ColorRepresentation,\n    clearAlpha: number\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSAARenderPass> {\n    return SSAARenderPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set sampleLevel(value: number) {\n    if (this._objRef) {\n      this._objRef.sampleLevel = value;\n    }\n  }\n\n  @Input()\n  public set unbiased(value: boolean) {\n    if (this._objRef) {\n      this._objRef.unbiased = value;\n    }\n  }\n\n  @Input()\n  public set clearColor(value: ColorRepresentation) {\n    if (this._objRef) {\n      this._objRef.clearColor = value;\n    }\n  }\n\n  @Input()\n  public set clearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.clearAlpha = value;\n    }\n  }\n\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set sampleRenderTarget(value: undefined | WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.sampleRenderTarget = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  DataTexture,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  Vector3,\n  WebGLRenderTarget,\n} from 'three';\nimport {\n  SSAOPass,\n  SSAOPassOUTPUT,\n} from 'three/examples/jsm/postprocessing/SSAOPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSAOPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSSAOPass) },\n  ],\n})\nexport class ThSSAOPass<\n  T extends SSAOPass = SSAOPass,\n  TARGS = [scene: Scene, camera: Camera, width?: number, height?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSAOPass> {\n    return SSAOPass;\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  @Input()\n  public set height(value: boolean) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  @Input()\n  public set kernelRadius(value: number) {\n    if (this._objRef) {\n      this._objRef.kernelRadius = value;\n    }\n  }\n\n  @Input()\n  public set kernelSize(value: number) {\n    if (this._objRef) {\n      this._objRef.kernelSize = value;\n    }\n  }\n\n  @Input()\n  public set kernel(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.kernel = value;\n    }\n  }\n\n  @Input()\n  public set noiseTexture(value: DataTexture) {\n    if (this._objRef) {\n      this._objRef.noiseTexture = value;\n    }\n  }\n\n  @Input()\n  public set output(value: SSAOPassOUTPUT) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set ssaoRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.ssaoRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set blurRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set ssaoMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.ssaoMaterial = value;\n    }\n  }\n\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  @Input()\n  public set blurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n\n  @Input()\n  public set depthRenderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(\n        this._objRef.originalClearColor,\n        value\n      );\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Material,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  Scene,\n  ShaderMaterial,\n  WebGLRenderer,\n  WebGLRenderTarget,\n} from 'three';\nimport { Reflector } from 'three/examples/jsm/objects/ReflectorForSSRPass';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport {\n  SSRPass,\n  SSRPassParams,\n} from 'three/examples/jsm/postprocessing/SSRPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSRPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSSRPass) },\n  ],\n})\nexport class ThSSRPass<\n  T extends SSRPass = SSRPass,\n  TARGS = /* params */ SSRPassParams\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSRPass> {\n    return SSRPass;\n  }\n\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  @Input()\n  public set height(value: number) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  @Input()\n  public set renderer(value: WebGLRenderer) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set groundReflector(value: Reflector | null) {\n    if (this._objRef) {\n      this._objRef.groundReflector = value;\n    }\n  }\n\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  @Input()\n  public set output(value: number) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  @Input()\n  public set thickness(value: number) {\n    if (this._objRef) {\n      this._objRef.thickness = value;\n    }\n  }\n\n  @Input()\n  public set tempColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.tempColor = applyValue<Color>(this._objRef.tempColor, value);\n    }\n  }\n  @Input()\n  public set selective(value: boolean) {\n    if (this._objRef) {\n      this._objRef.selective = value;\n    }\n  }\n\n  @Input()\n  public set blur(value: boolean) {\n    if (this._objRef) {\n      this._objRef.blur = value;\n    }\n  }\n\n  @Input()\n  public set thickTolerance(value: number) {\n    if (this._objRef) {\n      this._objRef.thickTolerance = value;\n    }\n  }\n\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set prevRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.prevRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set normalRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set metalnessRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.metalnessRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set ssrRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.ssrRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set blurRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set blurRenderTarget2(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.blurRenderTarget2 = value;\n    }\n  }\n\n  @Input()\n  public set ssrMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.ssrMaterial = value;\n    }\n  }\n\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  @Input()\n  public set metalnessOnMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.metalnessOnMaterial = value;\n    }\n  }\n\n  @Input()\n  public set metalnessOffMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.metalnessOffMaterial = value;\n    }\n  }\n\n  @Input()\n  public set blurMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial = value;\n    }\n  }\n\n  @Input()\n  public set blurMaterial2(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.blurMaterial2 = value;\n    }\n  }\n\n  @Input()\n  public set depthRenderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(\n        this._objRef.originalClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set dispose(value: () => void) {\n    if (this._objRef) {\n      this._objRef.dispose = value;\n    }\n  }\n\n  @Input()\n  public set renderPass(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderPass = value;\n    }\n  }\n\n  @Input()\n  public set renderOverride(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderOverride = value;\n    }\n  }\n\n  @Input()\n  public set renderMetalness(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderMetalness = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Camera,\n  Color,\n  ColorRepresentation,\n  Material,\n  Mesh,\n  MeshBasicMaterial,\n  MeshNormalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  ShaderMaterial,\n  WebGLRenderer,\n  WebGLRenderTarget,\n} from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\nimport {\n  SSRrPass,\n  SSRrPassParams,\n} from 'three/examples/jsm/postprocessing/SSRrPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-sSRrPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThSSRrPass) },\n  ],\n})\nexport class ThSSRrPass<\n  T extends SSRrPass = SSRrPass,\n  TARGS = /* params */ SSRrPassParams\n> extends ThPass<T, TARGS> {\n  public getType(): Type<SSRrPass> {\n    return SSRrPass;\n  }\n\n  @Input()\n  public set width(value: number) {\n    if (this._objRef) {\n      this._objRef.width = value;\n    }\n  }\n\n  @Input()\n  public set height(value: number) {\n    if (this._objRef) {\n      this._objRef.height = value;\n    }\n  }\n\n  @Input()\n  public set clear(value: boolean) {\n    if (this._objRef) {\n      this._objRef.clear = value;\n    }\n  }\n\n  @Input()\n  public set renderer(value: WebGLRenderer) {\n    if (this._objRef) {\n      this._objRef.renderer = value;\n    }\n  }\n\n  @Input()\n  public set scene(value: Scene) {\n    if (this._objRef) {\n      this._objRef.scene = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set output(value: number) {\n    if (this._objRef) {\n      this._objRef.output = value;\n    }\n  }\n\n  @Input()\n  public set ior(value: number) {\n    if (this._objRef) {\n      this._objRef.ior = value;\n    }\n  }\n\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  @Input()\n  public set surfDist(value: number) {\n    if (this._objRef) {\n      this._objRef.surfDist = value;\n    }\n  }\n\n  @Input()\n  public set color(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.color = applyValue<Color>(this._objRef.color, value);\n    }\n  }\n  @Input()\n  public set seleects(value: Mesh[] | null) {\n    if (this._objRef) {\n      this._objRef.seleects = value;\n    }\n  }\n\n  @Input()\n  public set _specular(value: boolean) {\n    if (this._objRef) {\n      this._objRef._specular = value;\n    }\n  }\n\n  @Input()\n  public set _fillHole(value: boolean) {\n    if (this._objRef) {\n      this._objRef._fillHole = value;\n    }\n  }\n\n  @Input()\n  public set _infiniteThick(value: boolean) {\n    if (this._objRef) {\n      this._objRef._infiniteThick = value;\n    }\n  }\n\n  @Input()\n  public set beautyRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.beautyRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set specularRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.specularRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set normalSelectsRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.normalSelectsRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set refractiveRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.refractiveRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set ssrrRenderTarget(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.ssrrRenderTarget = value;\n    }\n  }\n\n  @Input()\n  public set ssrrMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.ssrrMaterial = value;\n    }\n  }\n\n  @Input()\n  public set normalMaterial(value: MeshNormalMaterial) {\n    if (this._objRef) {\n      this._objRef.normalMaterial = value;\n    }\n  }\n\n  @Input()\n  public set refractiveOnMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.refractiveOnMaterial = value;\n    }\n  }\n\n  @Input()\n  public set refractiveOffMaterial(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.refractiveOffMaterial = value;\n    }\n  }\n\n  @Input()\n  public set specularMaterial(value: MeshStandardMaterial) {\n    if (this._objRef) {\n      this._objRef.specularMaterial = value;\n    }\n  }\n\n  @Input()\n  public set depthRenderMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.depthRenderMaterial = value;\n    }\n  }\n\n  @Input()\n  public set copyMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.copyMaterial = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: FullScreenQuad) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n\n  @Input()\n  public set originalClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.originalClearColor = applyValue<Color>(\n        this._objRef.originalClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set dispose(value: () => void) {\n    if (this._objRef) {\n      this._objRef.dispose = value;\n    }\n  }\n\n  @Input()\n  public set render(\n    value: (renderer: WebGLRenderer, writeBuffer: WebGLRenderTarget) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.render = value;\n    }\n  }\n\n  @Input()\n  public set renderPass(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderPass = value;\n    }\n  }\n\n  @Input()\n  public set renderOverride(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderOverride = value;\n    }\n  }\n\n  @Input()\n  public set renderRefractive(\n    value: (\n      renderer: WebGLRenderer,\n      passMaterial: Material,\n      renderTarget: WebGLRenderTarget,\n      clearColor: ColorRepresentation,\n      clearAlpha: ColorRepresentation\n    ) => void\n  ) {\n    if (this._objRef) {\n      this._objRef.renderRefractive = value;\n    }\n  }\n\n  @Input()\n  public set setSize(value: (width: number, height: number) => void) {\n    if (this._objRef) {\n      this._objRef.setSize = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { PerspectiveCamera, StereoCamera } from 'three';\nimport { ThCamera } from './ThCamera';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-stereoCamera',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThObject3D, useExisting: forwardRef(() => ThStereoCamera) },\n    { provide: ThCamera, useExisting: forwardRef(() => ThStereoCamera) },\n  ],\n})\nexport class ThStereoCamera<\n  T extends StereoCamera = StereoCamera,\n  TARGS = []\n> extends ThCamera<T, TARGS> {\n  public getType(): Type<StereoCamera> {\n    return StereoCamera;\n  }\n\n  @Input()\n  public set type(value: 'StereoCamera') {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set aspect(value: number) {\n    if (this._objRef) {\n      this._objRef.aspect = value;\n    }\n  }\n\n  @Input()\n  public set eyeSep(value: number) {\n    if (this._objRef) {\n      this._objRef.eyeSep = value;\n    }\n  }\n\n  @Input()\n  public set cameraL(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cameraL = value;\n    }\n  }\n\n  @Input()\n  public set cameraR(value: PerspectiveCamera) {\n    if (this._objRef) {\n      this._objRef.cameraR = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, ColorRepresentation, Scene } from 'three';\nimport { TAARenderPass } from 'three/examples/jsm/postprocessing/TAARenderPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThSSAARenderPass } from './ThSSAARenderPass';\n\n@Component({\n  selector: 'th-tAARenderPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThTAARenderPass) },\n  ],\n})\nexport class ThTAARenderPass<\n  T extends TAARenderPass = TAARenderPass,\n  TARGS = [\n    scene: Scene,\n    camera: Camera,\n    clearColor: ColorRepresentation,\n    clearAlpha: number\n  ]\n> extends ThSSAARenderPass<T, TARGS> {\n  public getType(): Type<TAARenderPass> {\n    return TAARenderPass;\n  }\n\n  @Input()\n  public set accumulate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.accumulate = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Type,\n} from '@angular/core';\nimport { TeapotGeometry } from 'three/examples/jsm/geometries/TeapotGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-teapotGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTeapotGeometry),\n    },\n  ],\n})\nexport class ThTeapotGeometry<\n  T extends TeapotGeometry = TeapotGeometry,\n  TARGS = [\n    size?: number,\n    segments?: number,\n    bottom?: boolean,\n    lid?: boolean,\n    body?: boolean,\n    fitLid?: boolean,\n    blinn?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TeapotGeometry> {\n    return TeapotGeometry;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { TetrahedronGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\n\n@Component({\n  selector: 'th-tetrahedronGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTetrahedronGeometry),\n    },\n  ],\n})\nexport class ThTetrahedronGeometry<\n  T extends TetrahedronGeometry = TetrahedronGeometry,\n  TARGS = [radius?: number, detail?: number]\n> extends ThPolyhedronGeometry<T, TARGS> {\n  public getType(): Type<TetrahedronGeometry> {\n    return TetrahedronGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  TextGeometry,\n  TextGeometryParameters,\n} from 'three/examples/jsm/geometries/TextGeometry';\nimport { Font } from 'three/examples/jsm/loaders/FontLoader';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThExtrudeGeometry } from './ThExtrudeGeometry';\n\n@Component({\n  selector: 'th-textGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTextGeometry),\n    },\n  ],\n})\nexport class ThTextGeometry<\n  T extends TextGeometry = TextGeometry,\n  TARGS = [text: string, parameters: TextGeometryParameters]\n> extends ThExtrudeGeometry<T, TARGS> {\n  public getType(): Type<TextGeometry> {\n    return TextGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    font: Font;\n    size: number;\n    height: number;\n    curveSegments: number;\n    bevelEnabled: boolean;\n    bevelThickness: number;\n    bevelSize: number;\n    bevelOffset: number;\n    bevelSegments: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { ShaderMaterial, Texture } from 'three';\nimport { TexturePass } from 'three/examples/jsm/postprocessing/TexturePass';\nimport { ThPassBase } from '../ThPassBase';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-texturePass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThTexturePass) },\n  ],\n})\nexport class ThTexturePass<\n  T extends TexturePass = TexturePass,\n  TARGS = [map: Texture, opacity?: number]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<TexturePass> {\n    return TexturePass;\n  }\n\n  @Input()\n  public set map(value: Texture) {\n    if (this._objRef) {\n      this._objRef.map = value;\n    }\n  }\n\n  @Input()\n  public set opacity(value: number) {\n    if (this._objRef) {\n      this._objRef.opacity = value;\n    }\n  }\n\n  @Input()\n  public set uniforms(map: { [name: string]: { value: any } }) {\n    if (this._objRef) {\n      Object.assign(this._objRef.uniforms, map);\n    }\n  }\n\n  @Input()\n  public set material(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.material = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { TorusGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-torusGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTorusGeometry),\n    },\n  ],\n})\nexport class ThTorusGeometry<\n  T extends TorusGeometry = TorusGeometry,\n  TARGS = [\n    radius?: number,\n    tube?: number,\n    radialSegments?: number,\n    tubularSegments?: number,\n    arc?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TorusGeometry> {\n    return TorusGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    radius: number;\n    tube: number;\n    radialSegments: number;\n    tubularSegments: number;\n    arc: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { TorusKnotGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-torusKnotGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTorusKnotGeometry),\n    },\n  ],\n})\nexport class ThTorusKnotGeometry<\n  T extends TorusKnotGeometry = TorusKnotGeometry,\n  TARGS = [\n    radius?: number,\n    tube?: number,\n    tubularSegments?: number,\n    radialSegments?: number,\n    p?: number,\n    q?: number\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TorusKnotGeometry> {\n    return TorusKnotGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    radius: number;\n    tube: number;\n    tubularSegments: number;\n    radialSegments: number;\n    p: number;\n    q: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, MOUSE, Vector3 } from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { applyValue } from '../util';\n\n@Component({\n  selector: 'th-trackballControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThTrackballControls),\n    },\n  ],\n})\nexport class ThTrackballControls<\n  T extends TrackballControls = TrackballControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThControlBase<T, TARGS> {\n  public getType(): Type<TrackballControls> {\n    return TrackballControls;\n  }\n\n  @Input()\n  public set object(value: Camera) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set screen(value: {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  }) {\n    if (this._objRef) {\n      this._objRef.screen = value;\n    }\n  }\n\n  @Input()\n  public set rotateSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.rotateSpeed = value;\n    }\n  }\n\n  @Input()\n  public set zoomSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.zoomSpeed = value;\n    }\n  }\n\n  @Input()\n  public set panSpeed(value: number) {\n    if (this._objRef) {\n      this._objRef.panSpeed = value;\n    }\n  }\n\n  @Input()\n  public set noRotate(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noRotate = value;\n    }\n  }\n\n  @Input()\n  public set noZoom(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noZoom = value;\n    }\n  }\n\n  @Input()\n  public set noPan(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noPan = value;\n    }\n  }\n\n  @Input()\n  public set noRoll(value: boolean) {\n    if (this._objRef) {\n      this._objRef.noRoll = value;\n    }\n  }\n\n  @Input()\n  public set staticMoving(value: boolean) {\n    if (this._objRef) {\n      this._objRef.staticMoving = value;\n    }\n  }\n\n  @Input()\n  public set dynamicDampingFactor(value: number) {\n    if (this._objRef) {\n      this._objRef.dynamicDampingFactor = value;\n    }\n  }\n\n  @Input()\n  public set minDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.minDistance = value;\n    }\n  }\n\n  @Input()\n  public set maxDistance(value: number) {\n    if (this._objRef) {\n      this._objRef.maxDistance = value;\n    }\n  }\n\n  @Input()\n  public set keys(value: string[]) {\n    if (this._objRef) {\n      this._objRef.keys = value;\n    }\n  }\n\n  @Input()\n  public set mouseButtons(value: { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n\n  @Input()\n  public set target(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target = applyValue<Vector3>(this._objRef.target, value);\n    }\n  }\n  @Input()\n  public set position0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.position0 = applyValue<Vector3>(\n        this._objRef.position0,\n        value\n      );\n    }\n  }\n  @Input()\n  public set target0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.target0 = applyValue<Vector3>(this._objRef.target0, value);\n    }\n  }\n  @Input()\n  public set up0(value: Vector3 | [x: number, y: number, z: number]) {\n    if (this._objRef) {\n      this._objRef.up0 = applyValue<Vector3>(this._objRef.up0, value);\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Camera, Event, MOUSE, Object3D } from 'three';\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\nimport { ThControlBase } from '../ThControlBase';\nimport { ThObject3D } from './ThObject3D';\n\n@Component({\n  selector: 'th-transformControls',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThControlBase,\n      useExisting: forwardRef(() => ThTransformControls),\n    },\n  ],\n})\nexport class ThTransformControls<\n  T extends TransformControls = TransformControls,\n  TARGS = [object: Camera, domElement?: HTMLElement]\n> extends ThObject3D<Event, T, TARGS> {\n  public getType(): Type<TransformControls> {\n    return TransformControls;\n  }\n\n  @Input()\n  public set domElement(value: HTMLElement) {\n    if (this._objRef) {\n      this._objRef.domElement = value;\n    }\n  }\n\n  @Input()\n  public set camera(value: Camera) {\n    if (this._objRef) {\n      this._objRef.camera = value;\n    }\n  }\n\n  @Input()\n  public set object(value: Object3D | undefined) {\n    if (this._objRef) {\n      this._objRef.object = value;\n    }\n  }\n\n  @Input()\n  public set enabled(value: boolean) {\n    if (this._objRef) {\n      this._objRef.enabled = value;\n    }\n  }\n\n  @Input()\n  public set axis(\n    value: 'X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null\n  ) {\n    if (this._objRef) {\n      this._objRef.axis = value;\n    }\n  }\n\n  @Input()\n  public set mode(value: 'translate' | 'rotate' | 'scale') {\n    if (this._objRef) {\n      this._objRef.mode = value;\n    }\n  }\n\n  @Input()\n  public set translationSnap(value: number | null) {\n    if (this._objRef) {\n      this._objRef.translationSnap = value;\n    }\n  }\n\n  @Input()\n  public set rotationSnap(value: number | null) {\n    if (this._objRef) {\n      this._objRef.rotationSnap = value;\n    }\n  }\n\n  @Input()\n  public set space(value: 'world' | 'local') {\n    if (this._objRef) {\n      this._objRef.space = value;\n    }\n  }\n\n  @Input()\n  public set size(value: number) {\n    if (this._objRef) {\n      this._objRef.size = value;\n    }\n  }\n\n  @Input()\n  public set dragging(value: boolean) {\n    if (this._objRef) {\n      this._objRef.dragging = value;\n    }\n  }\n\n  @Input()\n  public set showX(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showX = value;\n    }\n  }\n\n  @Input()\n  public set showY(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showY = value;\n    }\n  }\n\n  @Input()\n  public set showZ(value: boolean) {\n    if (this._objRef) {\n      this._objRef.showZ = value;\n    }\n  }\n\n  @Input()\n  public set mouseButtons(value: { LEFT: MOUSE; MIDDLE: MOUSE; RIGHT: MOUSE }) {\n    if (this._objRef) {\n      this._objRef.mouseButtons = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { Curve, TubeGeometry, Vector3 } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-tubeGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThTubeGeometry),\n    },\n  ],\n})\nexport class ThTubeGeometry<\n  T extends TubeGeometry = TubeGeometry,\n  TARGS = [\n    path?: Curve<Vector3>,\n    tubularSegments?: number,\n    radius?: number,\n    radiusSegments?: number,\n    closed?: boolean\n  ]\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<TubeGeometry> {\n    return TubeGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: {\n    path: Curve<Vector3>;\n    tubularSegments: number;\n    radius: number;\n    radialSegments: number;\n    closed: boolean;\n  }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n\n  @Input()\n  public set tangents(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.tangents = value;\n    }\n  }\n\n  @Input()\n  public set normals(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.normals = value;\n    }\n  }\n\n  @Input()\n  public set binormals(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.binormals = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport {\n  Color,\n  ColorRepresentation,\n  MeshBasicMaterial,\n  ShaderMaterial,\n  Vector2,\n  Vector3,\n  WebGLRenderTarget,\n} from 'three';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { ThPassBase } from '../ThPassBase';\nimport { applyValue } from '../util';\nimport { ThPass } from './ThPass';\n\n@Component({\n  selector: 'th-unrealBloomPass',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: ThPassBase, useExisting: forwardRef(() => ThUnrealBloomPass) },\n  ],\n})\nexport class ThUnrealBloomPass<\n  T extends UnrealBloomPass = UnrealBloomPass,\n  TARGS = [\n    resolution: Vector2,\n    strength: number,\n    radius: number,\n    threshold: number\n  ]\n> extends ThPass<T, TARGS> {\n  public getType(): Type<UnrealBloomPass> {\n    return UnrealBloomPass;\n  }\n\n  @Input()\n  public set resolution(value: Vector2 | [x: number, y: number]) {\n    if (this._objRef) {\n      this._objRef.resolution = applyValue<Vector2>(\n        this._objRef.resolution,\n        value\n      );\n    }\n  }\n  @Input()\n  public set strength(value: number) {\n    if (this._objRef) {\n      this._objRef.strength = value;\n    }\n  }\n\n  @Input()\n  public set radius(value: number) {\n    if (this._objRef) {\n      this._objRef.radius = value;\n    }\n  }\n\n  @Input()\n  public set threshold(value: number) {\n    if (this._objRef) {\n      this._objRef.threshold = value;\n    }\n  }\n\n  @Input()\n  public set clearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.clearColor = applyValue<Color>(\n        this._objRef.clearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set renderTargetsHorizontal(value: WebGLRenderTarget[]) {\n    if (this._objRef) {\n      this._objRef.renderTargetsHorizontal = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetsVertical(value: WebGLRenderTarget[]) {\n    if (this._objRef) {\n      this._objRef.renderTargetsVertical = value;\n    }\n  }\n\n  @Input()\n  public set nMips(value: number) {\n    if (this._objRef) {\n      this._objRef.nMips = value;\n    }\n  }\n\n  @Input()\n  public set renderTargetBright(value: WebGLRenderTarget) {\n    if (this._objRef) {\n      this._objRef.renderTargetBright = value;\n    }\n  }\n\n  @Input()\n  public set highPassUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.highPassUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialHighPassFilter(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialHighPassFilter = value;\n    }\n  }\n\n  @Input()\n  public set separableBlurMaterials(value: ShaderMaterial[]) {\n    if (this._objRef) {\n      this._objRef.separableBlurMaterials = value;\n    }\n  }\n\n  @Input()\n  public set compositeMaterial(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.compositeMaterial = value;\n    }\n  }\n\n  @Input()\n  public set bloomTintColors(value: Vector3[]) {\n    if (this._objRef) {\n      this._objRef.bloomTintColors = value;\n    }\n  }\n\n  @Input()\n  public set copyUniforms(value: object) {\n    if (this._objRef) {\n      this._objRef.copyUniforms = value;\n    }\n  }\n\n  @Input()\n  public set materialCopy(value: ShaderMaterial) {\n    if (this._objRef) {\n      this._objRef.materialCopy = value;\n    }\n  }\n\n  @Input()\n  public set oldClearColor(value: Color | [color: ColorRepresentation]) {\n    if (this._objRef) {\n      this._objRef.oldClearColor = applyValue<Color>(\n        this._objRef.oldClearColor,\n        value\n      );\n    }\n  }\n  @Input()\n  public set oldClearAlpha(value: number) {\n    if (this._objRef) {\n      this._objRef.oldClearAlpha = value;\n    }\n  }\n\n  @Input()\n  public set basic(value: MeshBasicMaterial) {\n    if (this._objRef) {\n      this._objRef.basic = value;\n    }\n  }\n\n  @Input()\n  public set fsQuad(value: object) {\n    if (this._objRef) {\n      this._objRef.fsQuad = value;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  Type,\n} from '@angular/core';\nimport { BufferGeometry, WireframeGeometry } from 'three';\nimport { ThBufferGeometry } from './ThBufferGeometry';\n\n@Component({\n  selector: 'th-wireframeGeometry',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ThBufferGeometry,\n      useExisting: forwardRef(() => ThWireframeGeometry),\n    },\n  ],\n})\nexport class ThWireframeGeometry<\n  TBufferGeometry extends BufferGeometry = BufferGeometry,\n  T extends WireframeGeometry<TBufferGeometry> = WireframeGeometry<TBufferGeometry>,\n  TARGS = /* geometry? */ TBufferGeometry\n> extends ThBufferGeometry<T, TARGS> {\n  public getType(): Type<WireframeGeometry<TBufferGeometry>> {\n    return WireframeGeometry;\n  }\n\n  @Input()\n  public set type(value: string) {\n    if (this._objRef) {\n      this._objRef.type = value;\n    }\n  }\n\n  @Input()\n  public set parameters(value: { geometry: TBufferGeometry }) {\n    if (this._objRef) {\n      this._objRef.parameters = value;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ThEffectComposer } from './overrides/ThEffectComposer';\nimport { ThRenderPass } from './overrides/ThRenderPass';\nimport { ThAdaptiveToneMappingPass } from './ThAdaptiveToneMappingPass';\nimport { ThAfterimagePass } from './ThAfterimagePass';\nimport { ThAmbientLight } from './ThAmbientLight';\nimport { ThAmbientLightProbe } from './ThAmbientLightProbe';\nimport { ThArrayCamera } from './ThArrayCamera';\nimport { ThArrowHelper } from './ThArrowHelper';\nimport { ThAudio } from './ThAudio';\nimport { ThAudioListener } from './ThAudioListener';\nimport { ThAxesHelper } from './ThAxesHelper';\nimport { ThBloomPass } from './ThBloomPass';\nimport { ThBokehPass } from './ThBokehPass';\nimport { ThBone } from './ThBone';\nimport { ThBox3Helper } from './ThBox3Helper';\nimport { ThBoxGeometry } from './ThBoxGeometry';\nimport { ThBoxHelper } from './ThBoxHelper';\nimport { ThBoxLineGeometry } from './ThBoxLineGeometry';\nimport { ThBufferGeometry } from './ThBufferGeometry';\nimport { ThCamera } from './ThCamera';\nimport { ThCameraHelper } from './ThCameraHelper';\nimport { ThCircleGeometry } from './ThCircleGeometry';\nimport { ThClearMaskPass } from './ThClearMaskPass';\nimport { ThClearPass } from './ThClearPass';\nimport { ThConeGeometry } from './ThConeGeometry';\nimport { ThConvexGeometry } from './ThConvexGeometry';\nimport { ThCubeCamera } from './ThCubeCamera';\nimport { ThCubeTexturePass } from './ThCubeTexturePass';\nimport { ThCylinderGeometry } from './ThCylinderGeometry';\nimport { ThDecalGeometry } from './ThDecalGeometry';\nimport { ThDirectionalLight } from './ThDirectionalLight';\nimport { ThDirectionalLightHelper } from './ThDirectionalLightHelper';\nimport { ThDodecahedronGeometry } from './ThDodecahedronGeometry';\nimport { ThDotScreenPass } from './ThDotScreenPass';\nimport { ThDragControls } from './ThDragControls';\nimport { ThEdgesGeometry } from './ThEdgesGeometry';\nimport { ThEffectComposerGen } from './ThEffectComposerGen';\nimport { ThExtrudeGeometry } from './ThExtrudeGeometry';\nimport { ThFilmPass } from './ThFilmPass';\nimport { ThFirstPersonControls } from './ThFirstPersonControls';\nimport { ThFlyControls } from './ThFlyControls';\nimport { ThGlitchPass } from './ThGlitchPass';\nimport { ThGridHelper } from './ThGridHelper';\nimport { ThGroup } from './ThGroup';\nimport { ThHalftonePass } from './ThHalftonePass';\nimport { ThHemisphereLight } from './ThHemisphereLight';\nimport { ThHemisphereLightHelper } from './ThHemisphereLightHelper';\nimport { ThHemisphereLightProbe } from './ThHemisphereLightProbe';\nimport { ThIcosahedronGeometry } from './ThIcosahedronGeometry';\nimport { ThInstancedBufferGeometry } from './ThInstancedBufferGeometry';\nimport { ThInstancedMesh } from './ThInstancedMesh';\nimport { ThLatheGeometry } from './ThLatheGeometry';\nimport { ThLight } from './ThLight';\nimport { ThLightProbe } from './ThLightProbe';\nimport { ThLine } from './ThLine';\nimport { ThLineBasicMaterial } from './ThLineBasicMaterial';\nimport { ThLineDashedMaterial } from './ThLineDashedMaterial';\nimport { ThLineLoop } from './ThLineLoop';\nimport { ThLineSegments } from './ThLineSegments';\nimport { ThLOD } from './ThLOD';\nimport { ThLUTPass } from './ThLUTPass';\nimport { ThMapControls } from './ThMapControls';\nimport { ThMaskPass } from './ThMaskPass';\nimport { ThMaterial } from './ThMaterial';\nimport { ThMesh } from './ThMesh';\nimport { ThMeshBasicMaterial } from './ThMeshBasicMaterial';\nimport { ThMeshDepthMaterial } from './ThMeshDepthMaterial';\nimport { ThMeshDistanceMaterial } from './ThMeshDistanceMaterial';\nimport { ThMeshLambertMaterial } from './ThMeshLambertMaterial';\nimport { ThMeshMatcapMaterial } from './ThMeshMatcapMaterial';\nimport { ThMeshNormalMaterial } from './ThMeshNormalMaterial';\nimport { ThMeshPhongMaterial } from './ThMeshPhongMaterial';\nimport { ThMeshPhysicalMaterial } from './ThMeshPhysicalMaterial';\nimport { ThMeshStandardMaterial } from './ThMeshStandardMaterial';\nimport { ThMeshToonMaterial } from './ThMeshToonMaterial';\nimport { ThObject3D } from './ThObject3D';\nimport { ThOctahedronGeometry } from './ThOctahedronGeometry';\nimport { ThOrbitControls } from './ThOrbitControls';\nimport { ThOrthographicCamera } from './ThOrthographicCamera';\nimport { ThOutlinePass } from './ThOutlinePass';\nimport { ThParametricGeometry } from './ThParametricGeometry';\nimport { ThPass } from './ThPass';\nimport { ThPerspectiveCamera } from './ThPerspectiveCamera';\nimport { ThPlaneGeometry } from './ThPlaneGeometry';\nimport { ThPlaneHelper } from './ThPlaneHelper';\nimport { ThPointerLockControls } from './ThPointerLockControls';\nimport { ThPointLight } from './ThPointLight';\nimport { ThPointLightHelper } from './ThPointLightHelper';\nimport { ThPoints } from './ThPoints';\nimport { ThPointsMaterial } from './ThPointsMaterial';\nimport { ThPolarGridHelper } from './ThPolarGridHelper';\nimport { ThPolyhedronGeometry } from './ThPolyhedronGeometry';\nimport { ThPositionalAudio } from './ThPositionalAudio';\nimport { ThRawShaderMaterial } from './ThRawShaderMaterial';\nimport { ThRectAreaLight } from './ThRectAreaLight';\nimport { ThRenderPassGen } from './ThRenderPassGen';\nimport { ThRingGeometry } from './ThRingGeometry';\nimport { ThRoundedBoxGeometry } from './ThRoundedBoxGeometry';\nimport { ThSAOPass } from './ThSAOPass';\nimport { ThSavePass } from './ThSavePass';\nimport { ThScene } from './ThScene';\nimport { ThShaderMaterial } from './ThShaderMaterial';\nimport { ThShaderPass } from './ThShaderPass';\nimport { ThShadowMaterial } from './ThShadowMaterial';\nimport { ThShapeGeometry } from './ThShapeGeometry';\nimport { ThSkeletonHelper } from './ThSkeletonHelper';\nimport { ThSkinnedMesh } from './ThSkinnedMesh';\nimport { ThSMAAPass } from './ThSMAAPass';\nimport { ThSphereGeometry } from './ThSphereGeometry';\nimport { ThSpotLight } from './ThSpotLight';\nimport { ThSpotLightHelper } from './ThSpotLightHelper';\nimport { ThSprite } from './ThSprite';\nimport { ThSpriteMaterial } from './ThSpriteMaterial';\nimport { ThSSAARenderPass } from './ThSSAARenderPass';\nimport { ThSSAOPass } from './ThSSAOPass';\nimport { ThSSRPass } from './ThSSRPass';\nimport { ThSSRrPass } from './ThSSRrPass';\nimport { ThStereoCamera } from './ThStereoCamera';\nimport { ThTAARenderPass } from './ThTAARenderPass';\nimport { ThTeapotGeometry } from './ThTeapotGeometry';\nimport { ThTetrahedronGeometry } from './ThTetrahedronGeometry';\nimport { ThTextGeometry } from './ThTextGeometry';\nimport { ThTexturePass } from './ThTexturePass';\nimport { ThTorusGeometry } from './ThTorusGeometry';\nimport { ThTorusKnotGeometry } from './ThTorusKnotGeometry';\nimport { ThTrackballControls } from './ThTrackballControls';\nimport { ThTransformControls } from './ThTransformControls';\nimport { ThTubeGeometry } from './ThTubeGeometry';\nimport { ThUnrealBloomPass } from './ThUnrealBloomPass';\nimport { ThWireframeGeometry } from './ThWireframeGeometry';\n\n@NgModule({\n  declarations: [\n    ThAudioListener,\n    ThPositionalAudio,\n    ThAudio,\n    ThStereoCamera,\n    ThPerspectiveCamera,\n    ThOrthographicCamera,\n    ThCubeCamera,\n    ThArrayCamera,\n    ThCamera,\n    ThObject3D,\n    ThSpotLightHelper,\n    ThSkeletonHelper,\n    ThPointLightHelper,\n    ThHemisphereLightHelper,\n    ThGridHelper,\n    ThPolarGridHelper,\n    ThDirectionalLightHelper,\n    ThCameraHelper,\n    ThBoxHelper,\n    ThBox3Helper,\n    ThPlaneHelper,\n    ThArrowHelper,\n    ThAxesHelper,\n    ThSpotLight,\n    ThPointLight,\n    ThRectAreaLight,\n    ThHemisphereLight,\n    ThDirectionalLight,\n    ThAmbientLight,\n    ThLight,\n    ThAmbientLightProbe,\n    ThHemisphereLightProbe,\n    ThLightProbe,\n    ThSprite,\n    ThLOD,\n    ThInstancedMesh,\n    ThSkinnedMesh,\n    ThBone,\n    ThMesh,\n    ThLineSegments,\n    ThLineLoop,\n    ThLine,\n    ThPoints,\n    ThGroup,\n    ThScene,\n    ThShadowMaterial,\n    ThSpriteMaterial,\n    ThRawShaderMaterial,\n    ThShaderMaterial,\n    ThPointsMaterial,\n    ThMeshPhysicalMaterial,\n    ThMeshStandardMaterial,\n    ThMeshPhongMaterial,\n    ThMeshToonMaterial,\n    ThMeshNormalMaterial,\n    ThMeshLambertMaterial,\n    ThMeshDepthMaterial,\n    ThMeshDistanceMaterial,\n    ThMeshBasicMaterial,\n    ThMeshMatcapMaterial,\n    ThLineDashedMaterial,\n    ThLineBasicMaterial,\n    ThMaterial,\n    ThInstancedBufferGeometry,\n    ThBufferGeometry,\n    ThBoxGeometry,\n    ThCircleGeometry,\n    ThConeGeometry,\n    ThCylinderGeometry,\n    ThDodecahedronGeometry,\n    ThEdgesGeometry,\n    ThExtrudeGeometry,\n    ThIcosahedronGeometry,\n    ThLatheGeometry,\n    ThOctahedronGeometry,\n    ThPlaneGeometry,\n    ThPolyhedronGeometry,\n    ThRingGeometry,\n    ThShapeGeometry,\n    ThSphereGeometry,\n    ThTetrahedronGeometry,\n    ThTorusGeometry,\n    ThTorusKnotGeometry,\n    ThTubeGeometry,\n    ThWireframeGeometry,\n    ThBoxLineGeometry,\n    ThConvexGeometry,\n    ThDecalGeometry,\n    ThParametricGeometry,\n    ThRoundedBoxGeometry,\n    ThTeapotGeometry,\n    ThTextGeometry,\n    ThDragControls,\n    ThFirstPersonControls,\n    ThFlyControls,\n    ThOrbitControls,\n    ThMapControls,\n    ThPointerLockControls,\n    ThTrackballControls,\n    ThTransformControls,\n    ThPass,\n    ThEffectComposerGen,\n    ThEffectComposer,\n    ThAdaptiveToneMappingPass,\n    ThAfterimagePass,\n    ThBloomPass,\n    ThBokehPass,\n    ThClearPass,\n    ThCubeTexturePass,\n    ThDotScreenPass,\n    ThFilmPass,\n    ThGlitchPass,\n    ThHalftonePass,\n    ThLUTPass,\n    ThMaskPass,\n    ThClearMaskPass,\n    ThOutlinePass,\n    ThRenderPassGen,\n    ThRenderPass,\n    ThSAOPass,\n    ThSMAAPass,\n    ThSSAARenderPass,\n    ThSSAOPass,\n    ThSSRPass,\n    ThSSRrPass,\n    ThSavePass,\n    ThShaderPass,\n    ThTAARenderPass,\n    ThTexturePass,\n    ThUnrealBloomPass,\n  ],\n  exports: [\n    ThAudioListener,\n    ThPositionalAudio,\n    ThAudio,\n    ThStereoCamera,\n    ThPerspectiveCamera,\n    ThOrthographicCamera,\n    ThCubeCamera,\n    ThArrayCamera,\n    ThCamera,\n    ThObject3D,\n    ThSpotLightHelper,\n    ThSkeletonHelper,\n    ThPointLightHelper,\n    ThHemisphereLightHelper,\n    ThGridHelper,\n    ThPolarGridHelper,\n    ThDirectionalLightHelper,\n    ThCameraHelper,\n    ThBoxHelper,\n    ThBox3Helper,\n    ThPlaneHelper,\n    ThArrowHelper,\n    ThAxesHelper,\n    ThSpotLight,\n    ThPointLight,\n    ThRectAreaLight,\n    ThHemisphereLight,\n    ThDirectionalLight,\n    ThAmbientLight,\n    ThLight,\n    ThAmbientLightProbe,\n    ThHemisphereLightProbe,\n    ThLightProbe,\n    ThSprite,\n    ThLOD,\n    ThInstancedMesh,\n    ThSkinnedMesh,\n    ThBone,\n    ThMesh,\n    ThLineSegments,\n    ThLineLoop,\n    ThLine,\n    ThPoints,\n    ThGroup,\n    ThScene,\n    ThShadowMaterial,\n    ThSpriteMaterial,\n    ThRawShaderMaterial,\n    ThShaderMaterial,\n    ThPointsMaterial,\n    ThMeshPhysicalMaterial,\n    ThMeshStandardMaterial,\n    ThMeshPhongMaterial,\n    ThMeshToonMaterial,\n    ThMeshNormalMaterial,\n    ThMeshLambertMaterial,\n    ThMeshDepthMaterial,\n    ThMeshDistanceMaterial,\n    ThMeshBasicMaterial,\n    ThMeshMatcapMaterial,\n    ThLineDashedMaterial,\n    ThLineBasicMaterial,\n    ThMaterial,\n    ThInstancedBufferGeometry,\n    ThBufferGeometry,\n    ThBoxGeometry,\n    ThCircleGeometry,\n    ThConeGeometry,\n    ThCylinderGeometry,\n    ThDodecahedronGeometry,\n    ThEdgesGeometry,\n    ThExtrudeGeometry,\n    ThIcosahedronGeometry,\n    ThLatheGeometry,\n    ThOctahedronGeometry,\n    ThPlaneGeometry,\n    ThPolyhedronGeometry,\n    ThRingGeometry,\n    ThShapeGeometry,\n    ThSphereGeometry,\n    ThTetrahedronGeometry,\n    ThTorusGeometry,\n    ThTorusKnotGeometry,\n    ThTubeGeometry,\n    ThWireframeGeometry,\n    ThBoxLineGeometry,\n    ThConvexGeometry,\n    ThDecalGeometry,\n    ThParametricGeometry,\n    ThRoundedBoxGeometry,\n    ThTeapotGeometry,\n    ThTextGeometry,\n    ThDragControls,\n    ThFirstPersonControls,\n    ThFlyControls,\n    ThOrbitControls,\n    ThMapControls,\n    ThPointerLockControls,\n    ThTrackballControls,\n    ThTransformControls,\n    ThPass,\n    ThEffectComposerGen,\n    ThEffectComposer,\n    ThAdaptiveToneMappingPass,\n    ThAfterimagePass,\n    ThBloomPass,\n    ThBokehPass,\n    ThClearPass,\n    ThCubeTexturePass,\n    ThDotScreenPass,\n    ThFilmPass,\n    ThGlitchPass,\n    ThHalftonePass,\n    ThLUTPass,\n    ThMaskPass,\n    ThClearMaskPass,\n    ThOutlinePass,\n    ThRenderPassGen,\n    ThRenderPass,\n    ThSAOPass,\n    ThSMAAPass,\n    ThSSAARenderPass,\n    ThSSAOPass,\n    ThSSRPass,\n    ThSSRrPass,\n    ThSavePass,\n    ThShaderPass,\n    ThTAARenderPass,\n    ThTexturePass,\n    ThUnrealBloomPass,\n  ],\n})\nexport class NgxThreeGeneratedModule {}\n","import { Directive, EventEmitter, Host, Input, NgZone, OnInit, Output, SimpleChange } from '@angular/core';\n\nimport { Object3D } from 'three';\nimport { ThObject3D } from '../generated/ThObject3D';\nimport { createLazyObject3DProxy, LazyObject3DProxy } from './LazyObject3dProxy';\n\n@Directive({\n  selector: '[load]'\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class ThLoader<T = any> implements OnInit {\n  private initialized = false;\n\n  private _url?: string;\n\n  @Input()\n  public loaderFn?: (input?: string, onProgress?: (progress: ProgressEvent) => void, onLoaded?: (result: T) => void) => Promise<Object3D>;\n\n  @Input()\n  set url(url: string | undefined) {\n    this._url = url;\n    this.loadAsync();\n  }\n\n  get url() {\n    return this._url;\n  }\n\n  protected proxy: LazyObject3DProxy;\n\n  protected onLoaded$?: EventEmitter<T>;\n  protected onProgress$?: EventEmitter<ProgressEvent>;\n\n  constructor(@Host() protected host: ThObject3D<any>, protected zone: NgZone) {\n    this.proxy = createLazyObject3DProxy();\n    host.objRef = this.proxy;\n  }\n\n  ngOnInit(): void {\n    this.initialized = true;\n    this.loadAsync();\n    // this.zone.runOutsideAngular(() => );\n  }\n\n  @Output() get onLoaded() {\n    if (!this.onLoaded$) {\n      this.onLoaded$ = new EventEmitter();\n    }\n    return this.onLoaded$;\n  }\n\n  @Output() get onProgress() {\n    if (!this.onProgress$) {\n      this.onProgress$ = new EventEmitter();\n    }\n    return this.onProgress$;\n  }\n\n  protected async loadAsync() {\n    if (!this.initialized) {\n      return;\n    }\n    const loaderFn = this.loaderFn;\n    if (!loaderFn) {\n      throw new Error('Missing loader Function ( @Input() loaderFn )');\n    }\n\n    if (!this.proxy) {\n      return;\n    }\n\n    const onProgress = this.onProgress$\n      ? (progress: ProgressEvent<EventTarget>) => {\n          this.onProgress$?.next(progress);\n        }\n      : undefined;\n\n    let loaderResult: T | undefined;\n    const onLoaded = this.onLoaded$\n      ? (result: T) => {\n          loaderResult = result;\n        }\n      : undefined;\n\n    const object = await this.zone.runOutsideAngular(() => loaderFn(this.url, onProgress, onLoaded));\n\n    this.proxy.objRef = object;\n    // add the new object to the parent and\n    // emit a loaded event directly on the three.js object and on objRef$\n    this.host.objRef = this.proxy;\n\n    if (this.onLoaded$ && loaderResult !== undefined) {\n      this.onLoaded$?.next(loaderResult);\n    }\n\n    return object;\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Object3D } from 'three';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ThLoader } from './ThLoader';\n\n@Directive({\n  selector: '[loadGLTF]'\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class ThGLTFLoader extends ThLoader<GLTF> {\n  public loaderFn = async (\n    input?: string,\n    onProgress?: (progress: ProgressEvent) => void,\n    onLoaded?: (res: GLTF) => void\n  ): Promise<Object3D> => {\n    if (!input) {\n      throw new Error('missing input url');\n    }\n\n    const loader = new GLTFLoader();\n    const result: GLTF = await loader.loadAsync(input, onProgress);\n\n    if (onLoaded) {\n      onLoaded(result);\n    }\n\n    return result.scene;\n  };\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Color, ColorRepresentation } from 'three';\n\n\n/**\n * constructs a color of it's constructor parameters\n */\n@Pipe({\n  name: 'color',\n  pure: true\n})\nexport class ColorPipe implements PipeTransform {\n  /* ContructorProperties does not support multiple constructors --> */\n  transform(args: ColorRepresentation | [r: number, g: number, b: number]): Color {\n    if(Array.isArray(args)) {\n      return new Color(...args);\n    } else {\n      return new Color(args);\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Vector2, Vector3, Vector4 } from 'three';\n\n/**\n * transform arrays to vectors\n */\n@Pipe({\n  name: 'vector2',\n  pure: true\n})\nexport class Vector2Pipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Vector2>): Vector2 {\n    return new Vector2(...args);\n  }\n\n}\n\n@Pipe({\n  name: 'vector3',\n  pure: true\n})\nexport class Vector3Pipe implements PipeTransform {\n  transform(args: ConstructorParameters<typeof Vector3>): Vector3 {\n    return new Vector3(...args);\n  }\n\n}\n\n@Pipe({\n  name: 'vector4',\n  pure: true\n})\nexport class Vector4Pipe implements PipeTransform {\n\n  transform(args: ConstructorParameters<typeof Vector4>): Vector4 {\n    return new Vector4(...args);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ThWrapperBase } from '../ThWrapperBase';\n\n/**\n * create a clone of any \"cloneable\" three.js class (or from it's ngx-three warpper)\n */\n@Pipe({\n  name: 'clone',\n\n})\nexport class ClonePipe implements PipeTransform {\n\n  transform<T extends { clone(): T} >(value?: ThWrapperBase<T, any> | T | null  ): T | undefined {\n    if (!value) {\n      return;\n    }\n\n    if(value instanceof ThWrapperBase) {\n      return value.objRef?.clone();\n    } else {\n      return value.clone();\n    }\n\n  }\n\n}\n","import { Directive, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ThEngineService } from '../ThEngine.service';\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[thStats]'\n})\nexport class StatsDirective implements OnInit, OnDestroy {\n  private stats: Stats;\n  private renderSubscription?: Subscription;\n  constructor(private engineService: ThEngineService) {\n    this.stats = Stats();\n  }\n  ngOnDestroy(): void {\n    if(this.renderSubscription) {\n      this.renderSubscription.unsubscribe();\n    }\n  }\n  ngOnInit(): void {\n    if(!this.engineService.canvas) {\n      throw new Error('No canvas present');\n    }\n\n    const parentElement = this.engineService.canvas.parentElement;\n    if(parentElement) {\n      parentElement.style.position = 'relative';\n      this.stats.domElement.style.position = 'absolute';\n      this.stats.showPanel(0);\n    this.engineService.canvas.parentElement?.appendChild(this.stats.dom);\n    this.renderSubscription = this.engineService.beforeRender$.subscribe(() => {\n      this.stats.update();\n    });\n    }\n  }\n\n  @Input()\n  public set thStats(enabled: boolean) {\n    if(!enabled) {\n      this.stats.domElement.style.visibility = 'hidden';\n    } else {\n      this.stats.domElement.style.visibility = 'visible';\n    }\n  }\n\n}\n","import { Directive, Output } from '@angular/core';\nimport { ThEngineService } from '../ThEngine.service';\n\n\n@Directive({\n  selector: '[beforeRender]'\n})\nexport class ThRenderDirective {\n\n  constructor(private engineService: ThEngineService) {\n\n  }\n\n\n  @Output()\n  public get beforeRender() {\n    return this.engineService.beforeRender$;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RaycasterEventDirective } from './events/raycaster.events.directive';\nimport { NgxThreeGeneratedModule } from './generated/ngx-three-generated.module';\nimport { ThGLTFLoader } from './loaders/ThGLTFLoader';\nimport { ThLoader } from './loaders/ThLoader';\n// import { ThOBJLoader } from './loaders/ThOBJLoader';\nimport { ThCanvas } from './ThCanvas';\nimport { ThMaterialBase } from './ThMaterialBase';\nimport { ThObjectBase } from './ThObjectBase';\nimport { ThView } from './ThView';\nimport { ThWrapperBase } from './ThWrapperBase';\nimport { ColorPipe } from './pipes/color.pipe';\nimport { Vector2Pipe, Vector3Pipe, Vector4Pipe } from './pipes/vector.pipe';\nimport { ClonePipe } from './pipes/clone.pipe';\nimport { StatsDirective } from './stats/stats.directive';\nimport { ThRenderDirective } from './renderer/th-render.directive';\n\n@NgModule({\n  declarations: [\n    ThCanvas,\n    ThView,\n    ThObjectBase,\n    ThMaterialBase,\n    ThWrapperBase,\n    ThLoader,\n    ThGLTFLoader,\n    //   ThOBJLoader,\n    RaycasterEventDirective,\n    ColorPipe,\n    Vector2Pipe,\n    Vector3Pipe,\n    Vector4Pipe,\n    ClonePipe,\n    StatsDirective,\n    ThRenderDirective\n  ],\n  imports: [NgxThreeGeneratedModule],\n  exports: [\n    NgxThreeGeneratedModule,\n    ThCanvas,\n    ThView,\n    ThLoader,\n    ThGLTFLoader,\n    //   ThOBJLoader,\n    RaycasterEventDirective,\n    ColorPipe,\n    Vector2Pipe,\n    Vector3Pipe,\n    Vector4Pipe,\n    ClonePipe,\n    ThRenderDirective,\n    StatsDirective\n  ]\n})\nexport class NgxThreeModule {}\n","/*\n          Generated, modifications will get overwritten\n        */\n\nexport * from './overrides/ThEffectComposer';\nexport * from './overrides/ThRenderPass';\nexport * from './ThAdaptiveToneMappingPass';\nexport * from './ThAfterimagePass';\nexport * from './ThAmbientLight';\nexport * from './ThAmbientLightProbe';\nexport * from './ThArrayCamera';\nexport * from './ThArrowHelper';\nexport * from './ThAudio';\nexport * from './ThAudioListener';\nexport * from './ThAxesHelper';\nexport * from './ThBloomPass';\nexport * from './ThBokehPass';\nexport * from './ThBone';\nexport * from './ThBox3Helper';\nexport * from './ThBoxGeometry';\nexport * from './ThBoxHelper';\nexport * from './ThBoxLineGeometry';\nexport * from './ThBufferGeometry';\nexport * from './ThCamera';\nexport * from './ThCameraHelper';\nexport * from './ThCircleGeometry';\nexport * from './ThClearMaskPass';\nexport * from './ThClearPass';\nexport * from './ThConeGeometry';\nexport * from './ThConvexGeometry';\nexport * from './ThCubeCamera';\nexport * from './ThCubeTexturePass';\nexport * from './ThCylinderGeometry';\nexport * from './ThDecalGeometry';\nexport * from './ThDirectionalLight';\nexport * from './ThDirectionalLightHelper';\nexport * from './ThDodecahedronGeometry';\nexport * from './ThDotScreenPass';\nexport * from './ThDragControls';\nexport * from './ThEdgesGeometry';\nexport * from './ThEffectComposerGen';\nexport * from './ThExtrudeGeometry';\nexport * from './ThFilmPass';\nexport * from './ThFirstPersonControls';\nexport * from './ThFlyControls';\nexport * from './ThGlitchPass';\nexport * from './ThGridHelper';\nexport * from './ThGroup';\nexport * from './ThHalftonePass';\nexport * from './ThHemisphereLight';\nexport * from './ThHemisphereLightHelper';\nexport * from './ThHemisphereLightProbe';\nexport * from './ThIcosahedronGeometry';\nexport * from './ThInstancedBufferGeometry';\nexport * from './ThInstancedMesh';\nexport * from './ThLatheGeometry';\nexport * from './ThLight';\nexport * from './ThLightProbe';\nexport * from './ThLine';\nexport * from './ThLineBasicMaterial';\nexport * from './ThLineDashedMaterial';\nexport * from './ThLineLoop';\nexport * from './ThLineSegments';\nexport * from './ThLOD';\nexport * from './ThLUTPass';\nexport * from './ThMapControls';\nexport * from './ThMaskPass';\nexport * from './ThMaterial';\nexport * from './ThMesh';\nexport * from './ThMeshBasicMaterial';\nexport * from './ThMeshDepthMaterial';\nexport * from './ThMeshDistanceMaterial';\nexport * from './ThMeshLambertMaterial';\nexport * from './ThMeshMatcapMaterial';\nexport * from './ThMeshNormalMaterial';\nexport * from './ThMeshPhongMaterial';\nexport * from './ThMeshPhysicalMaterial';\nexport * from './ThMeshStandardMaterial';\nexport * from './ThMeshToonMaterial';\nexport * from './ThObject3D';\nexport * from './ThOctahedronGeometry';\nexport * from './ThOrbitControls';\nexport * from './ThOrthographicCamera';\nexport * from './ThOutlinePass';\nexport * from './ThParametricGeometry';\nexport * from './ThPass';\nexport * from './ThPerspectiveCamera';\nexport * from './ThPlaneGeometry';\nexport * from './ThPlaneHelper';\nexport * from './ThPointerLockControls';\nexport * from './ThPointLight';\nexport * from './ThPointLightHelper';\nexport * from './ThPoints';\nexport * from './ThPointsMaterial';\nexport * from './ThPolarGridHelper';\nexport * from './ThPolyhedronGeometry';\nexport * from './ThPositionalAudio';\nexport * from './ThRawShaderMaterial';\nexport * from './ThRectAreaLight';\nexport * from './ThRenderPassGen';\nexport * from './ThRingGeometry';\nexport * from './ThRoundedBoxGeometry';\nexport * from './ThSAOPass';\nexport * from './ThSavePass';\nexport * from './ThScene';\nexport * from './ThShaderMaterial';\nexport * from './ThShaderPass';\nexport * from './ThShadowMaterial';\nexport * from './ThShapeGeometry';\nexport * from './ThSkeletonHelper';\nexport * from './ThSkinnedMesh';\nexport * from './ThSMAAPass';\nexport * from './ThSphereGeometry';\nexport * from './ThSpotLight';\nexport * from './ThSpotLightHelper';\nexport * from './ThSprite';\nexport * from './ThSpriteMaterial';\nexport * from './ThSSAARenderPass';\nexport * from './ThSSAOPass';\nexport * from './ThSSRPass';\nexport * from './ThSSRrPass';\nexport * from './ThStereoCamera';\nexport * from './ThTAARenderPass';\nexport * from './ThTeapotGeometry';\nexport * from './ThTetrahedronGeometry';\nexport * from './ThTextGeometry';\nexport * from './ThTexturePass';\nexport * from './ThTorusGeometry';\nexport * from './ThTorusKnotGeometry';\nexport * from './ThTrackballControls';\nexport * from './ThTransformControls';\nexport * from './ThTubeGeometry';\nexport * from './ThUnrealBloomPass';\nexport * from './ThWireframeGeometry';\n","import { forwardRef, Provider, Type } from '@angular/core';\nimport { Object3D } from 'three';\nimport { ThCamera } from './generated/ThCamera';\nimport { ThObject3D } from './generated/ThObject3D';\n\nexport function createThProviderArray(cls: Type<any>, baseCls: Type<any>) {\n  const providers: Provider[] = [];\n  if (ThObject3D.isPrototypeOf(baseCls) || Object3D === baseCls) {\n    providers.push({ provide: ThObject3D, useExisting: forwardRef(() => cls) });\n\n    if (ThCamera.isPrototypeOf(baseCls) || ThCamera === baseCls) {\n      providers.push({ provide: ThCamera, useExisting: forwardRef(() => cls) });\n    }\n  }\n}\n\n/**\n * usage:\n *\n * @Component({\n *  providers: createObj3DProviderArray(forwardRef(() => TheComponent)))\n * })\n * export class TheComponent {\n * ...\n * }\n * @param type the Object3D derived Class to be provided\n */\nexport function createObj3DProviderArray(type: Type<any>) {\n  return [{ provide: ThObject3D, useExisting: forwardRef(() => type) }];\n}\n\nexport function createCameraProviderArray(type: Type<any>) {\n  return [\n    { provide: ThObject3D, useExisting: forwardRef(() => type) },\n    { provide: ThCamera, useExisting: forwardRef(() => type) }\n  ];\n}\n","/*\n * Public API Surface of ngx-three\n */\n\nexport * from './lib/ngx-three.module';\n\n// renderer specific functionality\nexport * from './lib/ThCanvas';\nexport * from './lib/ThEngine.service';\nexport * from './lib/ThView';\nexport * from './lib/renderer/th-render.directive';\n\n// loaders\nexport * from './lib/loaders/ThLoader';\nexport * from './lib/loaders/LazyObject3dProxy';\nexport * from './lib/loaders/ThGLTFLoader';\n// export * from './lib/loaders/ThOBJLoader';\n\n// generated\nexport * from './lib/generated';\nexport * from './lib/generated/ngx-three-generated.module';\n\nexport * from './lib/events/raycaster.events.directive';\n\n\n// component helpers\n\nexport * from './lib/component.helpers';\n\n// utility pipes and directives\n\nexport * from './lib/pipes/clone.pipe';\nexport * from './lib/pipes/color.pipe';\nexport * from './lib/pipes/vector.pipe';\n\nexport * from './lib/stats/stats.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}