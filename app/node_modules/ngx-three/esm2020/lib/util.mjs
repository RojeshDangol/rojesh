export function isSettable(obj) {
    return !!(obj && obj.set); // && obj.copy;
}
/**
 * tries to apply the new value to the target.
 * if the new value is 'setter arguments' then it uses set on the target.
 * else it tries to use the 'copy' method of the target if available
 * else it return the newValue as new target
 * if newValue is undefined the old target is returned
 *
 * @param target the target for the new value
 * @param newValue the value to be set
 * @returns the new target(value)
 */
export function applyValue(target, newValue) {
    if (isSettable(target)) {
        if (newValue === undefined) {
            return target;
        }
        if (Array.isArray(newValue)) {
            target.set(...newValue);
            return target;
        }
        if (target.copy && newValue) {
            target.copy(newValue);
            return target;
        }
        // just set the value
        if (newValue !== undefined) {
            target.set(newValue);
            return target;
        }
    }
    else {
        // apply the value
        return newValue;
    }
    // nothing to do
    return target;
}
export function isDisposable(obj) {
    if (obj && typeof obj.dispose === 'function') {
        return true;
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC10aHJlZS9zcmMvbGliL3V0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsTUFBTSxVQUFVLFVBQVUsQ0FBQyxHQUFRO0lBQ2pDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLGVBQWU7QUFDNUMsQ0FBQztBQUVEOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLFVBQVUsVUFBVSxDQUFJLE1BQVMsRUFBRSxRQUFvQjtJQUMzRCxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN0QixJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDMUIsT0FBTyxNQUFXLENBQUM7U0FDcEI7UUFFRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDM0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO1lBQ3hCLE9BQU8sTUFBVyxDQUFDO1NBQ3BCO1FBRUQsSUFBSSxNQUFNLENBQUMsSUFBSSxJQUFJLFFBQVEsRUFBRTtZQUMzQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3RCLE9BQU8sTUFBVyxDQUFDO1NBQ3BCO1FBRUQscUJBQXFCO1FBQ3JCLElBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtZQUMxQixNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3JCLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7S0FDRjtTQUFNO1FBQ0wsa0JBQWtCO1FBQ2xCLE9BQU8sUUFBYSxDQUFDO0tBQ3RCO0lBRUQsZ0JBQWdCO0lBQ2hCLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxNQUFNLFVBQVUsWUFBWSxDQUFDLEdBQVE7SUFDbkMsSUFBSSxHQUFHLElBQUksT0FBTyxHQUFHLENBQUMsT0FBTyxLQUFLLFVBQVUsRUFBRTtRQUM1QyxPQUFPLElBQUksQ0FBQztLQUNiO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBUaFNldHRhYmxlIHtcbiAgc2V0KC4uLmFyZ3M6IGFueSk6IHRoaXM7XG4gIGNvcHk/KHZhbHVlOiBhbnkpOiB0aGlzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTZXR0YWJsZShvYmo6IGFueSk6IG9iaiBpcyBUaFNldHRhYmxlIHtcbiAgcmV0dXJuICEhKG9iaiAmJiBvYmouc2V0KTsgLy8gJiYgb2JqLmNvcHk7XG59XG5cbi8qKlxuICogdHJpZXMgdG8gYXBwbHkgdGhlIG5ldyB2YWx1ZSB0byB0aGUgdGFyZ2V0LlxuICogaWYgdGhlIG5ldyB2YWx1ZSBpcyAnc2V0dGVyIGFyZ3VtZW50cycgdGhlbiBpdCB1c2VzIHNldCBvbiB0aGUgdGFyZ2V0LlxuICogZWxzZSBpdCB0cmllcyB0byB1c2UgdGhlICdjb3B5JyBtZXRob2Qgb2YgdGhlIHRhcmdldCBpZiBhdmFpbGFibGVcbiAqIGVsc2UgaXQgcmV0dXJuIHRoZSBuZXdWYWx1ZSBhcyBuZXcgdGFyZ2V0XG4gKiBpZiBuZXdWYWx1ZSBpcyB1bmRlZmluZWQgdGhlIG9sZCB0YXJnZXQgaXMgcmV0dXJuZWRcbiAqXG4gKiBAcGFyYW0gdGFyZ2V0IHRoZSB0YXJnZXQgZm9yIHRoZSBuZXcgdmFsdWVcbiAqIEBwYXJhbSBuZXdWYWx1ZSB0aGUgdmFsdWUgdG8gYmUgc2V0XG4gKiBAcmV0dXJucyB0aGUgbmV3IHRhcmdldCh2YWx1ZSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5VmFsdWU8VD4odGFyZ2V0OiBULCBuZXdWYWx1ZT86IGFueVtdIHwgVCk6IFQge1xuICBpZiAoaXNTZXR0YWJsZSh0YXJnZXQpKSB7XG4gICAgaWYgKG5ld1ZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0YXJnZXQgYXMgVDtcbiAgICB9XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShuZXdWYWx1ZSkpIHtcbiAgICAgIHRhcmdldC5zZXQoLi4ubmV3VmFsdWUpO1xuICAgICAgcmV0dXJuIHRhcmdldCBhcyBUO1xuICAgIH1cblxuICAgIGlmICh0YXJnZXQuY29weSAmJiBuZXdWYWx1ZSkge1xuICAgICAgdGFyZ2V0LmNvcHkobmV3VmFsdWUpO1xuICAgICAgcmV0dXJuIHRhcmdldCBhcyBUO1xuICAgIH1cblxuICAgIC8vIGp1c3Qgc2V0IHRoZSB2YWx1ZVxuICAgIGlmIChuZXdWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0YXJnZXQuc2V0KG5ld1ZhbHVlKTtcbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIGFwcGx5IHRoZSB2YWx1ZVxuICAgIHJldHVybiBuZXdWYWx1ZSBhcyBUO1xuICB9XG5cbiAgLy8gbm90aGluZyB0byBkb1xuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNEaXNwb3NhYmxlKG9iajogYW55KTogb2JqIGlzIHsgZGlzcG9zZTogKCkgPT4gdm9pZCB9IHtcbiAgaWYgKG9iaiAmJiB0eXBlb2Ygb2JqLmRpc3Bvc2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG4iXX0=