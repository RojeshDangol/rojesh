/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable no-underscore-dangle */
/* eslint-disable @angular-eslint/component-selector, @angular-eslint/component-class-suffix, jsdoc/no-types, import/no-deprecated */
import { ChangeDetectionStrategy, Component, forwardRef, Input, } from '@angular/core';
import { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';
import { ThControlBase } from '../ThControlBase';
import { applyValue } from '../util';
import * as i0 from "@angular/core";
export class ThTrackballControls extends ThControlBase {
    getType() {
        return TrackballControls;
    }
    set object(value) {
        if (this._objRef) {
            this._objRef.object = value;
        }
    }
    set domElement(value) {
        if (this._objRef) {
            this._objRef.domElement = value;
        }
    }
    set enabled(value) {
        if (this._objRef) {
            this._objRef.enabled = value;
        }
    }
    set screen(value) {
        if (this._objRef) {
            this._objRef.screen = value;
        }
    }
    set rotateSpeed(value) {
        if (this._objRef) {
            this._objRef.rotateSpeed = value;
        }
    }
    set zoomSpeed(value) {
        if (this._objRef) {
            this._objRef.zoomSpeed = value;
        }
    }
    set panSpeed(value) {
        if (this._objRef) {
            this._objRef.panSpeed = value;
        }
    }
    set noRotate(value) {
        if (this._objRef) {
            this._objRef.noRotate = value;
        }
    }
    set noZoom(value) {
        if (this._objRef) {
            this._objRef.noZoom = value;
        }
    }
    set noPan(value) {
        if (this._objRef) {
            this._objRef.noPan = value;
        }
    }
    set noRoll(value) {
        if (this._objRef) {
            this._objRef.noRoll = value;
        }
    }
    set staticMoving(value) {
        if (this._objRef) {
            this._objRef.staticMoving = value;
        }
    }
    set dynamicDampingFactor(value) {
        if (this._objRef) {
            this._objRef.dynamicDampingFactor = value;
        }
    }
    set minDistance(value) {
        if (this._objRef) {
            this._objRef.minDistance = value;
        }
    }
    set maxDistance(value) {
        if (this._objRef) {
            this._objRef.maxDistance = value;
        }
    }
    set keys(value) {
        if (this._objRef) {
            this._objRef.keys = value;
        }
    }
    set mouseButtons(value) {
        if (this._objRef) {
            this._objRef.mouseButtons = value;
        }
    }
    set target(value) {
        if (this._objRef) {
            this._objRef.target = applyValue(this._objRef.target, value);
        }
    }
    set position0(value) {
        if (this._objRef) {
            this._objRef.position0 = applyValue(this._objRef.position0, value);
        }
    }
    set target0(value) {
        if (this._objRef) {
            this._objRef.target0 = applyValue(this._objRef.target0, value);
        }
    }
    set up0(value) {
        if (this._objRef) {
            this._objRef.up0 = applyValue(this._objRef.up0, value);
        }
    }
}
ThTrackballControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: ThTrackballControls, deps: null, target: i0.ɵɵFactoryTarget.Component });
ThTrackballControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.2", type: ThTrackballControls, selector: "th-trackballControls", inputs: { object: "object", domElement: "domElement", enabled: "enabled", screen: "screen", rotateSpeed: "rotateSpeed", zoomSpeed: "zoomSpeed", panSpeed: "panSpeed", noRotate: "noRotate", noZoom: "noZoom", noPan: "noPan", noRoll: "noRoll", staticMoving: "staticMoving", dynamicDampingFactor: "dynamicDampingFactor", minDistance: "minDistance", maxDistance: "maxDistance", keys: "keys", mouseButtons: "mouseButtons", target: "target", position0: "position0", target0: "target0", up0: "up0" }, providers: [
        {
            provide: ThControlBase,
            useExisting: forwardRef(() => ThTrackballControls),
        },
    ], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: ThTrackballControls, decorators: [{
            type: Component,
            args: [{
                    selector: 'th-trackballControls',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: ThControlBase,
                            useExisting: forwardRef(() => ThTrackballControls),
                        },
                    ],
                }]
        }], propDecorators: { object: [{
                type: Input
            }], domElement: [{
                type: Input
            }], enabled: [{
                type: Input
            }], screen: [{
                type: Input
            }], rotateSpeed: [{
                type: Input
            }], zoomSpeed: [{
                type: Input
            }], panSpeed: [{
                type: Input
            }], noRotate: [{
                type: Input
            }], noZoom: [{
                type: Input
            }], noPan: [{
                type: Input
            }], noRoll: [{
                type: Input
            }], staticMoving: [{
                type: Input
            }], dynamicDampingFactor: [{
                type: Input
            }], minDistance: [{
                type: Input
            }], maxDistance: [{
                type: Input
            }], keys: [{
                type: Input
            }], mouseButtons: [{
                type: Input
            }], target: [{
                type: Input
            }], position0: [{
                type: Input
            }], target0: [{
                type: Input
            }], up0: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,