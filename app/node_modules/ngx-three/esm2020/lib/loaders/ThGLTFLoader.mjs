import { Directive } from '@angular/core';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { ThLoader } from './ThLoader';
import * as i0 from "@angular/core";
// eslint-disable-next-line @angular-eslint/directive-class-suffix
export class ThGLTFLoader extends ThLoader {
    constructor() {
        super(...arguments);
        this.loaderFn = async (input, onProgress, onLoaded) => {
            if (!input) {
                throw new Error('missing input url');
            }
            const loader = new GLTFLoader();
            const result = await loader.loadAsync(input, onProgress);
            if (onLoaded) {
                onLoaded(result);
            }
            return result.scene;
        };
    }
}
ThGLTFLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: ThGLTFLoader, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ThGLTFLoader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.2", type: ThGLTFLoader, selector: "[loadGLTF]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: ThGLTFLoader, decorators: [{
            type: Directive,
            args: [{
                    selector: '[loadGLTF]'
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGhHTFRGTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRocmVlL3NyYy9saWIvbG9hZGVycy9UaEdMVEZMb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQVEsVUFBVSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDekUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQzs7QUFLdEMsa0VBQWtFO0FBQ2xFLE1BQU0sT0FBTyxZQUFhLFNBQVEsUUFBYztJQUpoRDs7UUFLUyxhQUFRLEdBQUcsS0FBSyxFQUNyQixLQUFjLEVBQ2QsVUFBOEMsRUFDOUMsUUFBOEIsRUFDWCxFQUFFO1lBQ3JCLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ1YsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2FBQ3RDO1lBRUQsTUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQztZQUNoQyxNQUFNLE1BQU0sR0FBUyxNQUFNLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBRS9ELElBQUksUUFBUSxFQUFFO2dCQUNaLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNsQjtZQUVELE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQztRQUN0QixDQUFDLENBQUM7S0FDSDs7eUdBbkJZLFlBQVk7NkZBQVosWUFBWTsyRkFBWixZQUFZO2tCQUp4QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxZQUFZO2lCQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JqZWN0M0QgfSBmcm9tICd0aHJlZSc7XG5pbXBvcnQgeyBHTFRGLCBHTFRGTG9hZGVyIH0gZnJvbSAndGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvR0xURkxvYWRlcic7XG5pbXBvcnQgeyBUaExvYWRlciB9IGZyb20gJy4vVGhMb2FkZXInO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbG9hZEdMVEZdJ1xufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvZGlyZWN0aXZlLWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIFRoR0xURkxvYWRlciBleHRlbmRzIFRoTG9hZGVyPEdMVEY+IHtcbiAgcHVibGljIGxvYWRlckZuID0gYXN5bmMgKFxuICAgIGlucHV0Pzogc3RyaW5nLFxuICAgIG9uUHJvZ3Jlc3M/OiAocHJvZ3Jlc3M6IFByb2dyZXNzRXZlbnQpID0+IHZvaWQsXG4gICAgb25Mb2FkZWQ/OiAocmVzOiBHTFRGKSA9PiB2b2lkXG4gICk6IFByb21pc2U8T2JqZWN0M0Q+ID0+IHtcbiAgICBpZiAoIWlucHV0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ21pc3NpbmcgaW5wdXQgdXJsJyk7XG4gICAgfVxuXG4gICAgY29uc3QgbG9hZGVyID0gbmV3IEdMVEZMb2FkZXIoKTtcbiAgICBjb25zdCByZXN1bHQ6IEdMVEYgPSBhd2FpdCBsb2FkZXIubG9hZEFzeW5jKGlucHV0LCBvblByb2dyZXNzKTtcblxuICAgIGlmIChvbkxvYWRlZCkge1xuICAgICAgb25Mb2FkZWQocmVzdWx0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0LnNjZW5lO1xuICB9O1xufVxuIl19