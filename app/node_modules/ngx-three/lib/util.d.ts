export interface ThSettable {
    set(...args: any): this;
    copy?(value: any): this;
}
export declare function isSettable(obj: any): obj is ThSettable;
/**
 * tries to apply the new value to the target.
 * if the new value is 'setter arguments' then it uses set on the target.
 * else it tries to use the 'copy' method of the target if available
 * else it return the newValue as new target
 * if newValue is undefined the old target is returned
 *
 * @param target the target for the new value
 * @param newValue the value to be set
 * @returns the new target(value)
 */
export declare function applyValue<T>(target: T, newValue?: any[] | T): T;
export declare function isDisposable(obj: any): obj is {
    dispose: () => void;
};
