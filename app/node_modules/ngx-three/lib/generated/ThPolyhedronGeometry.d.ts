import { Type } from '@angular/core';
import { PolyhedronGeometry } from 'three';
import { ThBufferGeometry } from './ThBufferGeometry';
import * as i0 from "@angular/core";
export declare class ThPolyhedronGeometry<T extends PolyhedronGeometry = PolyhedronGeometry, TARGS = [
    vertices?: number[],
    indices?: number[],
    radius?: number,
    detail?: number
]> extends ThBufferGeometry<T, TARGS> {
    getType(): Type<PolyhedronGeometry>;
    set type(value: string);
    set parameters(value: {
        vertices: number[];
        indices: number[];
        radius: number;
        detail: number;
    });
    static ɵfac: i0.ɵɵFactoryDeclaration<ThPolyhedronGeometry<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThPolyhedronGeometry<any, any>, "th-polyhedronGeometry", never, { "type": "type"; "parameters": "parameters"; }, {}, never, never>;
}
