import { Type } from '@angular/core';
import { ColorRepresentation, Object3D, SpotLight, SpotLightShadow, Vector3 } from 'three';
import { ThLight } from './ThLight';
import * as i0 from "@angular/core";
export declare class ThSpotLight<T extends SpotLight = SpotLight, TARGS = [
    color?: ColorRepresentation,
    intensity?: number,
    distance?: number,
    angle?: number,
    penumbra?: number,
    decay?: number
]> extends ThLight<T, TARGS> {
    getType(): Type<SpotLight>;
    set type(value: string);
    set position(value: Vector3 | [x: number, y: number, z: number]);
    set target(value: Object3D);
    set intensity(value: number);
    set distance(value: number);
    set angle(value: number);
    set decay(value: number);
    set shadow(value: SpotLightShadow);
    set power(value: number);
    set penumbra(value: number);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThSpotLight<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThSpotLight<any, any>, "th-spotLight", never, { "type": "type"; "position": "position"; "target": "target"; "intensity": "intensity"; "distance": "distance"; "angle": "angle"; "decay": "decay"; "shadow": "shadow"; "power": "power"; "penumbra": "penumbra"; }, {}, never, never>;
}
