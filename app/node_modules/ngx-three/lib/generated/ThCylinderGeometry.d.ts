import { Type } from '@angular/core';
import { CylinderGeometry } from 'three';
import { ThBufferGeometry } from './ThBufferGeometry';
import * as i0 from "@angular/core";
export declare class ThCylinderGeometry<T extends CylinderGeometry = CylinderGeometry, TARGS = [
    radiusTop?: number,
    radiusBottom?: number,
    height?: number,
    radialSegments?: number,
    heightSegments?: number,
    openEnded?: boolean,
    thetaStart?: number,
    thetaLength?: number
]> extends ThBufferGeometry<T, TARGS> {
    getType(): Type<CylinderGeometry>;
    set type(value: string);
    set parameters(value: {
        radiusTop: number;
        radiusBottom: number;
        height: number;
        radialSegments: number;
        heightSegments: number;
        openEnded: boolean;
        thetaStart: number;
        thetaLength: number;
    });
    static ɵfac: i0.ɵɵFactoryDeclaration<ThCylinderGeometry<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThCylinderGeometry<any, any>, "th-cylinderGeometry", never, { "type": "type"; "parameters": "parameters"; }, {}, never, never>;
}
