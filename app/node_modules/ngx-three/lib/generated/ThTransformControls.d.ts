import { Type } from '@angular/core';
import { Camera, Event, MOUSE, Object3D } from 'three';
import { TransformControls } from 'three/examples/jsm/controls/TransformControls';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export declare class ThTransformControls<T extends TransformControls = TransformControls, TARGS = [object: Camera, domElement?: HTMLElement]> extends ThObject3D<Event, T, TARGS> {
    getType(): Type<TransformControls>;
    set domElement(value: HTMLElement);
    set camera(value: Camera);
    set object(value: Object3D | undefined);
    set enabled(value: boolean);
    set axis(value: 'X' | 'Y' | 'Z' | 'E' | 'XY' | 'YZ' | 'XZ' | 'XYZ' | 'XYZE' | null);
    set mode(value: 'translate' | 'rotate' | 'scale');
    set translationSnap(value: number | null);
    set rotationSnap(value: number | null);
    set space(value: 'world' | 'local');
    set size(value: number);
    set dragging(value: boolean);
    set showX(value: boolean);
    set showY(value: boolean);
    set showZ(value: boolean);
    set mouseButtons(value: {
        LEFT: MOUSE;
        MIDDLE: MOUSE;
        RIGHT: MOUSE;
    });
    static ɵfac: i0.ɵɵFactoryDeclaration<ThTransformControls<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThTransformControls<any, any>, "th-transformControls", never, { "domElement": "domElement"; "camera": "camera"; "object": "object"; "enabled": "enabled"; "axis": "axis"; "mode": "mode"; "translationSnap": "translationSnap"; "rotationSnap": "rotationSnap"; "space": "space"; "size": "size"; "dragging": "dragging"; "showX": "showX"; "showY": "showY"; "showZ": "showZ"; "mouseButtons": "mouseButtons"; }, {}, never, never>;
}
