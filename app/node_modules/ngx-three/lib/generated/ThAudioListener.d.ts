import { Type } from '@angular/core';
import { AudioListener, Event } from 'three';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export declare class ThAudioListener<T extends AudioListener = AudioListener, TARGS = []> extends ThObject3D<Event, T, TARGS> {
    getType(): Type<AudioListener>;
    set type(value: 'AudioListener');
    set context(value: AudioContext);
    set gain(value: GainNode);
    set filter(value: any);
    set timeDelta(value: number);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThAudioListener<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThAudioListener<any, any>, "th-audioListener", never, { "type": "type"; "context": "context"; "gain": "gain"; "filter": "filter"; "timeDelta": "timeDelta"; }, {}, never, never>;
}
