import { Type } from '@angular/core';
import { TextGeometry, TextGeometryParameters } from 'three/examples/jsm/geometries/TextGeometry';
import { Font } from 'three/examples/jsm/loaders/FontLoader';
import { ThExtrudeGeometry } from './ThExtrudeGeometry';
import * as i0 from "@angular/core";
export declare class ThTextGeometry<T extends TextGeometry = TextGeometry, TARGS = [text: string, parameters: TextGeometryParameters]> extends ThExtrudeGeometry<T, TARGS> {
    getType(): Type<TextGeometry>;
    set type(value: string);
    set parameters(value: {
        font: Font;
        size: number;
        height: number;
        curveSegments: number;
        bevelEnabled: boolean;
        bevelThickness: number;
        bevelSize: number;
        bevelOffset: number;
        bevelSegments: number;
    });
    static ɵfac: i0.ɵɵFactoryDeclaration<ThTextGeometry<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThTextGeometry<any, any>, "th-textGeometry", never, { "type": "type"; "parameters": "parameters"; }, {}, never, never>;
}
