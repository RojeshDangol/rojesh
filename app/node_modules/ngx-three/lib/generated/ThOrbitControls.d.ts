import { Type } from '@angular/core';
import { Camera, MOUSE, TOUCH, Vector3 } from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import { ThControlBase } from '../ThControlBase';
import * as i0 from "@angular/core";
export declare class ThOrbitControls<T extends OrbitControls = OrbitControls, TARGS = [object: Camera, domElement?: HTMLElement]> extends ThControlBase<T, TARGS> {
    getType(): Type<OrbitControls>;
    set object(value: Camera);
    set domElement(value: HTMLElement | HTMLDocument);
    set enabled(value: boolean);
    set target(value: Vector3 | [x: number, y: number, z: number]);
    set center(value: Vector3 | [x: number, y: number, z: number]);
    set minDistance(value: number);
    set maxDistance(value: number);
    set minZoom(value: number);
    set maxZoom(value: number);
    set minPolarAngle(value: number);
    set maxPolarAngle(value: number);
    set minAzimuthAngle(value: number);
    set maxAzimuthAngle(value: number);
    set enableDamping(value: boolean);
    set dampingFactor(value: number);
    set enableZoom(value: boolean);
    set zoomSpeed(value: number);
    set enableRotate(value: boolean);
    set rotateSpeed(value: number);
    set enablePan(value: boolean);
    set panSpeed(value: number);
    set screenSpacePanning(value: boolean);
    set keyPanSpeed(value: number);
    set autoRotate(value: boolean);
    set autoRotateSpeed(value: number);
    set enableKeys(value: boolean);
    set keys(value: {
        LEFT: string;
        UP: string;
        RIGHT: string;
        BOTTOM: string;
    });
    set mouseButtons(value: {
        LEFT: MOUSE;
        MIDDLE: MOUSE;
        RIGHT: MOUSE;
    });
    set touches(value: {
        ONE: TOUCH;
        TWO: TOUCH;
    });
    static ɵfac: i0.ɵɵFactoryDeclaration<ThOrbitControls<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThOrbitControls<any, any>, "th-orbitControls", never, { "object": "object"; "domElement": "domElement"; "enabled": "enabled"; "target": "target"; "center": "center"; "minDistance": "minDistance"; "maxDistance": "maxDistance"; "minZoom": "minZoom"; "maxZoom": "maxZoom"; "minPolarAngle": "minPolarAngle"; "maxPolarAngle": "maxPolarAngle"; "minAzimuthAngle": "minAzimuthAngle"; "maxAzimuthAngle": "maxAzimuthAngle"; "enableDamping": "enableDamping"; "dampingFactor": "dampingFactor"; "enableZoom": "enableZoom"; "zoomSpeed": "zoomSpeed"; "enableRotate": "enableRotate"; "rotateSpeed": "rotateSpeed"; "enablePan": "enablePan"; "panSpeed": "panSpeed"; "screenSpacePanning": "screenSpacePanning"; "keyPanSpeed": "keyPanSpeed"; "autoRotate": "autoRotate"; "autoRotateSpeed": "autoRotateSpeed"; "enableKeys": "enableKeys"; "keys": "keys"; "mouseButtons": "mouseButtons"; "touches": "touches"; }, {}, never, never>;
}
