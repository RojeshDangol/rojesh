import { Type } from '@angular/core';
import { Camera, Color, ColorRepresentation, MeshDepthMaterial, MeshNormalMaterial, Scene, ShaderMaterial, Vector2, WebGLRenderTarget } from 'three';
import { SAOPass, SAOPassParams } from 'three/examples/jsm/postprocessing/SAOPass';
import { ThPass } from './ThPass';
import * as i0 from "@angular/core";
export declare class ThSAOPass<T extends SAOPass = SAOPass, TARGS = [
    scene: Scene,
    camera: Camera,
    depthTexture?: boolean,
    useNormals?: boolean,
    resolution?: Vector2
]> extends ThPass<T, TARGS> {
    getType(): Type<SAOPass>;
    set scene(value: Scene);
    set camera(value: Camera);
    set supportsDepthTextureExtension(value: boolean);
    set supportsNormalTexture(value: boolean);
    set originalClearColor(value: Color | [color: ColorRepresentation]);
    set oldClearColor(value: Color | [color: ColorRepresentation]);
    set oldClearAlpha(value: number);
    set resolution(value: Vector2 | [x: number, y: number]);
    set saoRenderTarget(value: WebGLRenderTarget);
    set blurIntermediateRenderTarget(value: WebGLRenderTarget);
    set beautyRenderTarget(value: WebGLRenderTarget);
    set normalRenderTarget(value: WebGLRenderTarget);
    set depthRenderTarget(value: WebGLRenderTarget);
    set depthMaterial(value: MeshDepthMaterial);
    set normalMaterial(value: MeshNormalMaterial);
    set saoMaterial(value: ShaderMaterial);
    set vBlurMaterial(value: ShaderMaterial);
    set hBlurMaterial(value: ShaderMaterial);
    set materialCopy(value: ShaderMaterial);
    set depthCopy(value: ShaderMaterial);
    set fsQuad(value: object);
    set params(value: SAOPassParams);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThSAOPass<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThSAOPass<any, any>, "th-sAOPass", never, { "scene": "scene"; "camera": "camera"; "supportsDepthTextureExtension": "supportsDepthTextureExtension"; "supportsNormalTexture": "supportsNormalTexture"; "originalClearColor": "originalClearColor"; "oldClearColor": "oldClearColor"; "oldClearAlpha": "oldClearAlpha"; "resolution": "resolution"; "saoRenderTarget": "saoRenderTarget"; "blurIntermediateRenderTarget": "blurIntermediateRenderTarget"; "beautyRenderTarget": "beautyRenderTarget"; "normalRenderTarget": "normalRenderTarget"; "depthRenderTarget": "depthRenderTarget"; "depthMaterial": "depthMaterial"; "normalMaterial": "normalMaterial"; "saoMaterial": "saoMaterial"; "vBlurMaterial": "vBlurMaterial"; "hBlurMaterial": "hBlurMaterial"; "materialCopy": "materialCopy"; "depthCopy": "depthCopy"; "fsQuad": "fsQuad"; "params": "params"; }, {}, never, never>;
}
