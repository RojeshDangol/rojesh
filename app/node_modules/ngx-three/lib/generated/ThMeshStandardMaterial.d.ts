import { Type } from '@angular/core';
import { Color, ColorRepresentation, MeshStandardMaterial, MeshStandardMaterialParameters, NormalMapTypes, Texture, Vector2 } from 'three';
import { ThMaterial } from './ThMaterial';
import * as i0 from "@angular/core";
export declare class ThMeshStandardMaterial<T extends MeshStandardMaterial = MeshStandardMaterial, TARGS = MeshStandardMaterialParameters> extends ThMaterial<T, TARGS> {
    getType(): Type<MeshStandardMaterial>;
    set type(value: string);
    set defines(value: {
        [key: string]: any;
    });
    set color(value: Color | [color: ColorRepresentation]);
    set roughness(value: number);
    set metalness(value: number);
    set map(value: Texture | null);
    set lightMap(value: Texture | null);
    set lightMapIntensity(value: number);
    set aoMap(value: Texture | null);
    set aoMapIntensity(value: number);
    set emissive(value: Color | [color: ColorRepresentation]);
    set emissiveIntensity(value: number);
    set emissiveMap(value: Texture | null);
    set bumpMap(value: Texture | null);
    set bumpScale(value: number);
    set normalMap(value: Texture | null);
    set normalMapType(value: NormalMapTypes);
    set normalScale(value: Vector2 | [x: number, y: number]);
    set displacementMap(value: Texture | null);
    set displacementScale(value: number);
    set displacementBias(value: number);
    set roughnessMap(value: Texture | null);
    set metalnessMap(value: Texture | null);
    set alphaMap(value: Texture | null);
    set envMap(value: Texture | null);
    set envMapIntensity(value: number);
    set refractionRatio(value: number);
    set wireframe(value: boolean);
    set wireframeLinewidth(value: number);
    set wireframeLinecap(value: string);
    set wireframeLinejoin(value: string);
    set flatShading(value: boolean);
    set isMeshStandardMaterial(value: boolean);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThMeshStandardMaterial<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThMeshStandardMaterial<any, any>, "th-meshStandardMaterial", never, { "type": "type"; "defines": "defines"; "color": "color"; "roughness": "roughness"; "metalness": "metalness"; "map": "map"; "lightMap": "lightMap"; "lightMapIntensity": "lightMapIntensity"; "aoMap": "aoMap"; "aoMapIntensity": "aoMapIntensity"; "emissive": "emissive"; "emissiveIntensity": "emissiveIntensity"; "emissiveMap": "emissiveMap"; "bumpMap": "bumpMap"; "bumpScale": "bumpScale"; "normalMap": "normalMap"; "normalMapType": "normalMapType"; "normalScale": "normalScale"; "displacementMap": "displacementMap"; "displacementScale": "displacementScale"; "displacementBias": "displacementBias"; "roughnessMap": "roughnessMap"; "metalnessMap": "metalnessMap"; "alphaMap": "alphaMap"; "envMap": "envMap"; "envMapIntensity": "envMapIntensity"; "refractionRatio": "refractionRatio"; "wireframe": "wireframe"; "wireframeLinewidth": "wireframeLinewidth"; "wireframeLinecap": "wireframeLinecap"; "wireframeLinejoin": "wireframeLinejoin"; "flatShading": "flatShading"; "isMeshStandardMaterial": "isMeshStandardMaterial"; }, {}, never, never>;
}
