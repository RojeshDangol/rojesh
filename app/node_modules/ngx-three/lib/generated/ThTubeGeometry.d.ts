import { Type } from '@angular/core';
import { Curve, TubeGeometry, Vector3 } from 'three';
import { ThBufferGeometry } from './ThBufferGeometry';
import * as i0 from "@angular/core";
export declare class ThTubeGeometry<T extends TubeGeometry = TubeGeometry, TARGS = [
    path?: Curve<Vector3>,
    tubularSegments?: number,
    radius?: number,
    radiusSegments?: number,
    closed?: boolean
]> extends ThBufferGeometry<T, TARGS> {
    getType(): Type<TubeGeometry>;
    set type(value: string);
    set parameters(value: {
        path: Curve<Vector3>;
        tubularSegments: number;
        radius: number;
        radialSegments: number;
        closed: boolean;
    });
    set tangents(value: Vector3[]);
    set normals(value: Vector3[]);
    set binormals(value: Vector3[]);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThTubeGeometry<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThTubeGeometry<any, any>, "th-tubeGeometry", never, { "type": "type"; "parameters": "parameters"; "tangents": "tangents"; "normals": "normals"; "binormals": "binormals"; }, {}, never, never>;
}
