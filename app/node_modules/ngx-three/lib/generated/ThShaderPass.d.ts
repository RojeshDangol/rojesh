import { Type } from '@angular/core';
import { ShaderMaterial } from 'three';
import { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';
import { ThPass } from './ThPass';
import * as i0 from "@angular/core";
export declare class ThShaderPass<T extends ShaderPass = ShaderPass, TARGS = [shader: object, textureID?: string]> extends ThPass<T, TARGS> {
    getType(): Type<ShaderPass>;
    set textureID(value: string);
    set uniforms(map: {
        [name: string]: {
            value: any;
        };
    });
    set material(value: ShaderMaterial);
    set fsQuad(value: object);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThShaderPass<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThShaderPass<any, any>, "th-shaderPass", never, { "textureID": "textureID"; "uniforms": "uniforms"; "material": "material"; "fsQuad": "fsQuad"; }, {}, never, never>;
}
