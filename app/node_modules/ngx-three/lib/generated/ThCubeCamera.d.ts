import { Type } from '@angular/core';
import { CubeCamera, Event, WebGLCubeRenderTarget } from 'three';
import { ThObject3D } from './ThObject3D';
import * as i0 from "@angular/core";
export declare class ThCubeCamera<T extends CubeCamera = CubeCamera, TARGS = [near: number, far: number, renderTarget: WebGLCubeRenderTarget]> extends ThObject3D<Event, T, TARGS> {
    getType(): Type<CubeCamera>;
    set type(value: 'CubeCamera');
    set renderTarget(value: WebGLCubeRenderTarget);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThCubeCamera<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThCubeCamera<any, any>, "th-cubeCamera", never, { "type": "type"; "renderTarget": "renderTarget"; }, {}, never, never>;
}
