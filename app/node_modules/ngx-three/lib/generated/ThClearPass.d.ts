import { Type } from '@angular/core';
import { ColorRepresentation } from 'three';
import { ClearPass } from 'three/examples/jsm/postprocessing/ClearPass';
import { ThPass } from './ThPass';
import * as i0 from "@angular/core";
export declare class ThClearPass<T extends ClearPass = ClearPass, TARGS = [clearColor?: ColorRepresentation, clearAlpha?: number]> extends ThPass<T, TARGS> {
    getType(): Type<ClearPass>;
    set clearColor(value: ColorRepresentation);
    set clearAlpha(value: number);
    static ɵfac: i0.ɵɵFactoryDeclaration<ThClearPass<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ThClearPass<any, any>, "th-clearPass", never, { "clearColor": "clearColor"; "clearAlpha": "clearAlpha"; }, {}, never, never>;
}
