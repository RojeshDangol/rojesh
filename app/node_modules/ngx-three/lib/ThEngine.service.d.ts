import { NgZone, OnDestroy } from '@angular/core';
import * as THREE from 'three';
import { ThView } from './ThView';
import * as i0 from "@angular/core";
export declare class ThEngineService implements OnDestroy {
    private ngZone;
    private _renderer?;
    private views;
    private frameId?;
    private readonly beforeRenderEmitter;
    readonly beforeRender$: import("rxjs").Observable<{
        engine: ThEngineService;
    }>;
    canvas?: HTMLCanvasElement;
    private resizeObserver?;
    constructor(ngZone: NgZone);
    get renderer(): THREE.WebGLRenderer | undefined;
    ngOnDestroy(): void;
    private initResizeObserver;
    private initRenderer;
    setCanvas(canvas: HTMLCanvasElement): void;
    addView(view: ThView): void;
    requestAnimationFrame(): void;
    protected render(): void;
    protected renderView(view: ThView): void;
    protected applyRendererParametersFromView(view: ThView): void;
    resize(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ThEngineService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ThEngineService>;
}
