var _NgtSkeleton_skeleton, _NgtBone_bone;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { NGT_MATERIAL_GEOMETRY_CONTROLLER_PROVIDER, NGT_OBJECT_CONTROLLER_PROVIDER, NGT_OBJECT_INPUTS_WATCHED_CONTROLLER, NGT_OBJECT_TYPE, NGT_OBJECT_WATCHED_CONTROLLER, NgtCommonMesh, NgtObject3dController, NgtObject3dInputsController, } from '@angular-three/core';
import { Directive, EventEmitter, Inject, Input, NgModule, NgZone, Optional, Output, } from '@angular/core';
import { requestAnimationFrame } from '@rx-angular/cdk/zone-less';
import * as THREE from 'three';
import * as i0 from "@angular/core";
import * as i1 from "@angular-three/core";
export class NgtSkinnedMesh extends NgtCommonMesh {
    set args(v) {
        if (this.materialGeometryController) {
            this.materialGeometryController.meshArgs = v;
        }
    }
}
NgtSkinnedMesh.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMesh, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtSkinnedMesh.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: NgtSkinnedMesh, selector: "ngt-skinned-mesh", inputs: { args: "args", bindMatrix: "bindMatrix", bindMode: "bindMode" }, providers: [
        { provide: NgtCommonMesh, useExisting: NgtSkinnedMesh },
        NGT_MATERIAL_GEOMETRY_CONTROLLER_PROVIDER,
        { provide: NGT_OBJECT_TYPE, useValue: THREE.SkinnedMesh },
    ], exportAs: ["ngtSkinnedMesh"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMesh, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-skinned-mesh',
                    exportAs: 'ngtSkinnedMesh',
                    providers: [
                        { provide: NgtCommonMesh, useExisting: NgtSkinnedMesh },
                        NGT_MATERIAL_GEOMETRY_CONTROLLER_PROVIDER,
                        { provide: NGT_OBJECT_TYPE, useValue: THREE.SkinnedMesh },
                    ],
                }]
        }], propDecorators: { args: [{
                type: Input
            }], bindMatrix: [{
                type: Input
            }], bindMode: [{
                type: Input
            }] } });
export class NgtSkeleton {
    constructor(ngZone, skinnedMesh) {
        this.ngZone = ngZone;
        this.skinnedMesh = skinnedMesh;
        this.ready = new EventEmitter();
        _NgtSkeleton_skeleton.set(this, void 0);
        if (!skinnedMesh) {
            throw new Error('ngt-skeleton must be used within a ngt-skinned-mesh');
        }
    }
    get skeleton() {
        return __classPrivateFieldGet(this, _NgtSkeleton_skeleton, "f");
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            const boneInverses = this.boneInverses
                ? this.boneInverses.map((threeMaxtrix) => {
                    if (threeMaxtrix instanceof THREE.Matrix4)
                        return threeMaxtrix;
                    return new THREE.Matrix4().set(...threeMaxtrix);
                })
                : undefined;
            __classPrivateFieldSet(this, _NgtSkeleton_skeleton, new THREE.Skeleton([], boneInverses), "f");
            this.ready.emit();
            if (this.skinnedMesh) {
                const bindMatrix = this.skinnedMesh
                    .bindMatrix
                    ? this.skinnedMesh.bindMatrix instanceof THREE.Matrix4
                        ? this.skinnedMesh.bindMatrix
                        : new THREE.Matrix4().set(...this.skinnedMesh.bindMatrix)
                    : undefined;
                this.skinnedMesh.mesh.bind(this.skeleton, bindMatrix);
            }
        });
    }
}
_NgtSkeleton_skeleton = new WeakMap();
NgtSkeleton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkeleton, deps: [{ token: i0.NgZone }, { token: NgtSkinnedMesh, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
NgtSkeleton.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: NgtSkeleton, selector: "ngt-skeleton", inputs: { boneInverses: "boneInverses" }, outputs: { ready: "ready" }, exportAs: ["ngtSkeleton"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkeleton, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-skeleton',
                    exportAs: 'ngtSkeleton',
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: NgtSkinnedMesh, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { boneInverses: [{
                type: Input
            }], ready: [{
                type: Output
            }] } });
export class NgtBone {
    constructor(objectController, objectInputsController, ngZone, parentSkinnedMesh, parentSkeleton) {
        this.objectController = objectController;
        this.objectInputsController = objectInputsController;
        this.ngZone = ngZone;
        this.parentSkinnedMesh = parentSkinnedMesh;
        this.parentSkeleton = parentSkeleton;
        _NgtBone_bone.set(this, void 0);
        if (!parentSkinnedMesh) {
            throw new Error('ngt-bone must be used within a ngt-skinned-mesh');
        }
        objectInputsController.appendTo = parentSkinnedMesh.mesh;
        objectController.initFn = () => {
            __classPrivateFieldSet(this, _NgtBone_bone, new THREE.Bone(), "f");
            return __classPrivateFieldGet(this, _NgtBone_bone, "f");
        };
    }
    get bone() {
        return __classPrivateFieldGet(this, _NgtBone_bone, "f");
    }
    ngOnInit() {
        this.ngZone.runOutsideAngular(() => {
            this.objectController.init();
            requestAnimationFrame(() => {
                if (this.parentSkeleton && this.parentSkeleton.skeleton) {
                    this.parentSkeleton.skeleton.bones.push(this.bone);
                }
            });
        });
    }
}
_NgtBone_bone = new WeakMap();
NgtBone.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtBone, deps: [{ token: NGT_OBJECT_WATCHED_CONTROLLER }, { token: NGT_OBJECT_INPUTS_WATCHED_CONTROLLER }, { token: i0.NgZone }, { token: NgtSkinnedMesh, optional: true }, { token: NgtSkeleton, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
NgtBone.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: NgtBone, selector: "ngt-bone", providers: [NGT_OBJECT_CONTROLLER_PROVIDER], exportAs: ["ngtBone"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtBone, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ngt-bone',
                    exportAs: 'ngtBone',
                    providers: [NGT_OBJECT_CONTROLLER_PROVIDER],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgtObject3dController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_WATCHED_CONTROLLER]
                }] }, { type: i1.NgtObject3dInputsController, decorators: [{
                    type: Inject,
                    args: [NGT_OBJECT_INPUTS_WATCHED_CONTROLLER]
                }] }, { type: i0.NgZone }, { type: NgtSkinnedMesh, decorators: [{
                    type: Optional
                }] }, { type: NgtSkeleton, decorators: [{
                    type: Optional
                }] }]; } });
export class NgtSkinnedMeshModule {
}
NgtSkinnedMeshModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMeshModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtSkinnedMeshModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMeshModule, declarations: [NgtSkinnedMesh, NgtBone, NgtSkeleton], exports: [NgtSkinnedMesh, NgtBone, NgtSkeleton] });
NgtSkinnedMeshModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMeshModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtSkinnedMeshModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtSkinnedMesh, NgtBone, NgtSkeleton],
                    exports: [NgtSkinnedMesh, NgtBone, NgtSkeleton],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,