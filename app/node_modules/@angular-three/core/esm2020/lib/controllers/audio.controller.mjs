// GENERATED
import { Directive, Input, NgModule } from '@angular/core';
import { Controller, createControllerProviderFactory } from './controller';
import * as i0 from "@angular/core";
export class NgtAudioController extends Controller {
    constructor() {
        super(...arguments);
        this.buffer = null;
        this.detune = 0;
        this.loop = false;
        this.loopStart = 0;
        this.loopEnd = 0;
        this.offset = 0;
        this.duration = undefined;
        this.playbackRate = 1;
        this.isPlaying = false;
        this.hasPlaybackControl = true;
        this.sourceType = 'empty';
        this.source = null;
        this.filters = [];
    }
    get props() {
        return [
            'autoplay',
            'buffer',
            'detune',
            'loop',
            'loopStart',
            'loopEnd',
            'offset',
            'duration',
            'playbackRate',
            'isPlaying',
            'hasPlaybackControl',
            'sourceType',
            'source',
            'filters',
        ];
    }
    get controller() {
        return this.audioController;
    }
}
NgtAudioController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioController, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NgtAudioController.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.0.3", type: NgtAudioController, selector: "\n    ngt-audio,\n    ngt-positional-audio,\n  ", inputs: { autoplay: "autoplay", buffer: "buffer", detune: "detune", loop: "loop", loopStart: "loopStart", loopEnd: "loopEnd", offset: "offset", duration: "duration", playbackRate: "playbackRate", isPlaying: "isPlaying", hasPlaybackControl: "hasPlaybackControl", sourceType: "sourceType", source: "source", filters: "filters", audioController: "audioController" }, exportAs: ["ngtAudioController"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioController, decorators: [{
            type: Directive,
            args: [{
                    selector: `
    ngt-audio,
    ngt-positional-audio,
  `,
                    exportAs: 'ngtAudioController',
                }]
        }], propDecorators: { autoplay: [{
                type: Input
            }], buffer: [{
                type: Input
            }], detune: [{
                type: Input
            }], loop: [{
                type: Input
            }], loopStart: [{
                type: Input
            }], loopEnd: [{
                type: Input
            }], offset: [{
                type: Input
            }], duration: [{
                type: Input
            }], playbackRate: [{
                type: Input
            }], isPlaying: [{
                type: Input
            }], hasPlaybackControl: [{
                type: Input
            }], sourceType: [{
                type: Input
            }], source: [{
                type: Input
            }], filters: [{
                type: Input
            }], audioController: [{
                type: Input
            }] } });
export class NgtAudioControllerModule {
}
NgtAudioControllerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioControllerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NgtAudioControllerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioControllerModule, declarations: [NgtAudioController], exports: [NgtAudioController] });
NgtAudioControllerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioControllerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NgtAudioControllerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgtAudioController],
                    exports: [NgtAudioController],
                }]
        }] });
export const [NGT_AUDIO_WATCHED_CONTROLLER, NGT_AUDIO_CONTROLLER_PROVIDER] = createControllerProviderFactory({
    watchedControllerTokenName: 'Watched AudioController',
    controller: NgtAudioController,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaW8uY29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9jb250cm9sbGVycy9hdWRpby5jb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7QUFDWixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLFVBQVUsRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFTM0UsTUFBTSxPQUFPLGtCQUFtQixTQUFRLFVBQVU7SUFQbEQ7O1FBU1csV0FBTSxHQUF1QixJQUFJLENBQUM7UUFDbEMsV0FBTSxHQUFHLENBQUMsQ0FBQztRQUNYLFNBQUksR0FBRyxLQUFLLENBQUM7UUFDYixjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsWUFBTyxHQUFHLENBQUMsQ0FBQztRQUNaLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCxhQUFRLEdBQXVCLFNBQVMsQ0FBQztRQUN6QyxpQkFBWSxHQUFHLENBQUMsQ0FBQztRQUNqQixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUMxQixlQUFVLEdBQUcsT0FBTyxDQUFDO1FBQ3JCLFdBQU0sR0FBaUMsSUFBSSxDQUFDO1FBQzVDLFlBQU8sR0FBZ0IsRUFBRSxDQUFDO0tBMEJwQztJQXRCQyxJQUFJLEtBQUs7UUFDUCxPQUFPO1lBQ0wsVUFBVTtZQUNWLFFBQVE7WUFDUixRQUFRO1lBQ1IsTUFBTTtZQUNOLFdBQVc7WUFDWCxTQUFTO1lBQ1QsUUFBUTtZQUNSLFVBQVU7WUFDVixjQUFjO1lBQ2QsV0FBVztZQUNYLG9CQUFvQjtZQUNwQixZQUFZO1lBQ1osUUFBUTtZQUNSLFNBQVM7U0FDVixDQUFDO0lBQ0osQ0FBQztJQUVELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUM5QixDQUFDOzsrR0F2Q1Usa0JBQWtCO21HQUFsQixrQkFBa0I7MkZBQWxCLGtCQUFrQjtrQkFQOUIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUU7OztHQUdUO29CQUNELFFBQVEsRUFBRSxvQkFBb0I7aUJBQy9COzhCQUVVLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxJQUFJO3NCQUFaLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLGtCQUFrQjtzQkFBMUIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLE1BQU07c0JBQWQsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBRUcsZUFBZTtzQkFBdkIsS0FBSzs7QUE4QlIsTUFBTSxPQUFPLHdCQUF3Qjs7cUhBQXhCLHdCQUF3QjtzSEFBeEIsd0JBQXdCLGlCQTlDeEIsa0JBQWtCLGFBQWxCLGtCQUFrQjtzSEE4Q2xCLHdCQUF3QjsyRkFBeEIsd0JBQXdCO2tCQUpwQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGtCQUFrQixDQUFDO29CQUNsQyxPQUFPLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztpQkFDOUI7O0FBR0QsTUFBTSxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRSw2QkFBNkIsQ0FBQyxHQUN4RSwrQkFBK0IsQ0FBQztJQUM5QiwwQkFBMEIsRUFBRSx5QkFBeUI7SUFDckQsVUFBVSxFQUFFLGtCQUFrQjtDQUMvQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHRU5FUkFURURcbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sbGVyLCBjcmVhdGVDb250cm9sbGVyUHJvdmlkZXJGYWN0b3J5IH0gZnJvbSAnLi9jb250cm9sbGVyJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBgXG4gICAgbmd0LWF1ZGlvLFxuICAgIG5ndC1wb3NpdGlvbmFsLWF1ZGlvLFxuICBgLFxuICBleHBvcnRBczogJ25ndEF1ZGlvQ29udHJvbGxlcicsXG59KVxuZXhwb3J0IGNsYXNzIE5ndEF1ZGlvQ29udHJvbGxlciBleHRlbmRzIENvbnRyb2xsZXIge1xuICBASW5wdXQoKSBhdXRvcGxheT86IGJvb2xlYW47XG4gIEBJbnB1dCgpIGJ1ZmZlcjogbnVsbCB8IEF1ZGlvQnVmZmVyID0gbnVsbDtcbiAgQElucHV0KCkgZGV0dW5lID0gMDtcbiAgQElucHV0KCkgbG9vcCA9IGZhbHNlO1xuICBASW5wdXQoKSBsb29wU3RhcnQgPSAwO1xuICBASW5wdXQoKSBsb29wRW5kID0gMDtcbiAgQElucHV0KCkgb2Zmc2V0ID0gMDtcbiAgQElucHV0KCkgZHVyYXRpb246IG51bWJlciB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgcGxheWJhY2tSYXRlID0gMTtcbiAgQElucHV0KCkgaXNQbGF5aW5nID0gZmFsc2U7XG4gIEBJbnB1dCgpIGhhc1BsYXliYWNrQ29udHJvbCA9IHRydWU7XG4gIEBJbnB1dCgpIHNvdXJjZVR5cGUgPSAnZW1wdHknO1xuICBASW5wdXQoKSBzb3VyY2U6IG51bGwgfCBBdWRpb0J1ZmZlclNvdXJjZU5vZGUgPSBudWxsO1xuICBASW5wdXQoKSBmaWx0ZXJzOiBBdWRpb05vZGVbXSA9IFtdO1xuXG4gIEBJbnB1dCgpIGF1ZGlvQ29udHJvbGxlcj86IE5ndEF1ZGlvQ29udHJvbGxlcjtcblxuICBnZXQgcHJvcHMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXG4gICAgICAnYXV0b3BsYXknLFxuICAgICAgJ2J1ZmZlcicsXG4gICAgICAnZGV0dW5lJyxcbiAgICAgICdsb29wJyxcbiAgICAgICdsb29wU3RhcnQnLFxuICAgICAgJ2xvb3BFbmQnLFxuICAgICAgJ29mZnNldCcsXG4gICAgICAnZHVyYXRpb24nLFxuICAgICAgJ3BsYXliYWNrUmF0ZScsXG4gICAgICAnaXNQbGF5aW5nJyxcbiAgICAgICdoYXNQbGF5YmFja0NvbnRyb2wnLFxuICAgICAgJ3NvdXJjZVR5cGUnLFxuICAgICAgJ3NvdXJjZScsXG4gICAgICAnZmlsdGVycycsXG4gICAgXTtcbiAgfVxuXG4gIGdldCBjb250cm9sbGVyKCk6IENvbnRyb2xsZXIgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmF1ZGlvQ29udHJvbGxlcjtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtOZ3RBdWRpb0NvbnRyb2xsZXJdLFxuICBleHBvcnRzOiBbTmd0QXVkaW9Db250cm9sbGVyXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd0QXVkaW9Db250cm9sbGVyTW9kdWxlIHt9XG5cbmV4cG9ydCBjb25zdCBbTkdUX0FVRElPX1dBVENIRURfQ09OVFJPTExFUiwgTkdUX0FVRElPX0NPTlRST0xMRVJfUFJPVklERVJdID1cbiAgY3JlYXRlQ29udHJvbGxlclByb3ZpZGVyRmFjdG9yeSh7XG4gICAgd2F0Y2hlZENvbnRyb2xsZXJUb2tlbk5hbWU6ICdXYXRjaGVkIEF1ZGlvQ29udHJvbGxlcicsXG4gICAgY29udHJvbGxlcjogTmd0QXVkaW9Db250cm9sbGVyLFxuICB9KTtcbiJdfQ==