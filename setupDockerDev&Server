Creating DockerFile.dev

Dockerfile.dev
    FROM node:14.17

    ARG WORK_DIR=/app
    ENV PATH ${WORK_DIR}/node_modules/.bin:$PATH

    RUN mkdir ${WORK_DIR}
    WORKDIR ${WORK_DIR}

    COPY package.json ${WORK_DIR}
    COPY package-lock.json ${WORK_DIR}

    RUN npm install @angular/cli
    RUN npm install

    COPY . ${WORK_DIR}

    EXPOSE 4200

    CMD ng serve --host 0.0.0.0

Create a .dockerignore file and copy stuff from .gitignore

Coommand to run docker file
    -docker run --rm -p 4200:4200 $(docker build -q -f Dockerfile.dev .)

Creating Dockerfile server

Dockerfile 
    FROM node:14.17

    ARG WORK_DIR=/server
    ENV WORK_DIR ${WORK_DIR}

    RUN mkdir ${WORK_DIR}
    WORKDIR ${WORK_DIR}

    COPY package*.json ${WORK_DIR}

    RUN npm install

    COPY . ${WORK_DIR}

    EXPOSE 3000

    RUN npm install -g nodemon

    CMD npm start

Create .dockerignore file  
    /node_modules
    /npm-debug.log

//wont run on local have to make online db
//mongodb (network access)ip address sud be set to access from anywhere

docker run --rm -p 3000:3000 $(docker build -q .)

DockerCompose

    version: '3.9'

services:
  docker-app:
    build:
      context: app #name of app
      dockerfile: Dockerfile.dev
    ports:
      - '4200:4200'
    volumes:
      - ./app/src:/app/src 
      # map both directory local and container

  docker-server:
    build:
      context: server
      dockerfile: Dockerfile
    # restart: always
    environment: 
      PORT: 3000
      MONGODB_URI: mongodb://mongo:27017/rojesh
      JWT_SECRET: mysupersecretkey
    ports:
      - 3000:3000
    depends_on: 
      - mongo
    volumes:
      - ./server:/server
    # environment: 
    #   - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017/rojesh

  mongo:
    container_name: mongo-server
    image: mongo:latest
    ports:
      - 27017:27017
    # restart: always

docker-compose up --build

